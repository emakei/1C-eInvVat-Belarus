
&НаКлиенте
Процедура ИмпортироватьСертификат(Команда)
    
    ТекСтрока = ТекущийЭлемент.ТекущаяСтрока;
    Если ТекСтрока = Неопределено Тогда
        Владелец = Неопределено
    Иначе
        Владелец = ТекСтрока.Владелец
    КонецЕсли;
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикВыбораСертификата", ЭтаФорма, Владелец);
    ЭСЧФКлиент.ВыбратьФайлСертификата(ОписаниеОповещения);
    
КонецПроцедуры

// Осуществляет обработку выбора файла сертификата
//
// Параметры:
//  ВыбранныеФайлы  - Массив – массив выбранных имен файлов или Неопределено, если выбор не осуществлен. 
//  ДополнительныеПараметры - Произвольный - значение, которое было указано при создании объекта ОписаниеОповещения.
//
&НаКлиенте
Процедура ОбработчикВыбораСертификата(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    Если ВыбранныеФайлы = Неопределено Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Файлы не выбраны";
        Сообщение.Сообщить();
        Возврат
    КонецЕсли;
    
    Путь = ВыбранныеФайлы[0];
    
    Файл = Новый Файл(Путь);
    
    Если Не Файл.Существует() Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Файл """ + Путь + """ не найден";
        Сообщение.Сообщить(); 
        Возврат
    КонецЕсли;
    
    Если Файл.ЭтоКаталог() Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = """" + Путь + """ не является файлом";
        Сообщение.Сообщить(); 
        Возврат
    КонецЕсли;
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ПослеИнициализацииСертификатаИзФайла", ЭтаФорма, ДополнительныеПараметры);
    
    ДвоичныеДанные = Новый ДвоичныеДанные(Путь);
    АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);

    СертификатКриптографии = Новый СертификатКриптографии;
    СертификатКриптографии.НачатьИнициализацию(ОписаниеОповещения, Путь);
    
КонецПроцедуры // ОбработчикВыбораСертификата()

&НаКлиенте
Процедура ИмпортироватьНесколькоСертификатов(Команда)
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикВыбораСертификата", ЭтаФорма);
    ЭСЧФКлиент.ВыбратьФайлСертификата(ОписаниеОповещения, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикЗаполненияСертификата(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
        Возврат
    КонецЕсли;
    
    СоздатьСертификатИзФайла(ДополнительныеПараметры);

КонецПроцедуры // ОбработчикЗаполненияСертификата()

&НаСервере
Процедура СоздатьСертификатИзФайла(ДополнительныеПараметры)
    
    Перем Сертификат, Владелец;
    
    Если Не ДополнительныеПараметры.Свойство("Владелец", Владелец)
        Или Не ДополнительныеПараметры.Свойство("Сертификат", Сертификат) Тогда
        
        Возврат
    КонецЕсли;
    
    Если ЗначениеЗаполнено(Сертификат) Тогда
        СправочникОбъект = Сертификат.ПолучитьОбъект();
        СправочникОбъект.РасширенныеСвойства.Очистить()
    Иначе
        СправочникОбъект = Справочники.СертификатыКриптографии.СоздатьЭлемент()
    КонецЕсли;
    
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
    СертификатКриптографии = Новый СертификатКриптографии(ДвоичныеДанные);
    
    ЗаполнитьЗначенияСвойств(СправочникОбъект, СертификатКриптографии, "Версия, ДатаНачала, ДатаОкончания, ИспользоватьДляПодписи, ИспользоватьДляШифрования");
    
    СертификатКриптографии.Издатель.Свойство("CN", СправочникОбъект.ИздательИмя);
    СертификатКриптографии.Издатель.Свойство("O",  СправочникОбъект.ИздательНаименованиеОрганизации);
    СертификатКриптографии.Издатель.Свойство("OU", СправочникОбъект.ИздательНаименованиеПодразделениеОрганизации);
    СертификатКриптографии.Издатель.Свойство("C",  СправочникОбъект.ИздательНаименованиеСтраны);
    СертификатКриптографии.Издатель.Свойство("ST", СправочникОбъект.ИздательНаименованиеОбласти);
    СертификатКриптографии.Издатель.Свойство("L",  СправочникОбъект.ИздательНаименованиеМестонахождения);
    СертификатКриптографии.Издатель.Свойство("E",  СправочникОбъект.ИздательЭлектронныйАдрес);
    СертификатКриптографии.Издатель.Свойство("SN", СправочникОбъект.ИздательПсевдоним);
    СертификатКриптографии.Издатель.Свойство("GN", СправочникОбъект.ИздательСобственноеИмя);
    СертификатКриптографии.Издатель.Свойство("T",  СправочникОбъект.ИздательНазвание);
    
    СтепеньСжатия = Новый СжатиеДанных(0);
    
    ОткрытыйКлюч = Новый ХранилищеЗначения(СертификатКриптографии.ОткрытыйКлюч, СтепеньСжатия);
    СправочникОбъект.ОткрытыйКлюч = ОткрытыйКлюч;
    
    Отпечаток = Новый ХранилищеЗначения(СертификатКриптографии.Отпечаток, СтепеньСжатия);
    СправочникОбъект.Отпечаток = Отпечаток;
    
    РасширенныеСвойства = СертификатКриптографии.РасширенныеСвойства.EKU;
    Для й=0 По РасширенныеСвойства.ВГраница() Цикл
        Значение = РасширенныеСвойства.Получить(й);    
        НоваяСтрока = СправочникОбъект.РасширенныеСвойства.Добавить();
        НоваяСтрока.Значение = Значение
    КонецЦикла;
    
    СерийныйНомер = Новый ХранилищеЗначения(СертификатКриптографии.СерийныйНомер, СтепеньСжатия);
    СправочникОбъект.СерийныйНомер = СерийныйНомер;
    
    СертификатКриптографии.Субъект.Свойство("CN", СправочникОбъект.СубъектИмя);
    СертификатКриптографии.Субъект.Свойство("O",  СправочникОбъект.СубъектНаименованиеОрганизации);
    СертификатКриптографии.Субъект.Свойство("OU", СправочникОбъект.СубъектНаименованиеПодразделениеОрганизации);
    СертификатКриптографии.Субъект.Свойство("C",  СправочникОбъект.СубъектНаименованиеСтраны);
    СертификатКриптографии.Субъект.Свойство("ST", СправочникОбъект.СубъектНаименованиеОбласти);
    СертификатКриптографии.Субъект.Свойство("L",  СправочникОбъект.СубъектНаименованиеМестонахождения);
    СертификатКриптографии.Субъект.Свойство("E",  СправочникОбъект.СубъектЭлектронныйАдрес);
    СертификатКриптографии.Субъект.Свойство("SN", СправочникОбъект.СубъектПсевдоним);
    СертификатКриптографии.Субъект.Свойство("GN", СправочникОбъект.СубъектСобственноеИмя);
    СертификатКриптографии.Субъект.Свойство("T",  СправочникОбъект.СубъектНазвание);
    
    СправочникОбъект.ПолучитьФорму().Открыть();
    
КонецПроцедуры // СоздатьСертификатИзФайла()

&НаКлиенте
Процедура ПослеИнициализацииСертификатаИзФайла(СертификатКриптографии, ДополнительныеПараметры) Экспорт
    
    Перем Сертификат;
    
    Если ДополнительныеПараметры <> Неопределено Тогда
        Сертификат = ЭСЧФСервер.НайтиСертификат(СертификатКриптографии.СерийныйНомер, ДополнительныеПараметры)
    КонецЕсли;
    
    ПараметрыОбработкиСертификата = Новый Структура("Сертификат, Владелец", Сертификат, ДополнительныеПараметры);
    
    Если ЗначениеЗаполнено(Сертификат) Тогда
        ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикЗаполненияСертификата", ЭтаФорма, ПараметрыОбработкиСертификата);
        ПоказатьВопрос(ОписаниеОповещения, "Такой сертификат уже присутствует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена,,, "Импорт сертификата");
    Иначе 
        ОбработчикЗаполненияСертификата(КодВозвратаДиалога.Да, ПараметрыОбработкиСертификата);
    КонецЕсли;
    
КонецПроцедуры