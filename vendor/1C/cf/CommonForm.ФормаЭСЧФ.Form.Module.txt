
&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если Элемент.ТекущаяОбласть.Имя = "КЭСЧФ" И ТипЗнч(Расшифровка) = Тип("ДокументСсылка.ПакетИсходящихЭСЧФ") Тогда
		СтандартнаяОбработка = Ложь;
		ЭСЧФклиент.ПоказатьЭСЧФпоНомеру(Элемент.ТекущаяОбласть.Текст);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// данные отложенного обмена
	МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
	МенеджерЗагрузитьСтатус.Организация = Организация;
	МенеджерНомераВыгрузить = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
	МенеджерНомераВыгрузить.Организация = Организация;
	МенеджерЗагрузитьСтатус.Номер = НомерЭСЧФ;
	МенеджерЗагрузитьСтатус.Прочитать();
	ОбменСтатус = МенеджерЗагрузитьСтатус.Выбран();
	МенеджерНомераВыгрузить.Номер = НомерЭСЧФ;
	МенеджерНомераВыгрузить.Прочитать();
	ОбменВыгрузить = МенеджерНомераВыгрузить.Выбран();
	
	// поиск статуса документа
	Квитанция = РегистрыСведений.Квитанции.СоздатьМенеджерЗаписи();
	ЭСЧФобщий.РазложитьНомер(НомерЭСЧФ, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
	Квитанция.Прочитать();
	Если Квитанция.Выбран() Тогда
		Статус = Квитанция.Статус;
		ДатаСостояния = Квитанция.ДатаСостояния;
	КонецЕсли;
	
	ВывестиДанные();
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ВывестиДанные()

	ТабличныйДокумент.Очистить();
	
	Макет = ПолучитьОбщийМакет("ФормаЭСЧФ");
	
	Раздел1 = Макет.ПолучитьОбласть("Раздел1");
	Раздел2 = Макет.ПолучитьОбласть("Раздел2");
	Раздел3 = Макет.ПолучитьОбласть("Раздел3");
	
	Раздел1.Параметры.Заполнить(Документ);
	Примечания = Новый Соответствие;
	ТекстПримечания = "";
	
	Для каждого Ошибка Из Ошибки Цикл
		Если ПустаяСтрока(Ошибка.Поле) Тогда
			ТекстПримечания = ТекстПримечания+ Ошибка.Текст;
		Иначе
			Значение = Примечания.Получить(Ошибка.Поле);
			Если Значение = Неопределено Тогда
				Примечания.Вставить(Ошибка.Поле, Ошибка.Текст);
			Иначе
				Примечания.Вставить(Ошибка.Поле, Значение + Символы.ПС + Ошибка.Текст);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Раздел1.Параметры.ДатаВыставленияЭСЧФ = ДатаВыставления;
	Если Не ПустаяСтрока(ТекстСтатуса) Тогда
		Раздел1.Области.ДатаВыставленияЭСЧФ.Примечание.Текст = ТекстСтатуса;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстПримечания) Тогда
		Раздел1.Области.НомерЭСЧФ.Примечание.Текст = ТекстПримечания;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрЗаменить(Документ.КЭСЧФ, "-", "")) Тогда
		
		лУНП    = Неопределено;
		лГод    = Неопределено;
		лНомер  = Неопределено;
		ЭСЧФобщий.РазложитьНомер(Документ.КЭСЧФ, лГод, лУНП, лНомер);
		
		ЗапросКЭСЧФ = Новый Запрос("ВЫБРАТЬ
		|	НомераЭСЧФ.Регистратор КАК Документ
		|ИЗ
		|	РегистрСведений.НомераЭСЧФ КАК НомераЭСЧФ
		|ГДЕ
		|	НомераЭСЧФ.Год = &Год
		|	И НомераЭСЧФ.Объект = &Объект
		|	И НомераЭСЧФ.Номер = &Номер");
		ЗапросКЭСЧФ.УстановитьПараметр("Год",    лГод);
		ЗапросКЭСЧФ.УстановитьПараметр("Объект", лУНП);
		ЗапросКЭСЧФ.УстановитьПараметр("Номер",  лНомер);
		
		ВыборкаКЭСЧФ = ЗапросКЭСЧФ.Выполнить().Выбрать();
		
		Если ВыборкаКЭСЧФ.Следующий() Тогда
			Раздел1.Параметры.инфКЭСЧФ = ВыборкаКЭСЧФ.Документ;
		КонецЕсли;
		
	КонецЕсли;
	Раздел1.Параметры.Документ = ДокументОснование;
	
	Раздел2.Параметры.Заполнить(Документ);
	Если ЗначениеЗаполнено(СтрЗаменить(Документ.ПоставщикНомерСчетаКомитента, "-", "")) Тогда
		Раздел2.Параметры.инфПоставщикНомерСчетаКомитента = Документы.ЭлектронныйСчетФактураПолученный.НайтиПоНомеру(Документ.ПоставщикНомерСчетаКомитента)
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрЗаменить(Документ.ПоставщикНомерСчетаПродавца, "-", "")) Тогда
		Раздел2.Параметры.инфПоставщикНомерСчетаПродавца = Документы.ЭлектронныйСчетФактураПолученный.НайтиПоНомеру(Документ.ПоставщикНомерСчетаПродавца)
	КонецЕсли;
	Раздел2.Параметры.Организация = Организация;
	Раздел3.Параметры.Заполнить(Документ);
	Раздел3.Параметры.Контрагент = Контрагент;
	
	Для каждого Область Из Раздел1.Области Цикл
		Примечание = Примечания.Получить(Область.Имя);
		Если Примечание <> Неопределено Тогда
			Область.Примечание.Текст = Примечание;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Область Из Раздел2.Области Цикл
		Примечание = Примечания.Получить(Область.Имя);
		Если Примечание <> Неопределено Тогда
			Область.Примечание.Текст = Примечание;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Область Из Раздел3.Области Цикл
		Примечание = Примечания.Получить(Область.Имя);
		Если Примечание <> Неопределено Тогда
			Область.Примечание.Текст = Примечание;
		КонецЕсли;
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Раздел1);
	ТабличныйДокумент.Вывести(Раздел2);
	ТабличныйДокумент.Вывести(Раздел3);
	
	Раздел4Шапка        = Макет.ПолучитьОбласть("Раздел4Шапка");
	Раздел4ЛеваяШапка   = Макет.ПолучитьОбласть("Раздел4ЛеваяШапка");
	Раздел4ПраваяШапка  = Макет.ПолучитьОбласть("Раздел4ПраваяШапка");
	Раздел4ЛеваяСтрока  = Макет.ПолучитьОбласть("Раздел4ЛеваяСтрока");
	Раздел4ПраваяСтрока = Макет.ПолучитьОбласть("Раздел4ПраваяСтрока");
	Раздел4ЛеваяПодвал  = Макет.ПолучитьОбласть("Раздел4ЛеваяПодвал");
	Раздел4ПраваяПодвал = Макет.ПолучитьОбласть("Раздел4ПраваяПодвал");
	
	Примечание = Примечания.Получить("Грузоотправители");
	Если Примечание <> Неопределено Тогда
		Раздел4ЛеваяШапка.Области.Раздел4ЛеваяШапка.Примечание.Текст = Примечание;
	КонецЕсли;
	
	Примечание = Примечания.Получить("Грузополучатели");
	Если Примечание <> Неопределено Тогда
		Раздел4ПраваяШапка.Области.Раздел4ПраваяШапка.Примечание.Текст = Примечание;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Раздел4Шапка);
	
	ТаблицаГрузоотправителей = Новый ТабличныйДокумент;
	ТаблицаГрузоотправителей.Вывести(Раздел4ЛеваяШапка);
	
	Для каждого Грузоотправитель Из Грузоотправители Цикл
		Раздел4ЛеваяСтрока.Параметры.Заполнить(Грузоотправитель);
		Раздел4ЛеваяСтрока.Параметры.инфКодСтраны = Справочники.КлассификаторСтранМира.НайтиПоКоду(Грузоотправитель.КодСтраны);
		ТаблицаГрузоотправителей.Вывести(Раздел4ЛеваяСтрока)
	КонецЦикла;
	
	ТаблицаГрузоотправителей.Вывести(Раздел4ЛеваяПодвал);
	ТабличныйДокумент.Присоединить(ТаблицаГрузоотправителей);
	
	ТаблицаГрузополучателей = Новый ТабличныйДокумент;
	ТаблицаГрузополучателей.Вывести(Раздел4ПраваяШапка);
	
	Для каждого Грузополучатель Из Грузополучатели Цикл
		Раздел4ПраваяСтрока.Параметры.Заполнить(Грузополучатель);
		Раздел4ПраваяСтрока.Параметры.инфКодСтраны = Справочники.КлассификаторСтранМира.НайтиПоКоду(Грузополучатель.КодСтраны);
		ТаблицаГрузополучателей.Вывести(Раздел4ПраваяСтрока)
	КонецЦикла;
	
	ТаблицаГрузополучателей.Вывести(Раздел4ПраваяПодвал);
	ТабличныйДокумент.Присоединить(ТаблицаГрузополучателей);
	
	Раздел5Шапка        = Макет.ПолучитьОбласть("Раздел5Шапка");
	Раздел5ЛеваяДоговор = Макет.ПолучитьОбласть("Раздел5ЛеваяДоговор");
	Раздел5ЛеваяШапка   = Макет.ПолучитьОбласть("Раздел5ЛеваяШапка");
	Раздел5ЛеваяСтрока  = Макет.ПолучитьОбласть("Раздел5ЛеваяСтрока");
	Раздел5ЛеваяПодвал  = Макет.ПолучитьОбласть("Раздел5ЛеваяПодвал");
	Раздел5Правая       = Макет.ПолучитьОбласть("Раздел5Правая");
	
	Для каждого Область Из Раздел5ЛеваяДоговор.Области Цикл
		Примечание = Примечания.Получить(Область.Имя);
		Если Примечание <> Неопределено Тогда
			Область.Примечание.Текст = Примечание;
		КонецЕсли;
	КонецЦикла;
	
	Примечание = Примечания.Получить("ДокументыПодтверждающиеПоставку");
	Если Примечание <> Неопределено Тогда
		Раздел5Шапка.Области.Раздел5Шапка.Примечание.Текст = Примечание;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Раздел5Шапка);
	
	ТаблицаУсловияПоставки = Новый ТабличныйДокумент;
	Раздел5ЛеваяДоговор.Параметры.Заполнить(Документ);
	Раздел5ЛеваяДоговор.Параметры.Договор = ДоговорКонтрагента;
	ТаблицаУсловияПоставки.Вывести(Раздел5ЛеваяДоговор);
	ТаблицаУсловияПоставки.Вывести(Раздел5ЛеваяШапка);
	
	Для каждого ДокументПоставки Из ДокументыПодтверждающиеПоставку Цикл
		Раздел5ЛеваяСтрока.Параметры.Заполнить(ДокументПоставки);
		ТаблицаУсловияПоставки.Вывести(Раздел5ЛеваяСтрока)
	КонецЦикла;
	
	ТаблицаУсловияПоставки.Вывести(Раздел5ЛеваяПодвал);
	ТабличныйДокумент.Присоединить(ТаблицаУсловияПоставки);
	
	Раздел5Правая.Параметры.Заполнить(Документ);
	Примечание = Примечания.Получить("ДополнительныеСведения");
	Если Примечание <> Неопределено Тогда
		Раздел5ЛеваяШапка.Области.ДополнительныеСведения.Примечание.Текст = Примечание;
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(Раздел5Правая);
	
	Раздел6Шапка         = Макет.ПолучитьОбласть("Раздел6Шапка");
	Раздел6ШапкаТаблицы  = Макет.ПолучитьОбласть("Раздел6ШапкаТаблицы");
	Раздел6СтрокаТаблицы = Макет.ПолучитьОбласть("Раздел6СтрокаТаблицы");
	Раздел6ПодвалТаблицы = Макет.ПолучитьОбласть("Раздел6ПодвалТаблицы");
	
	ТабличныйДокумент.Вывести(Раздел6Шапка);
	
	ТаблицаТоваров = Новый ТабличныйДокумент;
	ТаблицаТоваров.Вывести(Раздел6ШапкаТаблицы);
	
	ПримечанияСтрок = Новый ТаблицаЗначений;
	ПримечанияСтрок.Колонки.Добавить("НомСтр", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	Для каждого Область Из Раздел6СтрокаТаблицы.Области Цикл
		ПримечанияСтрок.Колонки.Добавить(Область.Имя, Новый ОписаниеТипов("Строка"));
		Примечание = Примечания.Получить(Область.Имя);
		Если Примечание <> Неопределено Тогда
			Текст = Новый ТекстовыйДокумент;
			Текст.УстановитьТекст(Примечание);
			Для ит = 1 По Текст.КоличествоСтрок() Цикл
				Строка = Текст.ПолучитьСтроку(ит);
				ПГр = Найти(Строка, "]");
				НомСтр = Число(Сред(Строка, 5, ПГр - 5));
				НоваяСтрока = ПримечанияСтрок.Добавить();
				НоваяСтрока.НомСтр = НомСтр;
				НоваяСтрока[Область.Имя] = Прав(Строка, СтрДлина(Строка) - ПГр - 1);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Отбор = Новый Структура;
	
	Для каждого СтрокаТовара Из Товары Цикл
		
		Раздел6СтрокаТаблицы.Параметры.Заполнить(СтрокаТовара);
		ДопСведения = "";
		Если СтрокаТовара.ВычетВПолномОбъеме Тогда
			ДопСведения = "Вычет в полном объёме";
			КонецЕсли;Если СтрокаТовара.ОсвобождениеОтНДС Тогда
			ДопСведения = ДопСведения + Символы.ПС + "Освобождение от НДС";
		КонецЕсли;
		Если СтрокаТовара.РеализацияЗаПределамиРБ Тогда
			ДопСведения = ДопСведения + Символы.ПС + "Реализация за пределами РБ";
		КонецЕсли;
		Если СтрокаТовара.ВвознойНДС Тогда
			ДопСведения = ДопСведения + Символы.ПС + "Ввозной НДС";
		КонецЕсли;
		Раздел6СтрокаТаблицы.Параметры.ДополнительныеСведения = ДопСведения;
		
		Для каждого Область Из Раздел6СтрокаТаблицы.Области Цикл
			Область.Примечание.Текст = ""
		КонецЦикла;
		
		Отбор.Вставить("НомСтр", СтрокаТовара.НомерСтроки);
		СтрокиПр = ПримечанияСтрок.НайтиСтроки(Отбор);
		Для каждого СтрокаПр Из СтрокиПр Цикл
			Для каждого Колонка Из ПримечанияСтрок.Колонки Цикл
				Если Колонка.Имя = "НомерСтроки" Или Колонка.Имя = "НомСтр" Или ПустаяСтрока(СтрокаПр[Колонка.Имя]) Тогда
					Продолжить;
				КонецЕсли;
				Раздел6СтрокаТаблицы.Области[Колонка.Имя].Примечание.Текст = СтрокаПр[Колонка.Имя];
			КонецЦикла;
		КонецЦикла;
		
		ТаблицаТоваров.Вывести(Раздел6СтрокаТаблицы)
		
	КонецЦикла;
	
	Если Не ИтогиВРеквизитах Тогда
		Раздел6ПодвалТаблицы.Параметры.ИтогоСтоимость     = Товары.Итог("Стоимость");
		Раздел6ПодвалТаблицы.Параметры.ИтогоСуммаАкциза   = Товары.Итог("СуммаАкциза");
		Раздел6ПодвалТаблицы.Параметры.ИтогоСуммаНДС      = Товары.Итог("СуммаНДС");
		Раздел6ПодвалТаблицы.Параметры.ИтогоСтоимостьСНДС = Товары.Итог("СтоимостьСНДС");
	Иначе
		Раздел6ПодвалТаблицы.Параметры.ИтогоСтоимость     = ИтогоСтоимость;
		Раздел6ПодвалТаблицы.Параметры.ИтогоСуммаАкциза   = ИтогоСуммаАкциза;
		Раздел6ПодвалТаблицы.Параметры.ИтогоСуммаНДС      = ИтогоСуммаНДС;
		Раздел6ПодвалТаблицы.Параметры.ИтогоСтоимостьСНДС = ИтогоСтоимостьСНДС;
	КонецЕсли;
	
	ТаблицаТоваров.Вывести(Раздел6ПодвалТаблицы);
	
	ТабличныйДокумент.Присоединить(ТаблицаТоваров);
	
	ОбластьДокумента = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ШиринаТаблицы, ТабличныйДокумент.ВысотаТаблицы);
	ОбластьДокумента.Узор = ТипУзораТабличногоДокумента.Сплошной;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокумент(Команда)

	//лОшибки = Новый Массив;
	//Ошибки.Очистить();
	//Если Не ЭСЧФобщий.ЭСЧФСоответствуетПротоколу(Документ, ОтправительУНП, Товары, Грузоотправители, Грузополучатели
	//											, ДокументыПодтверждающиеПоставку, Истина, Истина,, лОшибки) Тогда
	//	ТипСтруктура = Тип("Структура");
	//	Для каждого цОшибка Из лОшибки Цикл
	//		Сообщение = Новый СообщениеПользователю;
	//		НС = Ошибки.Добавить();
	//		Если ТипЗнч(цОшибка) = ТипСтруктура Тогда
	//			НС.Поле = цОшибка.Поле; //имя реквизита
	//			НС.Текст = цОшибка.Текст;
	//			Сообщение.Поле = цОшибка.Поле; //имя реквизита
	//			Сообщение.Текст = цОшибка.Текст;
	//		Иначе
	//			НС.Текст = цОшибка;
	//			Сообщение.Текст = цОшибка;
	//		КонецЕсли;
	//		Сообщение.УстановитьДанные(ДокументСсылка); //Ссылка на объект ИБ
	//		Сообщение.Сообщить();
	//	КонецЦикла;
	//КонецЕсли;
	//
	//ВывестиДанные();

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВXML(Команда)

	//Если Не РежимРаботы Или РежимРаботы = 2 Тогда
	//	ЭСЧФклиент.ВыгрузитьДокументВФайлДиалог(Документ,,, ОтправительУНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, Истина)
	//Иначе
	//	ОсновнойКаталогПользователя = ДополнительныеСлужебныеПроцедурыИФункции.ПолучитьЗначениеНастрокиПоНаименованию(ПараметрыСеанса.ТекущийПользователь, "Основной каталог файлов пользователя", Истина);
	//	Если Не ВвестиЗначение(ОсновнойКаталогПользователя, "Введите полный путь выгрузки файла относительно сервера (с именем и расширением)", Тип("Строка")) Тогда
	//		Возврат
	//	КонецЕсли;
	//	ЭСЧФобщий.ВыгрузитьДокументВФайлДиалог(Документ, ОсновнойКаталогПользователя,, ОтправительУНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, Истина)
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПодписатьИОтправить(Команда)

	ОчиститьСообщения();
	Если ДокументСсылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отправить можно только записанный документ";
		Сообщение.Сообщить();
		Перейти ~ВыходБезЗавершения;
	КонецЕсли;
	// авторизация и подключение
	Если РежимРаботы = 2 Тогда
		// авторизация не нужна
		МенеджерНомераВыгрузить = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
		МенеджерНомераВыгрузить.Организация = Организация;
		МенеджерНомераВыгрузить.Номер = НомерЭСЧФ;
		Если Не ОбменВыгрузить Тогда
			МенеджерНомераВыгрузить.Прочитать();
			Если МенеджерНомераВыгрузить.Выбран() Тогда
				МенеджерНомераВыгрузить.КоличествоОбновлений = МенеджерНомераВыгрузить.КоличествоВыгрузок + 1;
			Иначе
				МенеджерНомераВыгрузить.Организация = Организация;
				МенеджерНомераВыгрузить.Номер = НомерЭСЧФ;
				МенеджерНомераВыгрузить.КоличествоОбновлений = 1;
			КонецЕсли;
			МенеджерНомераВыгрузить.Записать(Истина);
			ОбменВыгрузить = Истина;
		Иначе
			МенеджерНомераВыгрузить.Удалить();
			ОбменВыгрузить = Ложь;
		КонецЕсли;
		УправлениеФормой();
		Перейти ~ВыходБезЗавершения;
	КонецЕсли;
	//ИначеЕсли Не РежимРаботы И ЭСЧФклиент.ПриАвторизацииПоОрганизации(Организация) Тогда
	//	Отказ = Ложь;
	//	ТекстОшибки = "";
	//	ПриПодключенииКСервису(Отказ, ТекстОшибки);
	//	Если Отказ Тогда
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = ТекстОшибки;
	//		Сообщение.Сообщить();
	//		Перейти ~Выход;
	//	КонецЕсли;
	//ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
	//	Перейти ~Выход;
	//ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
	//	Перейти ~Выход;
	//ИначеЕсли РежимРаботы И Не ЭСЧФсервер.ПриАвторизацииПоОрганизации(Организация) Тогда
	//	Перейти ~Выход;
	//КонецЕсли;
	//// отправка документа
	//Отказ  = Ложь;
	//Принят = Ложь;
	//лОшибки = "";
	//Ответ  = "";
	//ИмяФайлаОтвета = "";
	//Если Не РежимРаботы Тогда
	//	ЭСЧФклиент.СформироватьПодписатьОтправитьДокумент(Документ, Отказ, лОшибки,, ОтправительУНП, Товары, Грузоотправители
	//														, Грузополучатели, ДокументыПодтверждающиеПоставку,, Принят, Ответ, ИмяФайлаОтвета);
	//Иначе
	//	ЭСЧФсервер.СформироватьПодписатьОтправитьДокумент(Документ, Отказ, лОшибки, , ОтправительУНП, Товары, Грузоотправители
	//														, Грузополучатели, ДокументыПодтверждающиеПоставку,, Принят, Ответ, ИмяФайлаОтвета)
	//КонецЕсли;
	//
	//Если Отказ Или Не Принят Тогда
	//	Для каждого Ошибка Из лОшибки Цикл
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = Ошибка;
	//		Сообщение.Сообщить();
	//	КонецЦикла;
	//Иначе
	//	ЭСЧФобщий.ОтразитьВыставлениеДокумента(ДокументСсылка, ТекущаяДатаСеанса(), НомерЭСЧФ);
	//КонецЕсли;
	//
	//~Выход:
	//Если Не РежимРаботы Тогда
	//	ПриЗавершенииАвторизации(Отказ, лОшибки);
	//Иначе
	//	ЭСЧФсервер.ПриЗавершенииАвторизацииНаСервере()
	//КонецЕсли;
	//
	~ВыходБезЗавершения:

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусДокумента(Команда)

	// авторизация и подключение
	Если РежимРаботы = 2 Тогда
		// авторизация не нужна
		МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
		МенеджерЗагрузитьСтатус.Организация = Организация;
		МенеджерЗагрузитьСтатус.Номер = НомерЭСЧФ;
		Если Не ОбменСтатус Тогда
			МенеджерЗагрузитьСтатус.Записать(Истина);
			ОбменСтатус = Истина;
		Иначе
			МенеджерЗагрузитьСтатус.Удалить();
			ОбменСтатус = Ложь;
		КонецЕсли;
		УправлениеФормой();
		Перейти ~ВыходБезЗавершения;
	КонецЕсли;
	//ИначеЕсли Не РежимРаботы И ЭСЧФклиент.ПриАвторизацииПоОрганизации(Организация) Тогда
	//	Отказ = Ложь;
	//	ТекстОшибки = "";
	//	ПриПодключенииКСервису(Отказ, ТекстОшибки);
	//	Если Отказ Тогда
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = ТекстОшибки;
	//		Сообщение.Сообщить();
	//		Перейти ~Выход;
	//	КонецЕсли;
	//ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
	//	Перейти ~Выход;
	//ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
	//	Перейти ~Выход;
	//ИначеЕсли РежимРаботы И Не ЭСЧФсервер.ПриАвторизацииПоОрганизации(Организация) Тогда
	//	Перейти ~Выход;
	//КонецЕсли;
	//
	//ТекстОтвета = "";
	//ТекстОшибки = "";
	//Принят = Ложь;
	//Если Не РежимРаботы Тогда
	//	Отказ = ( Не ЭСЧФклиент.ОбновитьДанныеОСтатусеДокумента(НомерЭСЧФ,, ДатаСостояния, Статус,, ТекстОшибки) );
	//Иначе
	//	Отказ = ( Не ЭСЧФсервер.ОбновитьДанныеОСтатусеДокумента(НомерЭСЧФ,, ДатаСостояния, Статус,, ТекстОшибки) );
	//КонецЕсли;
	//
	//Если Отказ Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = ТекстОшибки;
	//	Сообщение.Сообщить();
	//КонецЕсли;
	//~Выход:
	//ТекстОшибки = "";
	//ПриЗавершенииАвторизации(Отказ, ТекстОшибки);
	//Если Отказ Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = ТекстОшибки;
	//	Сообщение.Сообщить();
	//КонецЕсли;
	~ВыходБезЗавершения:

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	РежимРаботы = ЭСЧФсервер.РежимРаботыПоУмолчаниюЭСЧФ();
	МассивНеРедактироватьСтатусы.ЗагрузитьЗначения( ЭСЧФобщий.НеРедактироватьСтатусы() );

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаКлиенте(Команда)

	Отказ = Ложь;
	Ошибка = "";
	ПодключитьКомпонентыДоступаКПорталуЭСФЧ(Отказ, Ошибка);
	Если Не Отказ Тогда
		РежимРаботы = 0;
		УправлениеФормой();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Ошибка;
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаСервере(Команда)
	РежимРаботы = 1;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыОтложенный(Команда)
	РежимРаботы = 2;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()

	Элементы.ФормаПодменюОбменДанными.Доступность = ( РежимРаботы = 2 );
	Элементы.ФормаУстановитьРежимРаботыНаКлиенте.Пометка  = ( РежимРаботы = 0 );
	Элементы.ФормаУстановитьРежимРаботыНаСервере.Пометка  = ( РежимРаботы = 1 );
	Элементы.ФормаУстановитьРежимРаботыОтложенный.Пометка = ( РежимРаботы = 2 );
	
	Если РежимРаботы = 2 Тогда
		
		Если ОбменВыгрузить Тогда
			Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отменить отправку";
			Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отправить документ";
			Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		КонецЕсли;
		
		Если ОбменСтатус Тогда
			Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Отменить обновление";
			Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Обновить статус";
			Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		КонецЕсли;
		
	Иначе
		
		Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отправить документ";
		Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Обновить статус";
		Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СообщитьОшибки(Команда)
	Для каждого цОшибка Из Ошибки Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ?(ПустаяСтрока(цОшибка.Поле), "", цОшибка.Поле + ": ") + цОшибка.Текст;
		Сообщение.Сообщить();
	КонецЦикла;
КонецПроцедуры
