
////////////////////////////////////////////////////////////////////////////////
//
// Процедура ЗагрузитьДанныеВЭСЧФ
//
// Описание:
//  производит загрузку данных в документ "ЭлектронныйСчетФактураВыданный"
//
// Параметры (название, тип, дифференцированное значение)
//  ИмяФайла - Строка - имя файла *.xml для загрузки данных в документ
//  Кодировка - Строка - наименование кодировки файла
//  Отказ - Булево - происходили ли ошибки при загрузке
//
Процедура ЗагрузитьДанныеВЭСЧФ( ИмяФайла, Кодировка = "utf-8", Отказ = Ложь )

	ЧтениеФайла = Новый ЧтениеXML;
	ЧтениеФайла.ОткрытьФайл( ИмяФайла,,, Кодировка );

	Если Не ЧтениеФайла.Прочитать() Или ЧтениеФайла.Имя <> "issuance" Тогда
		// если не удалось прочитать узел или имя корневого узла не соответствует схеме
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Отправитель = ЧтениеФайла.ПолучитьАтрибут("sender");
	Если Отправитель = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН", Отправитель);
	Если Организация.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ЧтениеФайла.Прочитать();
	Если ЧтениеФайла.Имя <> "general" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ЕстьНомер = Ложь;
	ЕстьДатаОперации = Ложь;
	цНомер = Ложь;
	цДатаОперации = Ложь;
	ПолныйНомер = "";
	ДатаОперацииСтр = "";

	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если ЧтениеФайла.Имя = "general" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			// если элемент "general" полностью прочитан
			Прервать;
		ИначеЕсли ЧтениеФайла.Имя = "number" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			цНомер = Истина;
		ИначеЕсли цНомер И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ПолныйНомер = ЧтениеФайла.Значение;
			ЕстьНомер = Истина;
			цНомер = Ложь;
		ИначеЕсли ЧтениеФайла.Имя = "dateTransaction" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			цДатаОперации = Истина;
		ИначеЕсли цДатаОперации И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ДатаОперацииСтр = ЧтениеФайла.Значение;
			ЕстьДатаОперации = Истина;
			цДатаОперации = Ложь;
		КонецЕсли;
		
		Если ЕстьНомер И ЕстьДатаОперации Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	Если Не ( ЕстьНомер И ЕстьДатаОперации ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	РеквизитСтатусОтправителя = Ложь;
	СтатусОтправителяСтр = Неопределено;
	РеквизитыПолучателя = Ложь;

	Пока ЧтениеФайла.Имя <> "provider" И ЧтениеФайла.Прочитать() Цикл
		// переходим к чтению данных отправителя
	КонецЦикла;

	// читаем значение статуса отправителя
	Если ЧтениеФайла.Имя <> "provider" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если РеквизитСтатусОтправителя И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтатусОтправителяСтр = ЧтениеФайла.Значение;
		ИначеЕсли ЧтениеФайла.Имя = "providerStatus" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтатусОтправителя = Истина;
		ИначеЕсли ЧтениеФайла.Имя = "providerStatus" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Перейти ~ЧтениеДанныхПолучателя;
		КонецЕсли;
		
	КонецЦикла;

	~ЧтениеДанныхПолучателя:

	СтатусыОтправителя = Новый Соответствие;
	Перечисления.СтатусыПоставщикаЭСЧФ.ПолучитьЗначенияДляЗаполненияУзловXML(СтатусыОтправителя);

	СтатусОтправителя = Неопределено;
	Для каждого КлючИЗначение Из СтатусыОтправителя Цикл
		Если СтатусОтправителяСтр = КлючИЗначение.Значение Тогда
			СтатусОтправителя = КлючИЗначение.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если СтатусОтправителя = Неопределено Тогда
		СтатусОтправителя = ПредопределенноеЗначение("Перечисление.СтатусыПоставщикаЭСЧФ.Продавец");
		//Отказ = Истина;
		//Возврат;
	КонецЕсли;

	Пока ЧтениеФайла.Имя <> "recipient" И ЧтениеФайла.Прочитать() Цикл
		// переходим к чтению реквизитов получателя
	КонецЦикла;

	РеквизитПолучателя = 0;
	СтатусПолучателяСтр = "";
	КодСтраныПолучателя = "";
	УНПполучателя = "";
	Получатель = "";
	ЮрАдресПолучателя = "";

	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если РеквизитПолучателя = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтатусПолучателяСтр = ЧтениеФайла.Значение;
			РеквизитПолучателя = 0;
		ИначеЕсли РеквизитПолучателя = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			КодСтраныПолучателя = ЧтениеФайла.Значение;
			РеквизитПолучателя = 0;
		ИначеЕсли РеквизитПолучателя = 3 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			УНПполучателя = ЧтениеФайла.Значение;
			РеквизитПолучателя = 0;
		ИначеЕсли РеквизитПолучателя = 4 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Получатель = ЧтениеФайла.Значение;
			РеквизитПолучателя = 0;
		ИначеЕсли РеквизитПолучателя = 5 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ЮрАдресПолучателя = ЧтениеФайла.Значение;
			РеквизитПолучателя = 0;
		ИначеЕсли ЧтениеФайла.Имя = "recipientStatus" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитПолучателя = 1;
		ИначеЕсли ЧтениеФайла.Имя = "countryCode" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитПолучателя = 2;
		ИначеЕсли ЧтениеФайла.Имя = "unp" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитПолучателя = 3;
		ИначеЕсли ЧтениеФайла.Имя = "name" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитПолучателя = 4;
		ИначеЕсли ЧтениеФайла.Имя = "address" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитПолучателя = 5;
		ИначеЕсли ЧтениеФайла.Имя = "recipient" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	СтатусыПолучателя = Новый Соответствие;
	Перечисления.СтатусыПолучателяЭСЧФ.ПолучитьЗначенияДляЗаполненияУзловXML(СтатусыПолучателя);

	СтатусПолучателя = Неопределено;
	Для каждого КлючИЗначение Из СтатусыПолучателя Цикл
		Если СтатусПолучателяСтр = КлючИЗначение.Значение Тогда
			СтатусПолучателя = КлючИЗначение.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если СтатусПолучателя = Неопределено Тогда
		СтатусПолучателя = ПредопределенноеЗначение("Перечисление.СтатусыПолучателяЭСЧФ.Покупатель");
		//Отказ = Истина;
		//Возврат;
	КонецЕсли;

	Пока ЧтениеФайла.Имя <> "consignors" И ЧтениеФайла.Прочитать() Цикл
		// переходим к чтению данных грузоотправителя
	КонецЦикла;

	// читаем значение статуса отправителя
	Если ЧтениеФайла.Имя <> "consignors" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ЕстьГрузоотправительГрузополучатель = Ложь;
	// читаем грузоотправителя
	Если Не ЧтениеФайла.Прочитать() Или ЧтениеФайла.Имя <> "consignor" Тогда
		Перейти ~УсловияПоставки;
	КонецЕсли;

	ГрузоотправительКодСтраны = "";
	ГрузоотправительУНП = "";
	Грузоотправитель = "";
	АдресОтправки = "";
	РеквизитГрузоотправителя = 0;
	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если РеквизитГрузоотправителя = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ГрузоотправительКодСтраны = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли РеквизитГрузоотправителя = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ГрузоотправительУНП = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
			ЕстьГрузоотправительГрузополучатель = Истина;
		ИначеЕсли РеквизитГрузоотправителя = 3 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Грузоотправитель = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли РеквизитГрузоотправителя = 4 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			АдресОтправки = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли ЧтениеФайла.Имя = "countryCode" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 1;
		ИначеЕсли ЧтениеФайла.Имя = "unp" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 2;
		ИначеЕсли ЧтениеФайла.Имя = "name" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 3;
		ИначеЕсли ЧтениеФайла.Имя = "address" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 4;
		ИначеЕсли ЧтениеФайла.Имя = "consignor" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	// читаем грузополучателя
	Если Не ЧтениеФайла.Прочитать() Или Не ЧтениеФайла.Прочитать() Или Не ЧтениеФайла.Прочитать() Или ЧтениеФайла.Имя <> "consignee" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ГрузополучательКодСтраны = "";
	ГрузополучательУНП = "";
	Грузополучатель = "";
	АдресДоставки = "";
	РеквизитГрузоотправителя = 0;
	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если РеквизитГрузоотправителя = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ГрузополучательКодСтраны = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли РеквизитГрузоотправителя = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			ГрузополучательУНП = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли РеквизитГрузоотправителя = 3 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Грузополучатель = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли РеквизитГрузоотправителя = 4 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			АдресДоставки = ЧтениеФайла.Значение;
			РеквизитГрузоотправителя = 0;
		ИначеЕсли ЧтениеФайла.Имя = "countryCode" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 1;
		ИначеЕсли ЧтениеФайла.Имя = "unp" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 2;
		ИначеЕсли ЧтениеФайла.Имя = "name" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 3;
		ИначеЕсли ЧтениеФайла.Имя = "address" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитГрузоотправителя = 4;
		ИначеЕсли ЧтениеФайла.Имя = "consignee" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	~УсловияПоставки:
	ДоговорДатаСтр = "";
	ДоговорНомер = "";
	КодВидаДокументаСтр = "";
	НакладнаяДатаСтр = "";
	НакладнаяКодБландкаСтр = "";
	НакладнаяСерия = "";
	НакладнаяНомер = "";
	// читаем условия поставки
	Если Не ЧтениеФайла.Прочитать() Или Не ЧтениеФайла.Прочитать() Или Не ЧтениеФайла.Прочитать() Или ЧтениеФайла.Имя <> "deliveryCondition" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ЭтоДокументПоставки = Ложь;
	ЕстьДокументПоставки = Ложь;

	РеквизитУсловийПоставки = 0;

	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если ЕстьДокументПоставки Тогда
			
			// данные получены, читаем до конца раздела
			
		ИначеЕсли ЭтоДокументПоставки Тогда
			
			// чтение реквизитов документа
			Если РеквизитУсловийПоставки = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				КодВидаДокументаСтр = ЧтениеФайла.Значение;
				РеквизитУсловийПоставки = 0;
			//ИначеЕсли РеквизитУсловийПоставки = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			//	НаименованиеВидаДокумента = ЧтениеФайла.Значение;
			//	РеквизитУсловийПоставки = 0;
			ИначеЕсли РеквизитУсловийПоставки = 3 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				НакладнаяДатаСтр = ЧтениеФайла.Значение;
				РеквизитУсловийПоставки = 0;
			ИначеЕсли РеквизитУсловийПоставки = 4 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				НакладнаяКодБландкаСтр = ЧтениеФайла.Значение;
				РеквизитУсловийПоставки = 0;
			ИначеЕсли РеквизитУсловийПоставки = 5 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				НакладнаяСерия = СокрЛП(ЧтениеФайла.Значение);
				РеквизитУсловийПоставки = 0;
			ИначеЕсли РеквизитУсловийПоставки = 6 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				НакладнаяНомер = СокрЛП(ЧтениеФайла.Значение);
				РеквизитУсловийПоставки = 0;
			ИначеЕсли ЧтениеФайла.Имя = "code" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 1;
			//ИначеЕсли ЧтениеФайла.Имя = "value" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			//	РеквизитУсловийПоставки = 2;
			ИначеЕсли ЧтениеФайла.Имя = "date" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 3;
			ИначеЕсли ЧтениеФайла.Имя = "blankCode" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 4;
			ИначеЕсли ЧтениеФайла.Имя = "seria" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 5;
			ИначеЕсли ЧтениеФайла.Имя = "number" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 6;
			ИначеЕсли ЧтениеФайла.Имя = "document" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
				ЭтоДокументПоставки = Ложь;
				ЕстьДокументПоставки = Истина;
			КонецЕсли;
			
		Иначе
			
			// чтение реквизитов договора
			Если РеквизитУсловийПоставки = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				ДоговорНомер = ЧтениеФайла.Значение;
				РеквизитУсловийПоставки = 0;
			ИначеЕсли РеквизитУсловийПоставки = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				ДоговорДатаСтр = ЧтениеФайла.Значение;
				РеквизитУсловийПоставки = 0;
			ИначеЕсли ЧтениеФайла.Имя = "number" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 1;
			ИначеЕсли ЧтениеФайла.Имя = "date" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				РеквизитУсловийПоставки = 2;
			ИначеЕсли ЧтениеФайла.Имя = "document" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЭтоДокументПоставки = Истина;	
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЧтениеФайла.Имя = "deliveryCondition" И ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	// если нету документа поставки, то не загружаем
	Если Не ЕстьДокументПоставки Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	// читаем таблицу товаров
	Если Не ЧтениеФайла.Прочитать() Или ЧтениеФайла.Имя <> "roster" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	// проверяем не загружен ли уже документ
	// если документ загружен, то проверям не отправлен ли на портал
	// если не отправлен, то перезаписываем, иначе ничего не делаем
	ЗапросДокумент = Новый Запрос;
	ЗапросДокумент.УстановитьПараметр("Серия", НакладнаяСерия);
	ЗапросДокумент.УстановитьПараметр("Номер", НакладнаяНомер);
	ЗапросДокумент.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Ссылка КАК Документ,
	|	ЕСТЬNULL(ВыставленныеДокументы.Принят, ЛОЖЬ) КАК Принят
	|ИЗ
	|	Документ.ЭлектронныйСчетФактураВыданный.ДокументыПодтверждающиеПоставку КАК ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыставленныеДокументы КАК ВыставленныеДокументы
	|		ПО ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Ссылка.НомерГод = ВыставленныеДокументы.Год
	|			И ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Ссылка.НомерОбъект = ВыставленныеДокументы.Объект
	|			И ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Ссылка.НомерНомер = ВыставленныеДокументы.Номер
	|ГДЕ
	|	ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Серия = &Серия
	|	И ЭлектронныйСчетФактураВыданныйДокументыПодтверждающиеПоставку.Номер = &Номер";

	РезультатЗапросаДокумент = ЗапросДокумент.Выполнить();

	Если Не РезультатЗапросаДокумент.Пустой() Тогда
		ВыборкаДокумент = РезультатЗапросаДокумент.Выбрать();
		ВыборкаДокумент.Следующий();
		Если ВыборкаДокумент.Принят Тогда
			Отказ = Истина;
			Возврат;
		Иначе
			ДокументОбъект = ВыборкаДокумент.Документ.ПолучитьОбъект();
		КонецЕсли;
	Иначе
		ДокументОбъект = Документы.ЭлектронныйСчетФактураВыданный.СоздатьДокумент();
	КонецЕсли;

	// все необходимые данные получены, теперь загрузим документ
	Попытка
		
		ДокументОбъект.ОбменГрузоотправителиГрузополучатели = Истина;
		ДокументОбъект.ОбменДокументыПоставки = Истина;
		ДокументОбъект.ОбменТовары = Истина;
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.ТипЭСЧФ = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный");
		//{[+](фрагмент добавлен), Макей Евгений Владимирович 02.11.2016 13:28:58
		// отразим вид операции по-умолчанию
		ДокументОбъект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Реализация");
		//}Макей Евгений Владимирович 02.11.2016 13:28:58
		Если ЕстьДатаОперации Тогда
			ДокументОбъект.ДатаСовершенияОперацииЭСЧФ = Дата(Лев(ДатаОперацииСтр, 4), Сред(ДатаОперацииСтр, 6, 2), Прав(ДатаОперацииСтр, 2));
		Иначе
			ДокументОбъект.ДатаСовершенияОперацииЭСЧФ = ДокументОбъект.Дата;
		КонецЕсли;
		КодАналитики = Сред(ПолныйНомер, 16, 4);
		ДокументОбъект.Склад = Справочники.ю_02_КодаАналитики.НайтиПоРеквизиту("КодАналитики", КодАналитики).Склад;
		//Если ДокументОбъект.Склад.Пустой() Тогда
		//	ТекстИсключения = "Не найден склад по коду: " + КодАналитики;
		//	ВызватьИсключение ТекстИсключения;
		//КонецЕсли;
		
		ДокументОбъект.Организация = Организация;
		Если Организация.СтранаРегистрации.Пустая() Тогда
			ДокументОбъект.ПоставщикКодСтраны = "112";
		Иначе
			ДокументОбъект.ПоставщикКодСтраны = Организация.СтранаРегистрации.Код;
		КонецЕсли;
		ДокументОбъект.ПоставщикУНП = Отправитель;
		ДокументОбъект.Поставщик = Организация.НаименованиеПолное;
		ДокументОбъект.ПоставщикЮридическийАдрес = УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Организация, "Юридический");
		ДокументОбъект.ПоставщикРезидентОффшорнойЗоны = Организация.РезидентОффшорнойЗоны;
		ДокументОбъект.ПоставщикВзаимозависимоеЛицо = ЭСЧФсервер.Взаимозависимы(ДокументОбъект.Дата, Отправитель, УНПполучателя);
		ДокументОбъект.ПоставщикВходитВПереченьКрупныхПлательщиков = ЭСЧФсервер.ВходитВПереченьКрупныхПлательщиков(ДокументОбъект.Дата, Отправитель);
		ДокументОбъект.ПоставщикСтатус  = СтатусОтправителя;
		
		ДокументОбъект.ПолучательСтатус = СтатусПолучателя;
		ДокументОбъект.ПолучательУНП = УНПполучателя;
		ДокументОбъект.ПолучательКодСтраны = КодСтраныПолучателя;
		ДокументОбъект.Получатель = Получатель;
		ДокументОбъект.ПолучательЮридическийАдрес = ЮрАдресПолучателя;
		ДокументОбъект.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", УНПполучателя);
		Если ДокументОбъект.Контрагент.СтранаРегистрации.Пустая() Тогда
			ДокументОбъект.ПолучательКодСтраны = "112";
		Иначе
			ДокументОбъект.ПолучательКодСтраны = ДокументОбъект.Контрагент.СтранаРегистрации.Код;
		КонецЕсли;
		
		ДокументОбъект.Грузоотправители.Очистить();
		ДокументОбъект.Грузополучатели.Очистить();
		Если ЕстьГрузоотправительГрузополучатель Тогда
			
			СтрГрузоотправитель = ДокументОбъект.Грузоотправители.Добавить();
			СтрГрузоотправитель.КодСтраны = ГрузоотправительКодСтраны;
			СтрГрузоотправитель.УНП = ГрузоотправительУНП;
			СтрГрузоотправитель.Наименование = Грузоотправитель;
			СтрГрузоотправитель.АдресОтправки = АдресОтправки;
			
			СтрГрузополучатель = ДокументОбъект.Грузополучатели.Добавить();
			СтрГрузополучатель.КодСтраны = ГрузополучательКодСтраны;
			СтрГрузополучатель.УНП = ГрузополучательУНП;
			СтрГрузополучатель.Наименование = Грузополучатель;
			СтрГрузополучатель.АдресДоставки = АдресДоставки;
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ДоговорДатаСтр) Тогда
			ДоговорГод = Лев(ДоговорДатаСтр, 4);
			ДоговорМесяц = Сред(ДоговорДатаСтр, 6, 2);
			ДоговорДень = Прав(ДоговорДатаСтр, 2);
			Если Не ПустаяСтрока(ДоговорГод) И Не ПустаяСтрока(ДоговорМесяц) И Не ПустаяСтрока(ДоговорДень) Тогда
				ДокументОбъект.ДоговорДата = Дата(ДоговорГод, ДоговорМесяц, ДоговорДень);
			Иначе
				ДокументОбъект.ДоговорДата = Неопределено;
			КонецЕсли;
		Иначе
			ДокументОбъект.ДоговорДата = Неопределено;
		КонецЕсли;
		ДокументОбъект.ДоговорНомер = ДоговорНомер;
		
		ДокументОбъект.ДокументыПодтверждающиеПоставку.Очистить();
		СтрДокумент = ДокументОбъект.ДокументыПодтверждающиеПоставку.Добавить();
		СтрДокумент.ТипБСО = Справочники.БланкиДокументов.НайтиПоКоду(НакладнаяКодБландкаСтр);//ТипыБСО.НайтиПоКоду(КодВидаДокументаСтр);
		Если Не ПустаяСтрока(НакладнаяДатаСтр) Тогда
			НакладнаяГод = Лев(НакладнаяДатаСтр, 4);
			НакладнаяМесяц = Сред(НакладнаяДатаСтр, 6, 2);
			НакладнаяДень = Прав(НакладнаяДатаСтр, 2);
			Если Не ПустаяСтрока(НакладнаяГод) И Не ПустаяСтрока(НакладнаяМесяц) И Не ПустаяСтрока(НакладнаяДень) Тогда
				СтрДокумент.Дата = Дата(НакладнаяГод, НакладнаяМесяц, НакладнаяДень);
			КонецЕсли;
		КонецЕсли;
		СтрДокумент.КодТипаБланка = Справочники.ТипыБСО.НайтиПоКоду(КодВидаДокументаСтр);//БланкиДокументов.НайтиПоКоду(НакладнаяКодБландкаСтр);
		СтрДокумент.Серия = НакладнаяСерия;
		СтрДокумент.Номер = НакладнаяНомер;
		
	Исключение
		
		Отказ = Истина;
		Возврат;
		
	КонецПопытки;

	// документ создан, теперь загрузим товары
	Пока ЧтениеФайла.ПрочитатьАтрибут() Цикл
		
		Если ЧтениеФайла.Имя = "totalCostVat" Тогда
			ДокументОбъект.ИтогоСтоимостьСНДС = Число(ЧтениеФайла.Значение);
		ИначеЕсли ЧтениеФайла.Имя = "totalExcise" Тогда
			ДокументОбъект.ИтогоСуммаАкциза = Число(ЧтениеФайла.Значение);
		ИначеЕсли ЧтениеФайла.Имя = "totalVat" Тогда
			ДокументОбъект.ИтогоСуммаНДС = Число(ЧтениеФайла.Значение);
		ИначеЕсли ЧтениеФайла.Имя = "totalCost" Тогда
			ДокументОбъект.ИтогоСтоимость = Число(ЧтениеФайла.Значение);
		КонецЕсли;
		
	КонецЦикла;

	СтрТовары = Неопределено;
	РеквизитСтроки = 0;

	ТипыСтавок = Новый Соответствие;
	Перечисления.ТипыСтавокНДСЭСЧФ.ПолучитьЗначенияДляЗаполненияУзловXML(ТипыСтавок);

	ДокументОбъект.Товары.Очистить();
	Пока ЧтениеФайла.Прочитать() Цикл
		
		Если ЧтениеФайла.Имя = "rosterItem" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			СтрТовары = ДокументОбъект.Товары.Добавить();
			СтрТовары.Товар = "";
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 1 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.Товар = ЧтениеФайла.Значение;
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 2 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Длина = СтрДлина(ЧтениеФайла.Значение);
			НовыйТекст = "";
			Если Длина >= 4 Тогда
				НовыйТекст = Лев(ЧтениеФайла.Значение, 4)
			КонецЕсли;
			Если Длина >= 6 Тогда
				НовыйТекст = НовыйТекст + " " + Сред(ЧтениеФайла.Значение, 5, 2)
			КонецЕсли;
			Если Длина >= 9 Тогда
				НовыйТекст = НовыйТекст + " " + Сред(ЧтениеФайла.Значение, 7, 3)
			КонецЕсли;
			Если Длина = 10 Тогда
				НовыйТекст = НовыйТекст + " " + Прав(ЧтениеФайла.Значение, 1)
			КонецЕсли;
			СтрТовары.КодТНВЭДЕАЭС = Справочники.КлассификаторТНВЭДТС.НайтиПоКоду(НовыйТекст);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 3 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.Количество = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 4 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.Цена = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 5 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.Стоимость = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 6 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.СуммаАкциза = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 7 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.ПроцентНДС = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 8 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Для каждого ТипСтавки Из ТипыСтавок Цикл
				Если ТипСтавки.Значение = ЧтениеФайла.Значение Тогда
					СтрТовары.ТипСтавкиНДС = ТипСтавки.Ключ; 
				КонецЕсли;
			КонецЦикла;
			Если ЧтениеФайла.Значение = "NO_VAT" Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
			ИначеЕсли ЧтениеФайла.Значение = "CALCULATED" Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.РасчетнаяСтавка");
			ИначеЕсли ЧтениеФайла.Значение = "ZERO" Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС0");
			ИначеЕсли СтрТовары.ПроцентНДС = 9.09 Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС909");
			ИначеЕсли СтрТовары.ПроцентНДС = 10 Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС10");
			ИначеЕсли СтрТовары.ПроцентНДС = 16.67 Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС1667");
			ИначеЕсли СтрТовары.ПроцентНДС = 20 Тогда
				СтрТовары.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20");
			КонецЕсли;
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 9 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.СуммаНДС = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 10 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			СтрТовары.СтоимостьСНДС = Число(ЧтениеФайла.Значение);
			РеквизитСтроки = 0;
		ИначеЕсли РеквизитСтроки = 11 И ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
			Если ЧтениеФайла.Значение = "DEDUCTION_IN_FULL" Тогда
				СтрТовары.ВычетВПолномОбъеме = Истина;
			ИначеЕсли ЧтениеФайла.Значение = "VAT_EXEMPTION" Тогда
				СтрТовары.ОсвобождениеОтНДС = Истина;
			ИначеЕсли ЧтениеФайла.Значение = "OUTSIDE_RB" Тогда
				СтрТовары.РеализацияЗаПределамиРБ = Истина;
			ИначеЕсли ЧтениеФайла.Значение = "IMPORT_VAT" Тогда
				СтрТовары.ВвознойНДС = Истина;
			КонецЕсли;
			РеквизитСтроки = 0;
		ИначеЕсли ЧтениеФайла.Имя = "name" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 1;
		ИначеЕсли ЧтениеФайла.Имя = "code" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 2;
		ИначеЕсли ЧтениеФайла.Имя = "count" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 3;
		ИначеЕсли ЧтениеФайла.Имя = "price" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 4;
		ИначеЕсли ЧтениеФайла.Имя = "cost" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 5;
		ИначеЕсли ЧтениеФайла.Имя = "summaExcise" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 6;
		ИначеЕсли ЧтениеФайла.Имя = "rate" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 7;
		ИначеЕсли ЧтениеФайла.Имя = "rateType" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 8;
		ИначеЕсли ЧтениеФайла.Имя = "summaVat" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 9;
		ИначеЕсли ЧтениеФайла.Имя = "costVat" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 10;
		ИначеЕсли ЧтениеФайла.Имя = "description" И ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РеквизитСтроки = 11;
		КонецЕсли;
		
	КонецЦикла;

	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	// если включен отложенный режим проведения, то отразим необходимость отправки данных на портал
	Если Константы.РежимРаботыПоУмолчаниюЭСЧФ.Получить() = 2 Тогда
		
		МенеджерНомераВыгрузить = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
		МенеджерНомераВыгрузить.Организация = Организация;
		МенеджерНомераВыгрузить.Номер = ДокументОбъект.НомерЭСЧФ;
		МенеджерНомераВыгрузить.Прочитать();
		Если МенеджерНомераВыгрузить.Выбран() Тогда
			МенеджерНомераВыгрузить.КоличествоОбновлений = МенеджерНомераВыгрузить.КоличествоВыгрузок + 1;
		Иначе
			МенеджерНомераВыгрузить.Организация = Организация;
			МенеджерНомераВыгрузить.Номер = ДокументОбъект.НомерЭСЧФ;
			МенеджерНомераВыгрузить.КоличествоОбновлений = 1;
		КонецЕсли;
		МенеджерНомераВыгрузить.Записать(Истина);
		
		МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
		МенеджерЗагрузитьСтатус.Организация = Организация;
		МенеджерЗагрузитьСтатус.Номер = ДокументОбъект.НомерЭСЧФ;
		МенеджерЗагрузитьСтатус.Записать(Истина);
		
	КонецЕсли;

КонецПроцедуры //ЗагрузитьДанныеВЭСЧФ
