
// Электронные счета-фактуры по НДС
Перем EInvVatService Экспорт;
Перем EInvVatAuthorized Экспорт;
Перем EInvVatConnected Экспорт;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ГЛОБАЛЬНОГО КОНТЕКСТА

// Процедура - обработчик события "При завершением работы системы".
//
Процедура ПриЗавершенииРаботыСистемы()
	// Электронные счета-фактуры по НДС
	Если EInvVatConnected Или EInvVatAuthorized Тогда
		ПриЗавершенииАвторизации()
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "При начале работы системы".
//
Процедура ПриНачалеРаботыСистемы()
	// Электронные счета-фактуры по НДС
	ЭСЧФсервер.УстановитьПараметрыСеансаДляОбменаЭСЧФ();
	Если ЭСЧФсервер.ДоступноПодписаниеИОбменЭСЧФ() И Не ЭСЧФсервер.РежимРаботыПоУмолчаниюЭСЧФ() = 2 Тогда
		врСообщениеОбОшибке = "";
		врОтказ = Ложь;
		ПодключитьКомпонентыДоступаКПорталуЭСФЧ(врОтказ, врСообщениеОбОшибке);
		Если ЗначениеЗаполнено(врСообщениеОбОшибке) Тогда
			Сообщить(врСообщениеОбОшибке, СтатусСообщения.Важное);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриНачалеРаботыСистемы()

// Электронные счета-фактуры по НДС

// Процедура авторизации в хранилище
//
// Параметры:
//  Отказ  - Булево - признак ошибки операции
//  ИдентификаторОткрытогоКлюча - Строка - идентификатор открытого ключа для авторизации в шестнадцатиричном виде
//  ОбщееИмя - Строка - отрибут "Common Name" из сертификата
//  ПарольКЛичномуКлючу - Строка - пароль к личному ключу
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура ПриАвторизации(Отказ = Ложь, ИдентификаторОткрытогоКлюча = Неопределено, ОбщееИмя = Неопределено, ПарольКЛичномуКлючу = Неопределено
                         , ТекстОшибки = Неопределено, Поле = Неопределено) Экспорт

    ПараметрыПодключения = "";
    Если ЗначениеЗаполнено(ИдентификаторОткрытогоКлюча) Тогда
        ПараметрыПодключения = "PUB_KEY_ID=" + ИдентификаторОткрытогоКлюча
    КонецЕсли;
    Если ЗначениеЗаполнено(ОбщееИмя) Тогда
        ПараметрыПодключения = ПараметрыПодключения + ";COMMON_NAME=" + ОбщееИмя
    КонецЕсли;
    Если ЗначениеЗаполнено(ПарольКЛичномуКлючу) Тогда
        ПараметрыПодключения = ПараметрыПодключения + ";PASSWORD_KEY=" + ПарольКЛичномуКлючу
    КонецЕсли;
    
    EInvVatAuthorized = ( EInvVatService.Login(ПараметрыПодключения, ЭСЧФобщий.ФлагиАвторизации()) = 0 );
    Если Не EInvVatAuthorized Тогда
        врТекстОшибки = "Ошибка авторизации: " + EInvVatService.LastError;
        ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
    КонецЕсли;
    Отказ = Не EInvVatAuthorized;

КонецПроцедуры // ПриАвторизации

// Процедура завершения авторизации
//
// Параметры:
//  Отказ  - Булево - признак ошибки операции
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура ПриЗавершенииАвторизации(Отказ = Ложь, ТекстОшибки = Неопределено, Поле = Неопределено) Экспорт

    // завершение поключения к сервису
    Если EInvVatConnected Тогда
        ПриЗакрытииПодключенияКСервису(Отказ, ТекстОшибки);
    КонецЕсли;
    // завершение авторизации
    EInvVatAuthorized = ( EInvVatService.Logout <> 0 );
    Если EInvVatAuthorized Тогда
        врТекстОшибки = "Ошибка при завершении авторизованной сессии: " + EInvVatService.LastError;
        ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
    КонецЕсли;
    Отказ = ( EInvVatConnected Или EInvVatAuthorized );

КонецПроцедуры // ПриЗавершенииАвторизации

// Процедура подключения компоненты
//
// Параметры:
//  Отказ  - Булево - признак ошибки операции
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура ПодключитьКомпонентыДоступаКПорталуЭСФЧ(Отказ = Ложь, ТекстОшибки = Неопределено, Поле = Неопределено) Экспорт

	Попытка
		EInvVatService = Новый COMОбъект("EInvVatService.Connector");
		Отказ = Ложь;
	Исключение
		EInvVatService = Неопределено;
		врТекстОшибки = "На компьютере не обнаружены компоненты, необходимые для доступа к порталу ЭСФЧ!";
		ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
		Отказ = Истина;
	КонецПопытки

КонецПроцедуры // ПодключитьКомпонентыДоступаКПорталуЭСФЧ()

// Процедура подключении к web-сервису
//
// Параметры:
//  Отказ  - Булево - признак ошибки операции
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура ПриПодключенииКСервису(Отказ = Ложь, ТекстОшибки = Неопределено, Поле = Неопределено) Экспорт

	Если Константы.ИспользоватьПроксиСерверЭСЧФ.Получить() Тогда
		ЭСЧФобщий.УстановитьПараметрыПроксиСервера( Константы.АдресПроксиСервераЭСЧФ.Получить(), Константы.ПортПроксиСервераЭСЧФ.Получить()
													, Константы.ИмяПользователяПроксиСервераЭСЧФ.Получить(), Константы.ПарольПользователяПроксиСервераЭСЧФ.Получить()
													, Константы.ТипПроксиСервераЭСЧФ.Получить() );
	КонецЕсли;
	
	EInvVatConnected = ( EInvVatService.Connect(ПараметрыСеанса.WSurl) = 0 );
	Если Не EInvVatConnected Тогда
		врТекстОшибки = "Ошибка подключения: " + EInvVatService.LastError;
		ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
	КонецЕсли;
	Отказ = ( Не EInvVatConnected );

КонецПроцедуры

// Процедура завершения авторизации web-сервиса
//
// Параметры:
//  Отказ  - Булево - признак ошибки операции
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура ПриЗакрытииПодключенияКСервису(Отказ = Ложь, ТекстОшибки = Неопределено, Поле = Неопределено) Экспорт

    EInvVatConnected = ( EInvVatService.Disconnect <> 0 );
    Если EInvVatConnected Тогда
        врТекстОшибки = "Ошибка закрытия подключения: " + EInvVatService.LastError;
        ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
    КонецЕсли;
    Отказ = EInvVatConnected;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//
// Процедура УстановитьПараметрСервиса
//
// Описание:
//  устанавливает значение параметра сервиса обмена данными с по-средствам вызова "SetServiceProperty"
//
// Параметры (название, тип, дифференцированное значение)
//  Отказ  - Булево - признак ошибки операции
//  ТекстОшибки  - Строка, Массив - переменная для записи ошибки
//  Поле  - Строка, Неопределено - к какому элементу относиться ошибка
//
Процедура УстановитьПараметрСервиса( Параметр = "connection.readTimeout", Значение = 100, Отказ = Ложь, ТекстОшибки = Неопределено, Поле = Неопределено ) Экспорт

	Попытка
		res = EInvVatService.SetServiceProperty( Параметр, Значение, 0 );
		Если res <> 0 Тогда
			Отказ = Истина;
			Если ТекстОшибки <> Неопределено Тогда
				врТекстОшибки = "Ошибка установки параметра сервиса: " + EInvVatService.LastError;
				ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
			КонецЕсли;
		Иначе
			Отказ = Ложь;
		КонецЕсли;
	Исключение
		Если ТекстОшибки <> Неопределено Тогда
			врТекстОшибки = "Ошибка установки параметра сервиса: " + ОписаниеОшибки();
			ЭСЧФОбщий.ОтразитьОшибку(ТекстОшибки, врТекстОшибки, Поле);
		КонецЕсли;
		Отказ = Истина;
	КонецПопытки;

КонецПроцедуры //УстановитьПараметрСервиса

////////////////////////////////////////////////////////////////////////////////
//
// Функция ВерсияКомпоненты
//
// Описание:
//  пытается получить версию компоненты методом 'Version'
//
// Параметры (название, тип, дифференцированное значение)
//
// Возвращаемое значение:
//  Строка(0) - верия компоненты
//  Неопределено - в случае неудачи
//
Функция ВерсияКомпоненты() Экспорт

	Перем Версия;
	
	Попытка
		Версия = EInvVatService.Version;
	Исключение КонецПопытки;
	
	Возврат Версия;

КонецФункции //ВерсияКомпоненты

// Электронные счета-фактуры по НДС
EInvVatConnected = Ложь;
EInvVatAuthorized = Ложь;
