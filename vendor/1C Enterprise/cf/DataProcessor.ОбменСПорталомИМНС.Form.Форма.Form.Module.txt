
#Область Авторизация

&НаКлиенте
Процедура ПриАвторизацииКоманда(Команда)
    
    Если Не Объект.РежимРаботыНаСервере Тогда
        
        // авторизация и подключение
		Ошибки = Новый Массив;
        Если ЭСЧФклиент.ПриАвторизацииПоОрганизации(Объект.Организация,, Ошибки) Тогда
            Объект.Авторизован = Истина
        ИначеЕсли ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
            Объект.Авторизован = Истина
        Иначе
            Объект.Авторизован = Ложь
		КонецЕсли;
		
		Для каждого Ошибка Из Ошибки Цикл
		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Ошибка;
			Сообщение.Сообщить();
		
		КонецЦикла;
        
    Иначе
        
        Объект.Авторизован = ЭСЧФсервер.ПриАвторизацииПоОрганизации(Объект.Организация)
        
    КонецЕсли;
	
	УправлениеФормой();
    
КонецПроцедуры

&НаКлиенте
Процедура Подключение(Команда)
    
    Если Не Объект.РежимРаботыНаСервере Тогда
        
        // авторизация и подключение
        Если ЭСЧФклиент.ПриПодключенииКСервисуБезПараметров() Тогда
            Объект.Подключен = Истина
        Иначе
            Объект.Авторизован = Ложь
        КонецЕсли;
        
    Иначе
        
        Объект.Подключен = ЭСЧФсервер.ПриПодключенииКСервисуНеСервере()
        
    КонецЕсли;
	
	УправлениеФормой();
    
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеАвторизации(Команда)
	
	Если Не Объект.РежимРаботыНаСервере Тогда
		
		Ошибки = Новый Массив;
		
		ПриЗавершенииАвторизации(Объект.Авторизован, Ошибки);
		ПриЗакрытииПодключенияКСервису(Объект.Подключен, Ошибки);
		
		Для каждого Ошибка Из Ошибки Цикл
		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка: " + Ошибка;
			Сообщение.Сообщить();
		
		КонецЦикла;
		
	Иначе
		
		Объект.Авторизован = ЭСЧФсервер.ПриЗавершенииАвторизацииНаСервере();
		Объект.Подключен   = Объект.Авторизован;
		
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура АвторизацияИПодключение(Команда)
    
    ПриАвторизацииКоманда(Команда);
    Подключение(Команда);
    
КонецПроцедуры

#КонецОбласти

#Область ВходящиеДокумента

&НаКлиенте
Процедура ПолучитьНомераВходящихДокументов(Команда)
	
	ТекущаяОперация = "Получение номеров входящих документов с портала...";
	УправлениеФормой();
	
    Если Не Объект.РежимРаботыНаСервере Тогда
        
        Объект.ВходящиеДокументы.Очистить();
        Массив = ЭСЧФобщий.ПолучитьНомераВходящихДокументов(Объект.НачалоПериода);
        
        Если Массив = Неопределено Или Не Массив.Количество() Тогда
            Возврат
        КонецЕсли;
        
        Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номера", Массив);
        Запрос.Текст = "ВЫБРАТЬ
        |    ЭлектронныйСчетФактураПолученный.Ссылка КАК Документ,
        |    ЭлектронныйСчетФактураПолученный.Дата КАК Дата,
        |    ЭлектронныйСчетФактураПолученный.Проведен КАК Проведев,
        |    ЭлектронныйСчетФактураПолученный.Номер КАК Номер,
        |    ЭлектронныйСчетФактураПолученный.ДатаВыставленияЭСЧФ КАК ДатаВыставления,
        |    ЭлектронныйСчетФактураПолученный.ДатаСовершенияОперацииЭСЧФ КАК ДатаСовершенияОперации,
        |    ЭлектронныйСчетФактураПолученный.ТипЭСЧФ КАК Тип,
        |    ЭлектронныйСчетФактураПолученный.КЭСЧФ КАК КЭСЧФ,
        |    ЭлектронныйСчетФактураПолученный.ДатаАннулированияЭСЧФ КАК ДатаАннулирования,
        |    ЭлектронныйСчетФактураПолученный.Контрагент КАК Контрагент,
        |    ЭлектронныйСчетФактураПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |    ЭлектронныйСчетФактураПолученный.ИтогоСуммаАкциза КАК Акциз,
        |    ЭлектронныйСчетФактураПолученный.ИтогоСуммаНДС КАК СуммаНДС,
        |    ЭлектронныйСчетФактураПолученный.ИтогоСтоимость КАК Сумма,
        |    ЭлектронныйСчетФактураПолученный.ОбменТовары КАК ОбменТовары,
        |    ЭлектронныйСчетФактураПолученный.ОбменГрузоотправителиГрузополучатели КАК ОбменГрузоотправителиГрузополучатели,
        |    ЭлектронныйСчетФактураПолученный.ОбменДокументыПоставки КАК ОбменДокументыПоставки,
        |    ЭлектронныйСчетФактураПолученный.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
        |    ЭлектронныйСчетФактураПолученный.ВидОперации КАК ВидОперации,
        |    ЭлектронныйСчетФактураПолученный.НакладнаяДата КАК НакладнаяДата,
        |    ЭлектронныйСчетФактураПолученный.НакладнаяСерия КАК СерияБланка,
        |    ЭлектронныйСчетФактураПолученный.НакладнаяНомер КАК НомерНакладной,
        |    ЭлектронныйСчетФактураПолученный.ОтправительУНП КАК ОтправительУНП
        |ИЗ
        |    Документ.ЭлектронныйСчетФактураПолученный КАК ЭлектронныйСчетФактураПолученный
        |ГДЕ
        |    ЭлектронныйСчетФактураПолученный.Номер В(&Номера)";
        
        ВыборкаДокументов = Запрос.Выполнить().Выбрать();
        
        Для каждого цНомер Из Массив Цикл
            
            ВыборкаДокументов.Сбросить();
            НоваяСтрока = Объект.ВходящиеДокументы.Добавить();
			НоваяСтрока.Обрабатывать = Истина;
            НоваяСтрока.НомерЭСЧФ = цНомер;
            Если ВыборкаДокументов.НайтиСледующий(цНомер, "Номер") Тогда
                ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокументов)
            КонецЕсли;
            
        КонецЦикла;
        
    Иначе
        
        ПолучитьНомераВходящихДокументовСервер()
        
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Входящие документы добавлены";
	Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьНомераВходящихДокументовСервер()
    
    Объект.ВходящиеДокументы.Очистить();
    Массив = ЭСЧФобщий.ПолучитьНомераВходящихДокументов(Объект.НачалоПериода);
    
    Если Массив = Неопределено Или Не Массив.Количество() Тогда
        Возврат
    КонецЕсли;
    
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номера", Массив);
    Запрос.Текст = "ВЫБРАТЬ
    |    ЭлектронныйСчетФактураПолученный.Ссылка КАК Документ,
    |    ЭлектронныйСчетФактураПолученный.Дата КАК Дата,
    |    ЭлектронныйСчетФактураПолученный.Проведен КАК Проведев,
    |    ЭлектронныйСчетФактураПолученный.Номер КАК Номер,
    |    ЭлектронныйСчетФактураПолученный.ДатаВыставленияЭСЧФ КАК ДатаВыставления,
    |    ЭлектронныйСчетФактураПолученный.ДатаСовершенияОперацииЭСЧФ КАК ДатаСовершенияОперации,
    |    ЭлектронныйСчетФактураПолученный.ТипЭСЧФ КАК Тип,
    |    ЭлектронныйСчетФактураПолученный.КЭСЧФ КАК КЭСЧФ,
    |    ЭлектронныйСчетФактураПолученный.ДатаАннулированияЭСЧФ КАК ДатаАннулирования,
    |    ЭлектронныйСчетФактураПолученный.Контрагент КАК Контрагент,
    |    ЭлектронныйСчетФактураПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
    |    ЭлектронныйСчетФактураПолученный.ИтогоСуммаАкциза КАК Акциз,
    |    ЭлектронныйСчетФактураПолученный.ИтогоСуммаНДС КАК СуммаНДС,
    |    ЭлектронныйСчетФактураПолученный.ИтогоСтоимость КАК Сумма,
    |    ЭлектронныйСчетФактураПолученный.ОбменТовары КАК ОбменТовары,
    |    ЭлектронныйСчетФактураПолученный.ОбменГрузоотправителиГрузополучатели КАК ОбменГрузоотправителиГрузополучатели,
    |    ЭлектронныйСчетФактураПолученный.ОбменДокументыПоставки КАК ОбменДокументыПоставки,
    |    ЭлектронныйСчетФактураПолученный.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
    |    ЭлектронныйСчетФактураПолученный.ВидОперации КАК ВидОперации,
    |    ЭлектронныйСчетФактураПолученный.НакладнаяДата КАК НакладнаяДата,
    |    ЭлектронныйСчетФактураПолученный.НакладнаяСерия КАК СерияБланка,
    |    ЭлектронныйСчетФактураПолученный.НакладнаяНомер КАК НомерНакладной,
    |    ЭлектронныйСчетФактураПолученный.ОтправительУНП КАК ОтправительУНП
    |ИЗ
    |    Документ.ЭлектронныйСчетФактураПолученный КАК ЭлектронныйСчетФактураПолученный
    |ГДЕ
    |    ЭлектронныйСчетФактураПолученный.Номер В(&Номера)";
    
    ВыборкаДокументов = Запрос.Выполнить().Выбрать();
    
    Для каждого цНомер Из Массив Цикл
        
        ВыборкаДокументов.Сбросить();
        НоваяСтрока = Объект.ВходящиеДокументы.Добавить();
        НоваяСтрока.НомерЭСЧФ = цНомер;
        Если ВыборкаДокументов.НайтиСледующий(цНомер, "Номер") Тогда
            ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокументов)
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВходящиеДокументы(Команда)
	
	ТекущаяОперация = "Получение входящих документов с портала...";
	УправлениеФормой();
	
	Если Не Объект.РежимРаботыНаСервере Тогда
		
		//Массив = Новый Массив;
		ТаблицаНомеров = ЭСЧФклиент.ТаблицаДанныхЗагрузкиДокументовСПортала();
		//ДокументыОбмена = Новый Массив;
		//ВхДокументы = Новый Массив;
		Для каждого цСтр Из Объект.ВходящиеДокументы Цикл
			Если цСтр.Обрабатывать И ( Объект.ПерезаписыватьИмеющиеся Или Не ЗначениеЗаполнено(цСтр.ЭлектронныйДокумент) ) Тогда
				//Массив.Добавить(цСтр.НомерЭСЧФ)
				НоваяСтрока = ТаблицаНомеров.Добавить();
				НоваяСтрока.Номер = цСтр.НомерЭСЧФ;
			КонецЕсли;
		КонецЦикла;
		//ЭСЧФобщий.ЗагрузитьЭлектронныеДокументы(Массив, Объект.Организация, ДокументыОбмена, ВхДокументы, Объект.ПерезаписыватьИмеющиеся, Объект.ОбменТовары, Объект.ОбменГрузоотправителиГрузополучатели
		//										, Объект.ОбменДокументыПоставки, Объект.СохранитьДокумент, Объект.РасположениеВходящихФайлов);
		ЭСЧФобщий.ЗагрузитьЭлектронныеДокументы(ТаблицаНомеров, Объект.Организация, Объект.ПерезаписыватьИмеющиеся, Объект.ОбменТовары, Объект.ОбменГрузоотправителиГрузополучатели
												, Объект.ОбменДокументыПоставки, Объект.СохранитьДокумент, Объект.РасположениеВходящихФайлов);
		Отбор = Новый Структура;
		Для каждого Номер Из ТаблицаНомеров Цикл
			
			Отбор.Вставить("НомерЭСЧФ", Номер.Номер);
			Строки = Объект.ВходящиеДокументы.НайтиСтроки(Отбор);
			
			Если Строки.Количество() Тогда
				
				цСтр = Строки[0];
				цСтр.Документ = Номер.ВходящийДокумент;
				цСтр.Проведен = цСтр.Документ.Проведен;
				цСтр.Сумма = цСтр.Документ.ИтогоСтоимость;
				цСтр.СуммаНДС = цСтр.Документ.ИтогоСуммаНДС;
				цСтр.Тип = цСтр.Документ.ТипЭСЧФ;
				цСтр.ДатаСовершенияОперации = цСтр.Документ.ДатаСовершенияОперацииЭСЧФ;
				цСтр.ДатаАннулирования = цСтр.Документ.ДатаАннулированияЭСЧФ;
				цСтр.Дата = цСтр.Документ.Дата;
				цСтр.Контрагент = цСтр.Документ.Контрагент;
				цСтр.ДоговорКонтрагента = цСтр.Документ.ДоговорКонтрагента;
				цСтр.Акциз = цСтр.Документ.ИтогоСуммаАкциза;
				цСтр.КЭСЧФ = цСтр.Документ.КЭСЧФ;
				//цСтр.ОбменТовары = цСтр.Документ.ОбменТовары;
				//цСтр.ОбменГрузоотправителиГрузополучатели = цСтр.Документ.ОбменГрузоотправителиГрузополучатели;
				//цСтр.ОбменДокументыПоставки = цСтр.Документ.ОбменДокументыПоставки;
				цСтр.ВидОперации = цСтр.Документ.ВидОперации;
				цСтр.НакладнаяДата = цСтр.Документ.НакладнаяДата;
				цСтр.НакладнаяСерия = цСтр.Документ.НакладнаяСерия;
				цСтр.НакладнаяНомер = цСтр.Документ.НакладнаяНомер;
				цСтр.ДатаВыставления = цСтр.Документ.ДатаВыставленияЭСЧФ;
				цСтр.ЭлектронныйДокумент = Номер.ДокументОбмена;
				цСтр.Обрабатывать = ( Не ( ЗначениеЗаполнено(Номер.ДокументОбмена) И ЗначениеЗаполнено(Номер.ВходящийДокумент) ) );
				
			КонецЕсли;
			
		КонецЦикла;
		//итер = 0;
		//Для каждого цСтр Из Объект.ВходящиеДокументы Цикл
		//	Если Не цСтр.Обрабатывать Тогда
		//		Продолжить;
		//	КонецЕсли;
		//	Если Не ЗначениеЗаполнено(цСтр.ЭлектронныйДокумент) Тогда
		//		цСтр.ЭлектронныйДокумент = ДокументыОбмена.Получить(итер);
		//        цСтр.Документ = ВхДокументы.Получить(итер);
		//		Если ЗначениеЗаполнено(цСтр.Документ) Тогда
		//			цСтр.Проведен = цСтр.Документ.Проведен;
		//			цСтр.Сумма = цСтр.Документ.ИтогоСтоимость;
		//			цСтр.СуммаНДС = цСтр.Документ.ИтогоСуммаНДС;
		//			цСтр.Тип = цСтр.Документ.ТипЭСЧФ;
		//			цСтр.ДатаСовершенияОперации = цСтр.Документ.ДатаСовершенияОперацииЭСЧФ;
		//			цСтр.ДатаАннулирования = цСтр.Документ.ДатаАннулированияЭСЧФ;
		//			цСтр.Дата = цСтр.Документ.Дата;
		//			цСтр.Контрагент = цСтр.Документ.Контрагент;
		//			цСтр.ДоговорКонтрагента = цСтр.Документ.ДоговорКонтрагента;
		//			цСтр.Акциз = цСтр.Документ.ИтогоСуммаАкциза;
		//			цСтр.КЭСЧФ = цСтр.Документ.КЭСЧФ;
		//            //цСтр.ОбменТовары = цСтр.Документ.ОбменТовары;
		//            //цСтр.ОбменГрузоотправителиГрузополучатели = цСтр.Документ.ОбменГрузоотправителиГрузополучатели;
		//            //цСтр.ОбменДокументыПоставки = цСтр.Документ.ОбменДокументыПоставки;
		//			цСтр.ВидОперации = цСтр.Документ.ВидОперации;
		//			цСтр.НакладнаяДата = цСтр.Документ.НакладнаяДата;
		//			цСтр.НакладнаяСерия = цСтр.Документ.НакладнаяСерия;
		//			цСтр.НакладнаяНомер = цСтр.Документ.НакладнаяНомер;
		//			цСтр.ДатаВыставления = цСтр.Документ.ДатаВыставленияЭСЧФ;
		//			цСтр.Обрабатывать = Ложь;
		//		Иначе
		//			цСтр.Проведен = Неопределено;
		//			цСтр.Сумма = Неопределено;
		//			цСтр.СуммаНДС = Неопределено;
		//			цСтр.Тип = Неопределено;
		//			цСтр.ДатаСовершенияОперации = Неопределено;
		//			цСтр.ДатаАннулирования = Неопределено;
		//			цСтр.Дата = Неопределено;
		//			цСтр.Контрагент = Неопределено;
		//			цСтр.ДоговорКонтрагента = Неопределено;
		//			цСтр.Акциз = Неопределено;
		//			цСтр.КЭСЧФ = Неопределено;
		//            //цСтр.ОбменТовары = Неопределено;
		//            //цСтр.ОбменГрузоотправителиГрузополучатели = Неопределено;
		//            //цСтр.ОбменДокументыПоставки = Неопределено;
		//			цСтр.ВидОперации = Неопределено;
		//			цСтр.НакладнаяДата = Неопределено;
		//			цСтр.НакладнаяСерия = Неопределено;
		//			цСтр.НакладнаяНомер = Неопределено;
		//			цСтр.ДатаВыставления = Неопределено;
		//		КонецЕсли;
		//		итер = итер + 1
		//	Иначе
		//		цСтр.Обрабатывать = Ложь;
		//	КонецЕсли;
		//КонецЦикла;
		
	Иначе
		
		ПолучитьВходящиеДокументыСервер();
		
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Входящие документы получены";
	Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьВходящиеДокументыСервер()
	
	//Массив = Новый Массив;
	ТаблицаНомеров = ЭСЧФсервер.ТаблицаДанныхЗагрузкиДокументовСПортала();
	//ДокументыОбмена = Новый Массив;
	//ВхДокументы = Новый Массив;
	Для каждого цСтр Из Объект.ВходящиеДокументы Цикл
		Если цСтр.Обрабатывать И ( Объект.ПерезаписыватьИмеющиеся Или Не ЗначениеЗаполнено(цСтр.ЭлектронныйДокумент) ) Тогда
			//Массив.Добавить(цСтр.НомерЭСЧФ)
			НоваяСтрока = ТаблицаНомеров.Добавить();
			НоваяСтрока.Номер = цСтр.НомерЭСЧФ;
		КонецЕсли;
	КонецЦикла;
	//ЭСЧФобщий.ЗагрузитьЭлектронныеДокументы(Массив, Объект.Организация, ДокументыОбмена, ВхДокументы, Объект.ПерезаписыватьИмеющиеся, Объект.ОбменТовары, Объект.ОбменГрузоотправителиГрузополучатели
	//										, Объект.ОбменДокументыПоставки, Объект.СохранитьДокумент, Объект.РасположениеВходящихФайлов);
	ЭСЧФобщий.ЗагрузитьЭлектронныеДокументы(ТаблицаНомеров, Объект.Организация, Объект.ПерезаписыватьИмеющиеся, Объект.ОбменТовары, Объект.ОбменГрузоотправителиГрузополучатели
	, Объект.ОбменДокументыПоставки, Объект.СохранитьДокумент, Объект.РасположениеВходящихФайлов);
	Отбор = Новый Структура;
	Для каждого Номер Из ТаблицаНомеров Цикл
		
		Отбор.Вставить("НомерЭСЧФ", Номер.Номер);
		Строки = Объект.ВходящиеДокументы.НайтиСтроки(Отбор);
		
		Если Строки.Количество() Тогда
			
			цСтр = Строки[0];
			цСтр.Документ = Номер.ВходящийДокумент;
			цСтр.Проведен = цСтр.Документ.Проведен;
			цСтр.Сумма = цСтр.Документ.ИтогоСтоимость;
			цСтр.СуммаНДС = цСтр.Документ.ИтогоСуммаНДС;
			цСтр.Тип = цСтр.Документ.ТипЭСЧФ;
			цСтр.ДатаСовершенияОперации = цСтр.Документ.ДатаСовершенияОперацииЭСЧФ;
			цСтр.ДатаАннулирования = цСтр.Документ.ДатаАннулированияЭСЧФ;
			цСтр.Дата = цСтр.Документ.Дата;
			цСтр.Контрагент = цСтр.Документ.Контрагент;
			цСтр.ДоговорКонтрагента = цСтр.Документ.ДоговорКонтрагента;
			цСтр.Акциз = цСтр.Документ.ИтогоСуммаАкциза;
			цСтр.КЭСЧФ = цСтр.Документ.КЭСЧФ;
			//цСтр.ОбменТовары = цСтр.Документ.ОбменТовары;
			//цСтр.ОбменГрузоотправителиГрузополучатели = цСтр.Документ.ОбменГрузоотправителиГрузополучатели;
			//цСтр.ОбменДокументыПоставки = цСтр.Документ.ОбменДокументыПоставки;
			цСтр.ВидОперации = цСтр.Документ.ВидОперации;
			цСтр.НакладнаяДата = цСтр.Документ.НакладнаяДата;
			цСтр.НакладнаяСерия = цСтр.Документ.НакладнаяСерия;
			цСтр.НакладнаяНомер = цСтр.Документ.НакладнаяНомер;
			цСтр.ДатаВыставления = цСтр.Документ.ДатаВыставленияЭСЧФ;
			цСтр.ЭлектронныйДокумент = Номер.ДокументОбмена;
			цСтр.Обрабатывать = ( Не ( ЗначениеЗаполнено(Номер.ДокументОбмена) И ЗначениеЗаполнено(Номер.ВходящийДокумент) ) );
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Массив = Новый Массив;
	//ДокументыОбмена = Новый Массив;
	//ВхДокументы = Новый Массив;
	//Для каждого цСтр Из Объект.ВходящиеДокументы Цикл
	//	Если цСтр.Обрабатывать И ( Объект.ПерезаписыватьИмеющиеся Или Не ЗначениеЗаполнено(цСтр.ЭлектронныйДокумент) ) Тогда
	//		Массив.Добавить(цСтр.НомерЭСЧФ)
	//	КонецЕсли;
	//КонецЦикла;
	//ЭСЧФобщий.ЗагрузитьЭлектронныеДокументы(Массив, Объект.Организация, ДокументыОбмена, ВхДокументы, Объект.ПерезаписыватьИмеющиеся, Объект.ОбменТовары, Объект.ОбменГрузоотправителиГрузополучатели
	//											, Объект.ОбменДокументыПоставки, Объект.СохранитьДокумент, Объект.РасположениеВходящихФайлов);
	//итер = 0;
	//Для каждого цСтр Из Объект.ВходящиеДокументы Цикл
	//	Если Не цСтр.Обрабатывать Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	Если Не ЗначениеЗаполнено(цСтр.ЭлектронныйДокумент) Тогда
	//		цСтр.ЭлектронныйДокумент = ДокументыОбмена.Получить(итер);
	//		цСтр.Документ = ВхДокументы.Получить(итер);
	//		Если ЗначениеЗаполнено(цСтр.Документ) Тогда
	//			цСтр.Проведен = цСтр.Документ.Проведен;
	//			цСтр.Сумма = цСтр.Документ.ИтогоСтоимость;
	//			цСтр.СуммаНДС = цСтр.Документ.ИтогоСуммаНДС;
	//			цСтр.Тип = цСтр.Документ.ТипЭСЧФ;
	//			цСтр.ДатаСовершенияОперации = цСтр.Документ.ДатаСовершенияОперацииЭСЧФ;
	//			цСтр.ДатаАннулирования = цСтр.Документ.ДатаАннулированияЭСЧФ;
	//			цСтр.Дата = цСтр.Документ.Дата;
	//			цСтр.Контрагент = цСтр.Документ.Контрагент;
	//			цСтр.ДоговорКонтрагента = цСтр.Документ.ДоговорКонтрагента;
	//			цСтр.Акциз = цСтр.Документ.ИтогоСуммаАкциза;
	//			цСтр.КЭСЧФ = цСтр.Документ.КЭСЧФ;
	//			//цСтр.ОбменТовары = цСтр.Документ.ОбменТовары;
	//			//цСтр.ОбменГрузоотправителиГрузополучатели = цСтр.Документ.ОбменГрузоотправителиГрузополучатели;
	//			//цСтр.ОбменДокументыПоставки = цСтр.Документ.ОбменДокументыПоставки;
	//			цСтр.ВидОперации = цСтр.Документ.ВидОперации;
	//			цСтр.НакладнаяДата = цСтр.Документ.НакладнаяДата;
	//			цСтр.НакладнаяСерия = цСтр.Документ.НакладнаяСерия;
	//			цСтр.НакладнаяНомер = цСтр.Документ.НакладнаяНомер;
	//			цСтр.ДатаВыставления = цСтр.Документ.ДатаВыставленияЭСЧФ;
	//			цСтр.Обрабатывать = Ложь;
	//		Иначе
	//			цСтр.Проведен = Неопределено;
	//			цСтр.Сумма = Неопределено;
	//			цСтр.СуммаНДС = Неопределено;
	//			цСтр.Тип = Неопределено;
	//			цСтр.ДатаСовершенияОперации = Неопределено;
	//			цСтр.ДатаАннулирования = Неопределено;
	//			цСтр.Дата = Неопределено;
	//			цСтр.Контрагент = Неопределено;
	//			цСтр.ДоговорКонтрагента = Неопределено;
	//			цСтр.Акциз = Неопределено;
	//			цСтр.КЭСЧФ = Неопределено;
	//			//цСтр.ОбменТовары = Неопределено;
	//			//цСтр.ОбменГрузоотправителиГрузополучатели = Неопределено;
	//			//цСтр.ОбменДокументыПоставки = Неопределено;
	//			цСтр.ВидОперации = Неопределено;
	//			цСтр.НакладнаяДата = Неопределено;
	//			цСтр.НакладнаяСерия = Неопределено;
	//			цСтр.НакладнаяНомер = Неопределено;
	//			цСтр.ДатаВыставления = Неопределено;
	//		КонецЕсли;
	//		итер = итер + 1
	//	Иначе
	//		цСтр.Обрабатывать = Ложь;
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыВходящихДокументов(Команда)
	
	ТекущаяОперация = "Обновление статусов входящих документов...";
	УправлениеФормой();
	
    Если Не Объект.РежимРаботыНаСервере Тогда
        
        Для каждого цДокумент Из Объект.ВходящиеДокументы Цикл
            Если ПустаяСтрока(СтрЗаменить(цДокумент.НомерЭСЧФ, "-", "")) Или Не цДокумент.Обрабатывать Тогда
                Продолжить;
            КонецЕсли;
            ТекстОшибки = "";
            ЭСЧФобщий.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ, Объект.СохранитьДокумент, цДокумент.ДатаСостояния, цДокумент.Статус,, ТекстОшибки
                                                      , цДокумент.ЭлектронныйДокумент, Объект.ПерезаписыватьИмеющиеся, Объект.РасположениеВходящихФайлов, Ложь);
            Если Не ПустаяСтрока(ТекстОшибки) Тогда
                Сообщение = Новый СообщениеПользователю;
                Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " " + ТекстОшибки;
                Сообщение.Сообщить();
			Иначе
				цДокумент.Обрабатывать = Ложь;
            КонецЕсли;
        КонецЦикла;
        
    Иначе
        
        Ошибки = Новый Массив;
        ОбновитьСтатусыВходящихДокументовСервер(Ошибки);
        
        Для каждого цОшибка Из Ошибки Цикл
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = цОшибка;
            Сообщение.Сообщить();
        КонецЦикла;
        
    КонецЕсли;
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Статусы входящих документов обновлены";
    Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыВходящихДокументовСервер(Ошибки)
    
    Для каждого цДокумент Из Объект.ВходящиеДокументы Цикл
        Если ПустаяСтрока(СтрЗаменить(цДокумент.НомерЭСЧФ, "-", "")) Или Не цДокумент.Обрабатывать Тогда
            Продолжить;
        КонецЕсли;
        цОшибки = Новый Массив;
        ЭСЧФобщий.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ, Объект.СохранитьДокумент, цДокумент.ДатаСостояния, цДокумент.Статус,, цОшибки
                                                  , цДокумент.ЭлектронныйДокумент, Объект.ПерезаписыватьИмеющиеся, Объект.РасположениеВходящихФайлов, Ложь);
        Для каждого цОшибка Из цОшибки Цикл
            Ошибки.Добавить(цОшибка)
		КонецЦикла;
		цДокумент.Обрабатывать = ( цОшибки.Количество() );
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВходящиеДокументыДляОбновленияСтатуса(Команда)
	
	ТекущаяОперация = "Получение списка входящих документов...";
	УправлениеФормой();
	
    Объект.ВходящиеДокументы.Очистить();
    
    ПолучитьВходящиеДокументыДляОбновленияСтатусаСервер();
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Входящие документы добавлены";
    Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьВходящиеДокументыДляОбновленияСтатусаСервер()
    
    Запрос = Новый Запрос("ВЫБРАТЬ
    | ЭлектронныйСчетФактураПолученный.Ссылка КАК Документ,
    | ЭлектронныйСчетФактураПолученный.Номер КАК НомерЭСЧФ,
    | ЭлектронныйСчетФактураПолученный.Дата КАК Дата,
    | ЭлектронныйСчетФактураПолученный.Проведен КАК Проведен,
    | ЭлектронныйСчетФактураПолученный.ДатаВыставленияЭСЧФ КАК ДатаВыставления,
    | ЭлектронныйСчетФактураПолученный.ДатаСовершенияОперацииЭСЧФ КАК ДатаСовершенияОперации,
    | ЭлектронныйСчетФактураПолученный.ТипЭСЧФ КАК Тип,
    | ЭлектронныйСчетФактураПолученный.КЭСЧФ КАК КЭСЧФ,
    | ЭлектронныйСчетФактураПолученный.ДатаАннулированияЭСЧФ КАК ДатаАннулирования,
    | ЭлектронныйСчетФактураПолученный.Контрагент КАК Контрагент,
    | ЭлектронныйСчетФактураПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
    | ЭлектронныйСчетФактураПолученный.ИтогоСуммаАкциза КАК Акциз,
    | ЭлектронныйСчетФактураПолученный.ИтогоСуммаНДС КАК СуммаНДС,
    | ЭлектронныйСчетФактураПолученный.ИтогоСтоимость КАК Стоимость,
    | ЭлектронныйСчетФактураПолученный.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
    | ЭлектронныйСчетФактураПолученный.ВидОперации КАК ВидОперации,
    | ЭлектронныйСчетФактураПолученный.НакладнаяДата КАК НакладнаяДата,
    | ЭлектронныйСчетФактураПолученный.НакладнаяСерия КАК НакладнаяСерия,
    | ЭлектронныйСчетФактураПолученный.НакладнаяНомер КАК НакладнаяНомер,
    | ЭлектронныйСчетФактураПолученный.ОтправительУНП КАК ОтправительУНП,
    | ВыставленныеДокументыВходящие.ДатаВыставления КАК ДатаПодтверждения
    |ИЗ
    | Документ.ЭлектронныйСчетФактураПолученный КАК ЭлектронныйСчетФактураПолученный
    |     ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыставленныеДокументыВходящие КАК ВыставленныеДокументыВходящие
    |     ПО ЭлектронныйСчетФактураПолученный.Ссылка = ВыставленныеДокументыВходящие.Документ
    |ГДЕ
    | ЭлектронныйСчетФактураПолученный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
    | И ЭлектронныйСчетФактураПолученный.Организация = &Организация"
    + ?( Объект.ТолькоВыставленные, Символы.ПС + "    И НЕ ВыставленныеДокументыВходящие.ДатаВыставления ЕСТЬ NULL", "" ));
    
    Запрос.УстановитьПараметр("Организация",   Объект.Организация);
    Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода",  Объект.ОкончаниеПериода);
    
    Результат = Запрос.Выполнить();
    Если Результат.Пустой() Тогда
        Возврат
    КонецЕсли;
    
    Квитанция = РегистрыСведений.КвитанцииВходящих.СоздатьМенеджерЗаписи();
	СтатусыПерегрузитьКвитанцию = ЭСЧФобщий.СтатусыПерегрузитьКвитанцию();
	СтатусыПерегрузитьКвитанцию.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.ПустаяСсылка"));
	
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        ЭСЧФобщий.РазложитьНомер(Выборка.НомерЭСЧФ, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
        Квитанция.Прочитать();
		Если Объект.ТолькоТребующиеЗагрузки И СтатусыПерегрузитьКвитанцию.Найти(Квитанция.Статус) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Объект.ВходящиеДокументы.Добавить();
		НоваяСтрока.Обрабатывать = Истина;
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Квитанция, "Статус, ДатаСостояния");
    КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ИсходящиеДокументы

&НаКлиенте
Процедура ПолучитьИсходящиеДокументыБезСтатуса(Команда)
	
	ТекущаяОперация = "Получение списка исходящих документов...";
	УправлениеФормой();
	
    Объект.ИсходящиеДокументы.Очистить();
    
    ТекстУсловия = Символы.ПС + "ГДЕ НомераЭСЧФ.Объект = &ИНН";
    
    Если Объект.ТолькоВыставленные Тогда
        ТекстУсловия = ТекстУсловия + Символы.ПС + "    И ВыставленныеДокументы.ДатаВыставления МЕЖДУ &НачалоПериода И &КонецПериода"
    КонецЕсли;
    
    Если Объект.ТолькоТребующиеЗагрузки Тогда
        ТекстУсловия = ТекстУсловия + Символы.ПС + "    И ЕСТЬNULL(Квитанции.Статус, &НеНайден) В (&СтатусыПерегрузить)"
    КонецЕсли;
    
    ТекстЗапроса = "ВЫБРАТЬ
    |    НомераЭСЧФ.Год,
    |    НомераЭСЧФ.Объект,
    |    НомераЭСЧФ.Номер,
    |    НомераЭСЧФ.Исходящий,
    |    НомераЭСЧФ.ДатаСовершенияОперации,
    |    НомераЭСЧФ.Тип,
    |    НомераЭСЧФ.Исходный,
    |    НомераЭСЧФ.ДатаАннулирования,
    |    НомераЭСЧФ.ОтобразитьПолучателю,
    |    НомераЭСЧФ.ТипБСО,
    |    НомераЭСЧФ.НомерНакладной,
    |    НомераЭСЧФ.КодБланка,
    |    НомераЭСЧФ.СерияБланка,
    |    НомераЭСЧФ.ДокументОснование КАК Документ,
    |    НомераЭСЧФ.Дата,
    |    НомераЭСЧФ.Сумма,
    |    НомераЭСЧФ.СуммаНДС,
    |    НомераЭСЧФ.Акциз,
    |    НомераЭСЧФ.КЭСЧФ,
    |    НомераЭСЧФ.ВидОперации,
    |    НомераЭСЧФ.СчетФактураПродавца,
    |    НомераЭСЧФ.Контрагент,
    |    НомераЭСЧФ.ДоговорКонтрагента,
    |    НомераЭСЧФ.Комментарий," + ?(Объект.ТолькоВыставленные, Символы.ПС + "    ВыставленныеДокументы.ДатаВыставления,", "") + "
    |    Квитанции.ЭлектронныйДокумент,
    |    Квитанции.ДатаСостояния,
    |    Квитанции.Проверка,
    |    Квитанции.Статус
    |ИЗ
    |    РегистрСведений.НомераЭСЧФ КАК НомераЭСЧФ
    |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Квитанции КАК Квитанции
    |        ПО НомераЭСЧФ.Год = Квитанции.Год
    |            И НомераЭСЧФ.Объект = Квитанции.Объект
    |            И НомераЭСЧФ.Номер = Квитанции.Номер"
    + ?(Объект.ТолькоВыставленные, Символы.ПС + "        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВыставленныеДокументы КАК ВыставленныеДокументы
                                         |        ПО ВыставленныеДокументы.Год = НомераЭСЧФ.Год
                                         |            И ВыставленныеДокументы.Объект = НомераЭСЧФ.Объект
                                         |            И ВыставленныеДокументы.Номер = НомераЭСЧФ.Номер", "")
    + ТекстУсловия;
    
    Запрос = Новый Запрос(ТекстЗапроса);
    Запрос.УстановитьПараметр("НачалоПериода",      Объект.НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода",       Объект.ОкончаниеПериода);
    Запрос.УстановитьПараметр("СтатусыПерегрузить", ЭСЧФобщий.СтатусыПерегрузитьКвитанцию());
    Запрос.УстановитьПараметр("ИНН",                СокрЛП(Объект.Организация.ИНН));
    Запрос.УстановитьПараметр("НеНайден",           ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.НеНайден"));
    
    ОтборНомера = Новый Структура("Год, Объект, Номер");
    Квитанции  = РегистрыСведений.Квитанции.СоздатьМенеджерЗаписи();
    Выставленные = РегистрыСведений.ВыставленныеДокументы.СоздатьМенеджерЗаписи();
    
    Выборка = Запрос.Выполнить().Выбрать();
    Пока Выборка.Следующий() Цикл
        НоваяСтрока = Объект.ИсходящиеДокументы.Добавить();
		НоваяСтрока.Обрабатывать = Истина;
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
        НоваяСтрока.НомерЭСЧФ = ЭСЧФобщий.СформироватьНомерЭСЧФ(Выборка.Объект, Выборка.Год, Выборка.Номер);
        Если Выборка.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный") Тогда
            ЭСЧФобщий.РазложитьНомер(Выборка.КЭСЧФ, ОтборНомера.Год, ОтборНомера.Объект, ОтборНомера.Номер);
            ЗаполнитьЗначенияСвойств(Квитанции, ОтборНомера);
            Квитанции.Прочитать();
            Если Не Квитанции.Выбран() Или Квитанции.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.Аннулирован") Тогда
                НомераЭСЧФ = РегистрыСведений.НомераЭСЧФ.Выбрать(Новый Структура("Номер", ОтборНомера.Номер));
                Найден = Ложь;
                Пока НомераЭСЧФ.Следующий() Цикл
                    Если НомераЭСЧФ.Объект = ОтборНомера.Объект И НомераЭСЧФ.Год = ОтборНомера.Год Тогда
                        Найден = Истина;
                        Прервать;
                    КонецЕсли;
                КонецЦикла;
                Если Найден Тогда
                    НоваяСтрока = Объект.ИсходящиеДокументы.Добавить();
                    НоваяСтрока.НомерЭСЧФ = ЭСЧФобщий.СформироватьНомерЭСЧФ(ОтборНомера.Объект, ОтборНомера.Год, ОтборНомера.Номер);
                    ЗаполнитьЗначенияСвойств(НоваяСтрока, НомераЭСЧФ);
                    НоваяСтрока.Документ = НомераЭСЧФ.ДокументОснование;
                    ЗаполнитьЗначенияСвойств(НоваяСтрока, Квитанции);
                    ЗаполнитьЗначенияСвойств(Выставленные, ОтборНомера);
                    Выставленные.Прочитать();
                    НоваяСтрока.ДатаВыставления = Выставленные.ДатаВыставления
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Исходящие документы добавлены";
    Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыИсходящихДокументов(Команда)

	ТекущаяОперация = "Обновление статусов исходящих документов...";
	УправлениеФормой();
	
	Если Не Объект.РежимРаботыНаСервере Тогда
		
		Для каждого цДокумент Из Объект.ИсходящиеДокументы Цикл
			Если ПустаяСтрока(СтрЗаменить(цДокумент.НомерЭСЧФ, "-", "")) Или Не цДокумент.Обрабатывать Тогда
				Продолжить;
			КонецЕсли;
			ТекстОшибки = "";
			Отказ = ( Не ЭСЧФобщий.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ, Объект.СохранитьДокумент, цДокумент.ДатаСостояния, цДокумент.Статус,, ТекстОшибки
																	, цДокумент.ЭлектронныйДокумент, Объект.ПерезаписыватьИмеющиеся, Объект.РасположениеВходящихФайлов) );
			Если Отказ Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " " + ТекстОшибки;
				Сообщение.Сообщить();
			Иначе
				цДокумент.Обрабатывать = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Ошибки = Новый Массив;
		ОбновитьСтатусыИсходящихДокументовСервер(Ошибки);
		
		Для каждого цОшибка Из Ошибки Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = цОшибка;
			Сообщение.Сообщить();
		КонецЦикла;
		
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Статусы исходящих документов обновлены";
	Сообщение.Сообщить();
	
	ТекущаяОперация = "";
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыИсходящихДокументовСервер(Ошибки)

	Для каждого цДокумент Из Объект.ИсходящиеДокументы Цикл
		Если ПустаяСтрока(СтрЗаменить(цДокумент.НомерЭСЧФ, "-", "")) Или Не цДокумент.Обрабатывать Тогда
			Продолжить;
		КонецЕсли;
		цОшибки = Новый Массив;
		Отказ = ( Не ЭСЧФобщий.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ, Объект.СохранитьДокумент, цДокумент.ДатаСостояния, цДокумент.Статус,, цОшибки
																, цДокумент.ЭлектронныйДокумент, Объект.ПерезаписыватьИмеющиеся, Объект.РасположениеВходящихФайлов) );
		Для каждого цОшибка Из цОшибки Цикл
			Ошибки.Добавить(цОшибка)
		КонецЦикла;
		цДокумент.Обрабатывать = ( цОшибки.Количество() );
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область УправлениеФормой

&НаКлиенте
Процедура ИсходящиеДокументыПослеУдаления(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеДокументыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеДокументыПослеУдаления(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеДокументыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()

	СтрокаСостояния = "";
	Если Объект.Авторизован Тогда
		СтрокаСостояния = СтрокаСостояния + "Авторизован" + ?(Объект.РежимРаботыНаСервере, " на сервере.", ".")
	КонецЕсли;
	Если Объект.Подключен Тогда
		СтрокаСостояния = СтрокаСостояния + " Подключен" + ?(Объект.РежимРаботыНаСервере, " на сервере.", ".")
	КонецЕсли;
	
	СтрокаСостояния = СтрокаСостояния + " " + ТекущаяОперация;
    
    ДоступенОбмен = ЭСЧФклиентПовтИсп.ДоступнаКомпонентаОбменаИПодписания(Объект.РежимРаботыНаСервере);
	
    Элементы.ФормаПриАвторизации.Доступность = ДоступенОбмен;
    Элементы.ФормаПодключение.Доступность = ДоступенОбмен;
    Элементы.ФормаАвторизацияИПодключение.Доступность = ДоступенОбмен;
    Элементы.ФормаЗавершениеАвторизации.Доступность = ДоступенОбмен;
    
    ЕстьПолныеПрава = ( РольДоступна("ПолныеПрава") Или РольДоступна("ИспользованиеЭСЧФПолный") );
    Элементы.ФормаОткрытьНастройкиПодсистемы.Доступность = ЕстьПолныеПрава;
    Элементы.ФормаПодменюРежимРаботы.Доступность = ( ЕстьПолныеПрава И ДоступенОбмен );
    Элементы.ГруппаНастроекСохраненияДокументов.Доступность = ЕстьПолныеПрава;
    
    Элементы.Организация.Доступность = ( Не Объект.Авторизован И Не Объект.Подключен );
	
	АвторизованИПодключен = ( Объект.Авторизован И Объект.Подключен );
	
	Элементы.ВходящиеДокументыПолучитьНомераВходящихДокументов.Доступность = АвторизованИПодключен;
	Элементы.ВходящиеДокументыПолучитьВходящиеДокументы.Доступность = АвторизованИПодключен;
    Элементы.ВходящиеДокументыОбновитьСтатусыВходящихДокументов.Доступность = АвторизованИПодключен;
    //Элементы.ГруппаОтборВходящиеДокументыГоризонтальная.Видимость = ( Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаИсходящиеДокументы" );
    Если Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаИсходящиеДокументы" Тогда
		//Элементы.ТолькоТребующиеЗагрузки.Доступность = Истина;
		Элементы.ОбменТовары.Доступность = Ложь;
        Элементы.ОбменДокументыПоставки.Доступность = Ложь;
        Элементы.ОбменГрузоотправителиГрузополучатели.Доступность = Ложь;
        Объект.ОбменТовары = Ложь;
        Объект.ОбменДокументыПоставки = Ложь;
        Объект.ОбменГрузоотправителиГрузополучатели = Ложь;
        Элементы.ТолькоВыставленные.Заголовок = "только выставленные"
    Иначе
		//Элементы.ТолькоТребующиеЗагрузки.Доступность = Ложь;
		//Объект.ТолькоТребующиеЗагрузки = Ложь;
        Элементы.ОбменТовары.Доступность = Истина;
        Элементы.ОбменДокументыПоставки.Доступность = Истина;
        Элементы.ОбменГрузоотправителиГрузополучатели.Доступность = Истина;
        Элементы.ТолькоВыставленные.Заголовок = "только подтверждённые"
    КонецЕсли;
    Элементы.ИсходящиеДокументыОбновитьСтатусыИсходящихДокументов.Доступность = АвторизованИПодключен;
	
	КоличествоИсходящихДокументов = Объект.ИсходящиеДокументы.Количество();
	КоличествоВходящихДокументов  = Объект.ВходящиеДокументы.Количество();
	
	Если КоличествоИсходящихДокументов Тогда
		Элементы.ГруппаИсходящиеДокументы.Заголовок = "Исходящие документы (" + КоличествоИсходящихДокументов + ")"
	Иначе
		Элементы.ГруппаИсходящиеДокументы.Заголовок = "Исходящие документы"
	КонецЕсли;
	Если КоличествоВходящихДокументов Тогда
		Элементы.ГруппаВходящиеДокументы.Заголовок = "Входящие документы (" + КоличествоВходящихДокументов + ")"
	Иначе
		Элементы.ГруппаВходящиеДокументы.Заголовок = "Входящие документы"
	КонецЕсли;
	
	Элементы.ФормаУстановитьРежимРаботыНаКлиенте.Пометка = ( Объект.РежимРаботыНаСервере = 0 );
	Элементы.ФормаУстановитьРежимРаботыНаСервере.Пометка = ( Объект.РежимРаботыНаСервере = 1 );
	
КонецПроцедуры // УправлениеФормой()

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
    УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура РежимРаботыНаСервереПриИзменении(Элемент)
    УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПодсистемы(Команда)
    ПолучитьФорму("ОбщаяФорма.ФормаНастроекЭСЧФ").Открыть()
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
    РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(Объект.НачалоПериода, Объект.ОкончаниеПериода)
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьДляОбработкиИхсодящие(Команда)
	
	Таблица = ?( Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаИсходящиеДокументы", Элементы.ИсходящиеДокументы, Элементы.ВходящиеДокументы );
	
	Для каждого НомерСтроки Из Таблица.ВыделенныеСтроки Цикл
		СтрокаТаблицы = Таблица.ДанныеСтроки(НомерСтроки);
		СтрокаТаблицы.Обрабатывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуОбработкиВходящиеДокументы(Команда)
	
	Таблица = ?( Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаИсходящиеДокументы", Элементы.ИсходящиеДокументы, Элементы.ВходящиеДокументы );
	
	Для каждого НомерСтроки Из Таблица.ВыделенныеСтроки Цикл
		СтрокаТаблицы = Таблица.ДанныеСтроки(НомерСтроки);
		СтрокаТаблицы.Обрабатывать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаКлиенте(Команда)
	Объект.РежимРаботыНаСервере = 0;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаСервере(Команда)
	Объект.РежимРаботыНаСервере = 1;
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    Если Не Объект.РежимРаботыНаСервере Тогда
        Объект.Подключен = ( EInvVatConnected = Истина );
        Объект.Авторизован = ( EInvVatAuthorized = Истина )
    КонецЕсли;
    УправлениеФормой()
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
	Объект.СохранитьДокумент = ПараметрыСеанса.СохранениеДокументов;
	Объект.РасположениеВходящихФайлов = ПараметрыСеанса.РасположениеВходящихФайлов;
    Объект.РежимРаботыНаСервере = ЭСЧФсервер.РежимРаботыПоУмолчаниюЭСЧФ();
	Если Объект.РежимРаботыНаСервере = 2 Тогда
		Объект.РежимРаботыНаСервере = 0
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
    
    Если Не Объект.РежимРаботыНаСервере Тогда
        Объект.Подключен = ( EInvVatConnected = Истина );
        Объект.Авторизован = ( EInvVatAuthorized = Истина )
    КонецЕсли;
    УправлениеФормой();
    
КонецПроцедуры

