
#Область ОбменДанными

&НаКлиенте
Процедура ПодписатьОтправить(Команда)

	Ошибки = Новый Массив;
	Отказ  = Ложь;
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отправить можно только записанный документ";
		Сообщение.Сообщить();
		Перейти ~ВыходБезЗавершения;
	ИначеЕсли Объект.ЭлектронныйДокумент.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В базе нет данных XML для подписания";
		Сообщение.Сообщить();
		Перейти ~ВыходБезЗавершения;
	КонецЕсли;
	// авторизация и подключение
	Если РежимРаботы = 2 Тогда
		// авторизация не нужна
		МенеджерНомераВыгрузить = РегистрыСведений.НомераДляПодтверждения.СоздатьМенеджерЗаписи();
		МенеджерНомераВыгрузить.Организация = Объект.Организация;
		МенеджерНомераВыгрузить.Номер = Объект.Номер;
		Если Не ОбменВыгрузить Тогда
			МенеджерНомераВыгрузить.Записать(Истина);
			ОбменВыгрузить = Истина;
		Иначе
			МенеджерНомераВыгрузить.Удалить();
			ОбменВыгрузить = Ложь;
		КонецЕсли;
		УправлениеФормой();
		Перейти ~ВыходБезЗавершения;
	ИначеЕсли Не РежимРаботы И ЭСЧФклиент.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Отказ = Ложь;
		ТекстОшибки = "";
		ПриПодключенииКСервису(Отказ, ТекстОшибки);
		Если Отказ Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Сообщить();
			Перейти ~Выход;
		КонецЕсли;
	ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли РежимРаботы И Не ЭСЧФсервер.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Перейти ~Выход;
	КонецЕсли;
	
	// отправка документа
	ДокументыОбмена = ЭСЧФклиент.ТаблицаДанныхПодтвержденияДокументов();//Новый Массив;
	НоваяСтрока = ДокументыОбмена.Добавить();
	НоваяСтрока.ДокументОбмена = Объект.ЭлектронныйДокумент;
	//ДокументыОбмена.Добавить(Объект.ЭлектронныйДокумент);
	//ПодписанныеДокументы = Новый Массив;
	Если Не РежимРаботы Тогда
		ЭСЧФклиент.ПодписатьИОтправитьДокументыОбмена(ДокументыОбмена,,, Ошибки);//ПодписанныеДокументы,,, Ошибки);
	Иначе
		ЭСЧФсервер.ПодписатьИОтправитьДокументыОбмена(ДокументыОбмена,,, Ошибки);//ПодписанныеДокументы,,, Ошибки);
	КонецЕсли;
	
	// отражение выставления документа
	//Если ПодписанныеДокументы.Количество() И ЗначениеЗаполнено(ПодписанныеДокументы[0]) Тогда
	//	ДатаВыставления = ТекущаяДата();
	//	ЭлектронныйДокумент = ПодписанныеДокументы[0];
	//	ЭСЧФобщий.ОтразитьВыставлениеДокумента(Объект.Ссылка, ДатаВыставления, Объект.Номер,,,, ЭлектронныйДокумент, Ложь)
	//КонецЕсли;
	Если ЗначениеЗаполнено(ДокументыОбмена[0].ПодписанныйДокумент) Тогда
		ДатаВыставления = ТекущаяДата();
		ЭлектронныйДокумент = ДокументыОбмена[0].ПодписанныйДокумент;
		ЭСЧФобщий.ОтразитьВыставлениеДокумента(Объект.Ссылка, ДатаВыставления, Объект.Номер,,,, ЭлектронныйДокумент, Ложь)
	КонецЕсли;
	
	Для каждого Ошибка Из Ошибки Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Ошибка;
		Сообщение.Сообщить();
	КонецЦикла;
	
	~Выход:
	Если Не РежимРаботы И Не Отказ Тогда
		ПриЗавершенииАвторизации(Отказ, Ошибки);
	ИначеЕсли Не Отказ Тогда
		ЭСЧФсервер.ПриЗавершенииАвторизацииНаСервере()
	КонецЕсли;
	
	~ВыходБезЗавершения:
	Если Отказ Тогда
		Для каждого Ошибка Из Ошибки Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Ошибка;
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусДокумента(Команда)

	// авторизация и подключение
	Если РежимРаботы = 2 Тогда
		// авторизация не нужна
		МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузкиВходящие.СоздатьМенеджерЗаписи();
		МенеджерЗагрузитьСтатус.Организация = Объект.Организация;
		МенеджерЗагрузитьСтатус.Номер = Объект.Номер;
		Если Не ОбменСтатус Тогда
			МенеджерЗагрузитьСтатус.Записать(Истина);
			ОбменСтатус = Истина;
		Иначе
			МенеджерЗагрузитьСтатус.Удалить();
			ОбменСтатус = Ложь;
		КонецЕсли;
		УправлениеФормой();
		Перейти ~ВыходБезЗавершения;
	ИначеЕсли Не РежимРаботы И ЭСЧФклиент.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Отказ = Ложь;
		ТекстОшибки = "";
		ПриПодключенииКСервису(Отказ, ТекстОшибки);
		Если Отказ Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Сообщить();
			Перейти ~Выход;
		КонецЕсли;
	ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли Не РежимРаботы И Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли РежимРаботы И Не ЭСЧФсервер.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Перейти ~Выход;
	КонецЕсли;
	ТекстОтвета = "";
	ТекстОшибки = "";
	Принят = Ложь;
	ДатаСостояния = Неопределено;
	Если Не РежимРаботы Тогда
		Отказ = ( Не ЭСЧФклиент.ОбновитьДанныеОСтатусеДокумента(Объект.Номер,, ДатаСостояния, Статус,, ТекстОшибки,,,, Ложь) );
	Иначе
		Отказ = ( Не ЭСЧФсервер.ОбновитьДанныеОСтатусеДокумента(Объект.Номер,, ДатаСостояния, Статус,, ТекстОшибки,,,, Ложь) );
	КонецЕсли;
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	КонецЕсли;
	~Выход:
	ТекстОшибки = "";
	ПриЗавершенииАвторизации(Отказ, ТекстОшибки);
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	КонецЕсли;
	~ВыходБезЗавершения:

КонецПроцедуры

#КонецОбласти

#Область Данные

&НаКлиенте
Процедура ВыгрузитьВXML(Команда)
    //ЭСЧФклиент.ВыгрузитьДокументВФайлДиалог(Объект,,, Объект.ПоставщикУНП, Объект.Товары, Объект.Грузоотправители, Объект.Грузополучатели, Объект.ДокументыПодтверждающиеПоставку, Истина)
    ЭСЧФклиент.ВыгрузитьДокументы(Объект.ЭлектронныйДокумент)
КонецПроцедуры

#КонецОбласти

#Область УправлениеФормой

&НаКлиенте
Процедура УправлениеФормой()

	ДоступнаВыгрузка = ЭСЧФклиентПовтИсп.ДоступнаВыгрузкаДокументовВФайлы(РежимРаботы);
	ДоступенОбмен = ЭСЧФклиентПовтИсп.ДоступнаКомпонентаОбменаИПодписания(РежимРаботы);
	Элементы.Товары.Видимость = Объект.ОбменТовары;
	Элементы.ГруппаИтогиТаблицыТоваров.Видимость = ( Не Объект.ОбменТовары );
	Элементы.ГруппаГрузоотправителиГрузополучателиТаблицы.Видимость = Объект.ОбменГрузоотправителиГрузополучатели;
	Элементы.ГруппаГрузоотправителиГрузополучателиКратко.Видимость = ( Не Объект.ОбменГрузоотправителиГрузополучатели );
	Элементы.ДокументыПодтверждающиеПоставку.Видимость = Объект.ОбменДокументыПоставки;
	Элементы.ГруппаДокументПоставки.Видимость = ( Не Объект.ОбменДокументыПоставки );
	ЕстьПолныеПрава = ( РольДоступна("ПолныеПрава") Или РольДоступна("ИспользованиеЭСЧФПолный") );
	Элементы.ФормаПодменюРежимРаботы.Доступность = ( ЕстьПолныеПрава И ( ДоступнаВыгрузка Или ДоступенОбмен ) );
	// доступность процедур работы с XML и порталом
	ДоступнаВыгрузка = ЭСЧФклиентПовтИсп.ДоступнаВыгрузкаДокументовВФайлы(РежимРаботы);
	ДоступенОбмен = ЭСЧФклиентПовтИсп.ДоступнаКомпонентаОбменаИПодписания(РежимРаботы);
	Элементы.ФормаСформироватьПодписатьОтправить.Доступность = ( ДоступнаВыгрузка И ДоступенОбмен );
	Элементы.ФормаОбновитьСтатусДокумента.Доступность = ДоступенОбмен;
	
	Элементы.ФормаУстановитьРежимРаботыНаКлиенте.Пометка  = ( РежимРаботы = 0 );
	Элементы.ФормаУстановитьРежимРаботыНаСервере.Пометка  = ( РежимРаботы = 1 );
	Элементы.ФормаУстановитьРежимРаботыОтложенный.Пометка = ( РежимРаботы = 2 );
	
	Если РежимРаботы = 2 Тогда
		
		Если ОбменВыгрузить Тогда
			Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отменить отправку";
			Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отправить документ";
			Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		КонецЕсли;
		
		Если ОбменСтатус Тогда
			Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Отменить обновление";
			Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Обновить статус";
			Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		КонецЕсли;
		
	Иначе
		
		Элементы.ФормаСформироватьПодписатьОтправить.Заголовок = "Отправить документ";
		Элементы.ФормаСформироватьПодписатьОтправить.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		Элементы.ФормаОбновитьСтатусДокумента.Заголовок = "Обновить статус";
		Элементы.ФормаОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаКлиенте(Команда)

	Отказ = Ложь;
	Ошибка = "";
	ПодключитьКомпонентыДоступаКПорталуЭСФЧ(Отказ, Ошибка);
	Если Не Отказ Тогда
		РежимРаботы = 0;
		УправлениеФормой();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Ошибка;
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаСервере(Команда)
	РежимРаботы = 1;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыОтложенный(Команда)
	РежимРаботы = 2;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура СтатусОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Статус) Тогда
		Возврат;
	КонецЕсли;
	
	Квитанция = РегистрыСведений.КвитанцииВходящих.СоздатьМенеджерЗаписи();
	Квитанция.Год    = Объект.НомерГод;
	Квитанция.Объект = Объект.НомерОбъект;
	Квитанция.Номер  = Объект.НомерНомер;
	
	Квитанция.Прочитать();
	
	Если Квитанция.Выбран() Тогда
		Форма = Квитанция.ПолучитьФорму();//ПолучитьФорму("РегистрСведений.КвитанцииВходящих.ФормаЗаписи");
		//ЗначениеВДанныеФормы(Квитанция, Форма.Запись);
		Форма.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Квитанция не найдена";
		Сообщение.Поле = "Статус"; //имя реквизита 
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаВыставленияОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(ДатаВыставления) Тогда
		Возврат;
	КонецЕсли;
	
	Квитанция = РегистрыСведений.ВыставленныеДокументыВходящие.СоздатьМенеджерЗаписи();
	Квитанция.Год    = Объект.НомерГод;
	Квитанция.Объект = Объект.НомерОбъект;
	Квитанция.Номер  = Объект.НомерНомер;
	
	Квитанция.Прочитать();
	
	Если Квитанция.Выбран() Тогда
		Форма = Квитанция.ПолучитьФорму();//ПолучитьФорму("РегистрСведений.ВыставленныеДокументыВходящие.ФормаЗаписи");
		//ЗначениеВДанныеФормы(Квитанция, Форма.Запись);
		Форма.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные о выставлении не найдены";
		Сообщение.Поле = "Статус"; //имя реквизита 
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = Истина;//( Не РольДоступна("ПолныеПрава") И Не РольДоступна("ИспользованиеЭСЧФПолный") );
	РежимРаботы = ЭСЧФсервер.РежимРаботыПоУмолчаниюЭСЧФ()
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой()
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// поиск статуса документа
	Квитанция = РегистрыСведений.КвитанцииВходящих.СоздатьМенеджерЗаписи();
	ЭСЧФобщий.РазложитьНомер(Объект.Номер, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
	Квитанция.Прочитать();
	Если Квитанция.Выбран() Тогда
		Статус = Квитанция.Статус;
		ДатаСостояния = Квитанция.ДатаСостояния;
	КонецЕсли;
	// поиск даты выставления
	ВыставленныеДокументы = РегистрыСведений.ВыставленныеДокументыВходящие.СоздатьМенеджерЗаписи();
	ЭСЧФобщий.РазложитьНомер(Объект.Номер, ВыставленныеДокументы.Год, ВыставленныеДокументы.Объект, ВыставленныеДокументы.Номер);
	ВыставленныеДокументы.Прочитать();
	Если ВыставленныеДокументы.Выбран() Тогда
		ДатаВыставления = ВыставленныеДокументы.ДатаВыставления;
		ЭлектронныйДокумент = ВыставленныеДокументы.ЭлектронныйДокумент;
		Принят = ВыставленныеДокументы.Принят;
	КонецЕсли;
	// данные отложенного обмена
	МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузкиВходящие.СоздатьМенеджерЗаписи();
	МенеджерЗагрузитьСтатус.Организация = Объект.Организация;
	МенеджерНомераВыгрузить = РегистрыСведений.НомераДляПодтверждения.СоздатьМенеджерЗаписи();
	МенеджерНомераВыгрузить.Организация = Объект.Организация;
	МенеджерЗагрузитьСтатус.Номер = Объект.Номер;
	МенеджерЗагрузитьСтатус.Прочитать();
	ОбменСтатус = МенеджерЗагрузитьСтатус.Выбран();
	МенеджерНомераВыгрузить.Номер = Объект.Номер;
	МенеджерНомераВыгрузить.Прочитать();
	ОбменВыгрузить = МенеджерНомераВыгрузить.Выбран();

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	УправлениеФормой();
КонецПроцедуры
