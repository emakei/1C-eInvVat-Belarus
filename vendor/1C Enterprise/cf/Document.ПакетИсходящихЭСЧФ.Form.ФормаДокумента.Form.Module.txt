
#Область УправлениеФормой

&НаКлиенте
Процедура ВыбратьПериод(Команда)
    РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(Объект.НачалоПериода, Объект.КонецПериода)
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()

	Элементы.ДокументыДляОтраженияОбменСтатус.Видимость    = ( РежимРаботы = 2 И Объект.Проведен );
	Элементы.ДокументыДляОтраженияОбменВыгрузить.Видимость = ( РежимРаботы = 2 И Объект.Проведен );
	ЭтоРеализация      = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Реализация") );
    ЭтоПеревыставление = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Перевыставление") );
    ЭтоСумовыеРазницы  = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.СуммовыеРазницы") );
    Элементы.ДокументыДляОтраженияЗаполнитьРеализацию.Доступность      = ( Не Объект.Проведен );
    //Элементы.ДокументыДляОтраженияЗаполнитьПеревыставления.Доступность = ЭтоПеревыставление;
    Элементы.ГруппаОтборТабличныхЧастей.Доступность                    = ( Не ЭтоПеревыставление И Не ЭтоСумовыеРазницы );
    Элементы.ДоговорКонтрагента.Доступность                            = ЗначениеЗаполнено(Объект.Контрагент);
    Элементы.ГруппаОтборСчета.Видимость                                = ЭтоСумовыеРазницы;
	Элементы.СчетРасчетовСКонтрагентами.Видимость                      = ЭтоСумовыеРазницы;
	
	Проведен = Объект.Проведен;
	Элементы.ДокументыДляОтраженияЗаполнить.Доступность = (Не Проведен);
	
    ЕстьПолныеПрава = ( РольДоступна("ПолныеПрава") Или РольДоступна("ИспользованиеЭСЧФПолный") );
    
    // доступность процедур работы с XML и порталом
    ДоступнаВыгрузка = ЭСЧФклиентПовтИсп.ДоступнаВыгрузкаДокументовВФайлы(РежимРаботы);
    ДоступенОбмен = ЭСЧФклиентПовтИсп.ДоступнаКомпонентаОбменаИПодписания(РежимРаботы);
    Элементы.ФормаПодменюРежимРаботы.Доступность = ( ЕстьПолныеПрава И ( ДоступнаВыгрузка Или ДоступенОбмен ) );
    Элементы.ФормаВыгрузитьВсеВXML.Доступность = ДоступнаВыгрузка;
    Элементы.ДокументыДляОтраженияКонтекстноеМенюВыгрузитьВXML.Доступность = ДоступнаВыгрузка;
    Элементы.СформироватьПодписатьОтправить.Доступность = ( ДоступнаВыгрузка И ДоступенОбмен );
    Элементы.ФормаОбновитьСтатусыДокументов.Доступность = ( ДоступнаВыгрузка И ДоступенОбмен );
	Элементы.ДокументыДляОтраженияОбменСтатус.Доступность    = ( ДоступнаВыгрузка И ДоступенОбмен );
	Элементы.ДокументыДляОтраженияОбменВыгрузить.Доступность = ( ДоступнаВыгрузка И ДоступенОбмен );
	Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Доступность = ( ДоступнаВыгрузка И ДоступенОбмен И Объект.Проведен );
    Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Доступность = ( ДоступенОбмен И Объект.Проведен );
    
    // доступность реквизитов таблиц для редактирования
    Элементы.ДокументыДляОтраженияГруппаДокумент.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаСуммы.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаЭлектронныйДокумент.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаКонтрагент.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаДатыЭлектронногоДокумента.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаТипДокументаПоставки.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаДокументПоставки.Доступность = ЕстьПолныеПрава;
    Элементы.ДокументыДляОтраженияГруппаКЭСЧФ.Доступность = ЕстьПолныеПрава;
	//Элементы.Товары.Доступность = ЕстьПолныеПрава;
	
	Элементы.ФормаУстановитьРежимРаботыНаКлиенте.Пометка  = ( РежимРаботы = 0 );
	Элементы.ФормаУстановитьРежимРаботыНаСервере.Пометка  = ( РежимРаботы = 1 );
	Элементы.ФормаУстановитьРежимРаботыОтложенный.Пометка = ( РежимРаботы = 2 );
	
    Если ЭтоРеализация Тогда
        Элементы.ДокументыДляОтраженияЗаполнить.Заголовок = "Заполнить реализации";
        ТекстЗаголовка = "Реализации"
    ИначеЕсли ЭтоПеревыставление Тогда
        Элементы.ДокументыДляОтраженияЗаполнить.Заголовок = "Заполнить перевыставления";
        ТекстЗаголовка = "Перевыставления"
    ИначеЕсли ЭтоСумовыеРазницы Тогда
        Элементы.ДокументыДляОтраженияЗаполнить.Заголовок = "Заполнить суммовые разницы";
        ТекстЗаголовка = "Суммовым разницы"
    Иначе
        Элементы.ДокументыДляОтраженияЗаполнить.Доступность = Ложь;
        ТекстЗаголовка = "Прочие операции"
    КонецЕсли;
    
    Если ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
        ТекстЗаголовка = ТекстЗаголовка + " с " + Объект.НачалоПериода
    КонецЕсли;
    Если ЗначениеЗаполнено(Объект.КонецПериода) Тогда
        ТекстЗаголовка = ТекстЗаголовка + " по " + Объект.КонецПериода
    КонецЕсли;
    
    ЭтаФорма.Заголовок = ТекстЗаголовка;

КонецПроцедуры

&НаКлиенте
Процедура УправлениеКонтекстнымМенюДокументов()

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимРаботы = 2 Тогда
		
		Если ТекДанные.ОбменВыгрузить Тогда
			Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Заголовок = "Отменить отправку";
			Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Заголовок = "Отправить документ";
			Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		КонецЕсли;
		
		Если ТекДанные.ОбменСтатус Тогда
			Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Заголовок = "Отменить обновление";
			Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.ГеографическаяСхема;
		Иначе
			Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Заголовок = "Обновить статус";
			Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		КонецЕсли;
		
	Иначе
		
		Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Заголовок = "Отправить документ";
		Элементы.ДокументыДляОтраженияКонтекстноеМенюСформироватьПодписатьОтправитьДокумент.Картинка = БиблиотекаКартинок.ПерейтиПоНавигационнойСсылке;
		Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Заголовок = "Обновить статус";
		Элементы.ДокументыДляОтраженияКонтекстноеМенюОбновитьСтатусДокумента.Картинка = БиблиотекаКартинок.Обновить;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияСчетФактураПродавцаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
    СтандартнаяОбработка = Ложь;
    ПараметрыВызова = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ДополнительныеПараметрыВыбора"
                                      , Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента
                                      , Элементы.ДокументыДляОтражения.ТекущаяСтрока);
    ФормаВыбора = ПолучитьФорму("Документ.ЭлектронныйСчетФактураПолученный.ФормаВыбора", ПараметрыВызова, ЭтаФорма);
    ФормаВыбора.Открыть();
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
    
    Перем ВыбЗнч;
    
    Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("СчетФактураВыданный", ВыбЗнч) Тогда
        Строка = Элементы.ДокументыДляОтражения.ДанныеСтроки(ВыбранноеЗначение.ДополнительныеПараметрыВыбора);
        Строка.СчетФактураПродавца = ВыбЗнч
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
    
    Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
    УправлениеФормой();
    
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияПередНачаломИзменения(Элемент, Отказ)

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Отказ = ( ТекДанные.Принят И Не ЗначениеЗаполнено(ТекДанные.Статус) Или МассивНеРедактироватьСтатусы.НайтиПоЗначению(ТекДанные.Статус) <> Неопределено И Не Элемент.ТекущийЭлемент.Имя = "ДокументыДляОтраженияОбменСтатус" );

КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияПередУдалением(Элемент, Отказ)
    
    ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
    Отказ = ( ТекДанные.Принят И Не ЗначениеЗаполнено(ТекДанные.Статус) Или МассивНеРедактироватьСтатусы.НайтиПоЗначению(ТекДанные.Статус) <> Неопределено );
    
    Если Не Отказ Тогда
        СтрокиУдалить = Объект.Товары.НайтиСтроки(Новый Структура("КлючСтроки", ТекДанные.НомерСтроки));
        Для каждого цСтрУдалить Из СтрокиУдалить Цикл
            Объект.Товары.Удалить(цСтрУдалить);
        КонецЦикла;
    Иначе
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Нельзя удалить документ со статусом: " + ТекДанные.Статус;
        Сообщение.Сообщить();
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияСуммаПриИзменении(Элемент)
    
    Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
    СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
    Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
    ОбновитьСуммыВТаблицеДокументов()
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияСуммаНДСПриИзменении(Элемент)
    
    Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
    СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
    Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
    ОбновитьСуммыВТаблицеДокументов()
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияАкцизПриИзменении(Элемент)
    
    Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
    СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
    Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
    ОбновитьСуммыВТаблицеДокументов()
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияПослеУдаления(Элемент)
    
    Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
    СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
    Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
    ОбновитьСуммыВТаблицеДокументов()
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияПриАктивизацииСтроки(Элемент)
    
    ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
    Если ТекДанные = Неопределено Тогда
        Возврат
    КонецЕсли;
    Отбор = Новый Структура("КлючСтроки", ТекДанные.НомерСтроки);
    Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
    Строки = Объект.Товары.НайтиСтроки(Отбор);
    ТоварыСтоимость     = 0;
    ТоварыСтоимостьСНДС = 0;
    ТоварыСуммаАкциза   = 0;
    ТоварыСуммаНДС      = 0;
    Для каждого СтрокаТовара Из Строки Цикл
        ТоварыСтоимость     = ТоварыСтоимость + СтрокаТовара.Стоимость;
        ТоварыСтоимостьСНДС = ТоварыСтоимостьСНДС + СтрокаТовара.СтоимостьСНДС;
        ТоварыСуммаАкциза   = ТоварыСуммаАкциза + СтрокаТовара.СуммаАкциза;
        ТоварыСуммаНДС      = ТоварыСуммаНДС + СтрокаТовара.СуммаНДС;
    КонецЦикла;
	
	УправлениеКонтекстнымМенюДокументов()
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСуммыВТаблицеДокументов()
	
	Элементы.ДокументыДляОтраженияСумма.Заголовок = "Сумма - " + Сумма;
	Элементы.ДокументыДляОтраженияСуммаНДС.Заголовок = "НДС - " + СуммаНДС;
	Элементы.ДокументыДляОтраженияАкциз.Заголовок = "Акциз - " + Акциз;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаКлиенте(Команда)

	Отказ = Ложь;
	Ошибка = "";
	ПодключитьКомпонентыДоступаКПорталуЭСФЧ(Отказ, Ошибка);
	Если Не Отказ Тогда
		РежимРаботы = 0;
		УправлениеФормой();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Ошибка;
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыНаСервере(Команда)
	РежимРаботы = 1;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРаботыОтложенный(Команда)
	РежимРаботы = 2;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Отказ = Истина
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияОбменСтатусПриИзменении(Элемент)

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Номер = ТекДанные.НомерЭСЧФ;
	Если ПустаяСтрока(Номер) Тогда
		ТекДанные.ОбменСтатус = Ложь;
		Возврат;
	КонецЕсли;
	
	МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
	
	Если ТекДанные.ОбменСтатус Тогда
		МенеджерЗагрузитьСтатус.Прочитать();
		Если Не МенеджерЗагрузитьСтатус.Выбран() Тогда
			МенеджерЗагрузитьСтатус.Организация = Объект.Организация;
			МенеджерЗагрузитьСтатус.Номер = Номер;
			МенеджерЗагрузитьСтатус.Записать(Истина);
		КонецЕсли;
	Иначе
		МенеджерЗагрузитьСтатус.Организация = Объект.Организация;
		МенеджерЗагрузитьСтатус.Номер = Номер;
		МенеджерЗагрузитьСтатус.Удалить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляОтраженияОбменВыгрузитьПриИзменении(Элемент)

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Номер = ТекДанные.НомерЭСЧФ;
	Если ПустаяСтрока(Номер) Тогда
		ТекДанные.ОбменВыгрузить = Ложь;
		Возврат;
	КонецЕсли;
	
	МенеджерНомераВыгрузить = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
	
	Если ТекДанные.ОбменВыгрузить Тогда
		МенеджерНомераВыгрузить.Прочитать();
		Если Не МенеджерНомераВыгрузить.Выбран() Тогда
			МенеджерНомераВыгрузить.Организация = Объект.Организация;
			МенеджерНомераВыгрузить.Номер = Номер;
			МенеджерНомераВыгрузить.КоличествоВыгрузок = 1;
			МенеджерНомераВыгрузить.Записать(Истина);
		Иначе
			МенеджерНомераВыгрузить.КоличествоВыгрузок = МенеджерНомераВыгрузить.КоличествоВыгрузок + 1;
			МенеджерНомераВыгрузить.Записать(Истина);
		КонецЕсли;
	Иначе
		МенеджерНомераВыгрузить.Организация = Объект.Организация;
		МенеджерНомераВыгрузить.Номер = Номер;
		МенеджерНомераВыгрузить.Удалить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОформитьСтроку(Ошибки, НомерСтроки)

	// оформление строки
	СтрокаТЧ = Объект.ДокументыДляОтражения[НомерСтроки-1];
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование    = Истина;
	
	ОформлениеУО        = ЭлементУсловногоОформления.Оформление;
	ОтборУО             = ЭлементУсловногоОформления.Отбор;
	ОформляемыеПоляУО   = ЭлементУсловногоОформления.Поля;
	
	Если СтрокаТЧ.ЕстьОшибки Тогда
		ОформлениеУО.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(255,200,200));
	Иначе
		ОформлениеУО.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(255,255,255));
	КонецЕсли;
	
	ЭлементОтбора                = ОтборУО.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДокументыДляОтражения.НомерСтроки");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НомерСтроки;
	ЭлементОтбора.Использование  = Истина;
	
	Для каждого Ошибка Из Ошибки Цикл
		
		Если ТипЗнч(Ошибка) <> Тип("Структура") Тогда
			
			Продолжить;
			
		ИначеЕсли Лев(Ошибка.Текст, 3) = "Стр" Тогда
			
			// оформление строки товаров
			НомСтр = Число(Сред(Ошибка.Текст, 5, 1));
			СтрокиТовара = Объект.Товары.НайтиСтроки( Новый Структура("КлючСтроки, СтрокаНомер", НомерСтроки, НомСтр));
			
			Если СтрокиТовара.Количество() Тогда
				
				СтрокаТовара = СтрокиТовара[0];
				ЭлементУсловногоОформленияТовара = УсловноеОформление.Элементы.Добавить();
				ЭлементУсловногоОформленияТовара.Использование    = Истина;
				
				ОформлениеУОТ        = ЭлементУсловногоОформленияТовара.Оформление;
				ОтборУОТ             = ЭлементУсловногоОформленияТовара.Отбор;
				ОформляемыеПоляУОТ   = ЭлементУсловногоОформленияТовара.Поля;
				
				ОформлениеУОТ.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(255,200,200));
				
				ЭлементОтбораТовара                = ОтборУОТ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораТовара.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.НомерСтроки");
				ЭлементОтбораТовара.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбораТовара.ПравоеЗначение = СтрокаТовара.НомерСтроки;
				ЭлементОтбораТовара.Использование  = Истина;
				
				ИмяПоля = Ошибка.Поле;
				ОформляемоеПоле      = ОформляемыеПоляУОТ.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
				
				ОформляемоеПоле      = ОформляемыеПоляУОТ.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТоварыСтрокаНомер");
				
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;
		
		ИмяПоля = Ошибка.Поле;
		ОформляемоеПоле      = ОформляемыеПоляУО.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументыДляОтражения" + ИмяПоля);
		
	КонецЦикла;
	
	ОформляемоеПоле      = ОформляемыеПоляУО.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументыДляОтраженияНомерСтроки");

КонецПроцедуры

&НаСервере
Процедура ОчиститьУсловноеОформление( НомерСтроки = Неопределено )

	Если НомерСтроки = Неопределено Тогда
		
		УсловноеОформление.Элементы.Очистить();
		
	Иначе
		
		Для каждого Элемент Из УсловноеОформление.Элементы Цикл
			Если Элемент.Отбор.Элементы[0].ПравоеЗначение = НомерСтроки Тогда
				УсловноеОформление.Элементы.Удалить(Элемент);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ДействияНадДокументами

&НаКлиенте
Процедура Заполнить(Команда)
    
    Объект.ДокументыДляОтражения.Очистить();
    ОчиститьСообщения();
    
    ЭтоРеализация      = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Реализация") );
    ЭтоПеревыставление = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Перевыставление") );
    ЭтоСумовыеРазницы  = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.СуммовыеРазницы") );
    
    Если Не ЭтоСумовыеРазницы И Не ( Объект.ДокументыПоНМА Или Объект.ДокументыПоОС Или Объект.ДокументыПоТоварам Или Объект.ДокументыПоУслугам ) Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Выберите т/ч для фильтрации";
        Сообщение.Поле = "ГруппаОтборТабличныхЧастей"; //имя реквизита 
        Сообщение.УстановитьДанные(Объект.Ссылка); //Ссылка на объект ИБ
        Сообщение.Сообщить();
        Возврат
    КонецЕсли;
    
    Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Не выбрана организация";
        Сообщение.Поле = "Организация"; //имя реквизита 
        Сообщение.УстановитьДанные(Объект.Ссылка); //Ссылка на объект ИБ
        Сообщение.Сообщить();
        Возврат
    КонецЕсли;
    
    Если Не ( ЗначениеЗаполнено(Объект.НачалоПериода) И ЗначениеЗаполнено(Объект.КонецПериода) ) Или Объект.КонецПериода < Объект.НачалоПериода Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Выберите корректный период";
        Сообщение.Сообщить();
        Возврат
    КонецЕсли;
    
    Если ЭтоСумовыеРазницы И Не ( ЗначениеЗаполнено(Объект.СчетДоходов) И ЗначениеЗаполнено(Объект.СчетРасходов) И ЗначениеЗаполнено(Объект.СтатьяСуммовыхРазниц) И ЗначениеЗаполнено(Объект.СчетРасчетовСКонтрагентами) ) Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Заполните счета и статьи";
        Сообщение.Сообщить();
        Возврат
    КонецЕсли;
    
    Если ЭтоРеализация Тогда
        ЗаполнитьТаблицуНаСервере()
    ИначеЕсли ЭтоПеревыставление Тогда
		ЗаполнитьПеревыставленияНаСервере()
    ИначеЕсли ЭтоСумовыеРазницы Тогда
		ЗаполнитьСумовыеРазницыНаСервере()
    Иначе
        ВызватьИсключение "Не известная операция: " + Объект.ВидОперации;
    КонецЕсли;
    
    Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
    СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
    Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
    ОбновитьСуммыВТаблицеДокументов();
	
    ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "ОбновитьТовары");
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Операция завершена";
    Сообщение.Сообщить();
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСумовыеРазницыНаСервере()
	ЭСЧФОбработкаДанныхДокументов.ПакетИсходящихЭСЧФ_ЗаполнитьСумовыеРазницы( Объект );
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПеревыставленияНаСервере()
	ЭСЧФОбработкаДанныхДокументов.ПакетИсходящихЭСЧФ_ЗаполнитьПеревыставления( Объект );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПеревыставления(Команда)
	ЗаполнитьПеревыставленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()
	ЭСЧФОбработкаДанныхДокументов.ПакетИсходящихЭСЧФ_ЗаполитьРеализации( Объект );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
    ЗаполнитьТаблицуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВXML(Команда)
    //ВыполнитьВыгрузкуВXML(Элементы.ДокументыДляОтражения.ВыделенныеСтроки);
    ВыполнитьДействияНадДокументами(Элементы.ДокументыДляОтражения.ВыделенныеСтроки, "Выгрузка")
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВсеВXML(Команда)
    //ВыполнитьВыгрузкуВXML(Объект.ДокументыДляОтражения)
    ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Выгрузка")
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокумент(Команда)
    
    //ВыполнитьПроверкуДокументов(Элементы.ДокументыДляОтражения.ВыделенныеСтроки)
    Ответ = Вопрос("Показать документ(-ы)?", РежимДиалогаВопрос.ДаНетОтмена,,, "Проверка документа(-ов)");
    
    Если Ответ = КодВозвратаДиалога.Отмена Тогда
        Возврат
    ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
        Действие = "ПроверкаИПечать"
    Иначе
        Действие = "Проверка"
    КонецЕсли;
    
    
    ВыполнитьДействияНадДокументами(Элементы.ДокументыДляОтражения.ВыделенныеСтроки, Действие);
    
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументы(Команда)
    //ВыполнитьПроверкуДокументов(Объект.ДокументыДляОтражения)
	ОчиститьУсловноеОформление();
    ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Проверка")
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПодписатьОтправить(Команда)
	//ВыполнитьОтправкуДокументов(Объект.ДокументыДляОтражения)
	ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Отправка")
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПодписатьОтправитьДокумент(Команда)
    //ВыполнитьОтправкуДокументов(Элементы.ДокументыДляОтражения.ВыделенныеСтроки)
    ВыполнитьДействияНадДокументами(Элементы.ДокументыДляОтражения.ВыделенныеСтроки, "Отправка")
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусДокумента(Команда)
	
    ВыполнитьДействияНадДокументами(Элементы.ДокументыДляОтражения.ВыделенныеСтроки, "Статус")
    //цДокумент = Элементы.ДокументыДляОтражения.ТекущиеДанные;
    //Если ЭСЧФклиент.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
    //	Отказ = Ложь;
    //	ТекстОшибки = "";
    //	ПриПодключенииКСервису(Отказ, ТекстОшибки);
    //	Если Отказ Тогда
    //		Сообщение = Новый СообщениеПользователю;
    //		Сообщение.Текст = ТекстОшибки;
    //		Сообщение.Сообщить();
    //		Возврат
    //	КонецЕсли;
    //ИначеЕсли Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
    //	Возврат
    //ИначеЕсли Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
    //	Возврат
    //КонецЕсли;
    //ТекстОшибки = "";
    //Принят = Ложь;
    //Отказ = ( Не ЭСЧФобщий.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ,, цДокумент.ДатаСтатуса, цДокумент.Статус,, ТекстОшибки) );
    //Если Отказ Тогда
    //	Сообщение = Новый СообщениеПользователю;
    //	Сообщение.Текст = ТекстОшибки;
    //	Сообщение.Сообщить();
    //КонецЕсли;
    //ТекстОшибки = "";
    //ПриЗавершенииАвторизации(Отказ, ТекстОшибки);
    //Если Отказ Тогда
    //	Сообщение = Новый СообщениеПользователю;
    //	Сообщение.Текст = ТекстОшибки;
    //	Сообщение.Сообщить();
    //КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыДокументов(Команда)
    ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Статус");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияНадДокументами(Коллекция, Действие, Отказ = Ложь)
	
	Перем СтатусПоставщика, СтатусПолучателя, СтавкаНДС, ЗапросПеревыставление;
	
	ОчиститьСообщения();
	
	ЭтоОтправка          = ( Действие = "Отправка" );
	ЭтоВыгрузка          = ( Действие = "Выгрузка" );
	ЭтоПроверкаИПечать   = ( Действие = "ПроверкаИПечать" );
	ЭтоПроверка          = ( ЭтоПроверкаИПечать Или Действие = "Проверка" );
	ЭтоОбновление        = ( Действие = "Статус" );
	ЭтоОбновлениеТоваров = ( Действие = "ОбновитьТовары" );
	ЭтоПеревыставление   = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Перевыставление") );
	ЭтоСумовыеРазницы    = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.СуммовыеРазницы") );
	ФормироватьДокумент  = ( ЭтоВыгрузка Или ЭтоПроверка Или ЭтоОтправка И РежимРаботы <> 2 );
	
	лВыгрузкаВКаталог = Ложь;
	
	Если ( ЭтоОтправка Или ЭтоОбновление ) И ( Не Объект.Проведен Или Модифицированность ) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отправить можно только проведенный документ";
		Отказ = Истина;
		Сообщение.Сообщить();
		Перейти ~ВыходБезЗавершения;
		
	ИначеЕсли ЭтоВыгрузка Тогда
		
		лВыгрузкаВКаталог = ( Коллекция.Количество() > 1 );
		
		Если лВыгрузкаВКаталог Тогда
			ОсновнойКаталогПользователя = ДополнительныеСлужебныеПроцедурыИФункции.ПолучитьЗначениеНастрокиПоНаименованию(ПараметрыСеанса.ТекущийПользователь, "Основной каталог файлов пользователя", Истина);
			Если Не РежимРаботы Или РежимРаботы = 2 Тогда
				Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
				Диалог.Заголовок = "Выгрузка документов в каталог";
				Диалог.МножественныйВыбор = Ложь;
				Диалог.Каталог = ОсновнойКаталогПользователя;
				Если Не Диалог.Выбрать() Тогда
					Возврат
				Иначе
					ОсновнойКаталогПользователя = Диалог.Каталог
				КонецЕсли;
			Иначе
				Если Не ВвестиЗначение(ОсновнойКаталогПользователя, "Введите путь выгрузки файлов относительно сервера", Тип("Строка")) Тогда
					Возврат
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// авторизация и подключение (если требуется)
	Если РежимРаботы = 2 Тогда
		// авторизация не нужна
	ИначеЕсли ( ЭтоОтправка Или ЭтоОбновление ) И Не РежимРаботы И ЭСЧФклиент.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Отказ = Ложь;
		ТекстОшибки = "";
		ПриПодключенииКСервису(Отказ, ТекстОшибки);
		Если Отказ Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Сообщить();
			Перейти ~Выход;
		КонецЕсли;
	ИначеЕсли ( ЭтоОтправка Или ЭтоОбновление ) И Не РежимРаботы И Не ЭСЧФКлиент.ПриАвторизацииБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли ( ЭтоОтправка Или ЭтоОбновление ) И Не РежимРаботы И Не ЭСЧФКлиент.ПриПодключенииКСервисуБезПараметров() Тогда
		Перейти ~Выход;
	ИначеЕсли ( ЭтоОтправка Или ЭтоОбновление ) И РежимРаботы И Не ЭСЧФсервер.ПриАвторизацииПоОрганизации(Объект.Организация) Тогда
		Перейти ~Выход;
	КонецЕсли;
	
	Если ЭтоПеревыставление Тогда
		СтатусПоставщика = ПредопределенноеЗначение("Перечисление.СтатусыПоставщикаЭСЧФ.Посредник");
		СтатусПолучателя = ПредопределенноеЗначение("Перечисление.СтатусыПолучателяЭСЧФ.Потребитель");
	КонецЕсли;
	
	// при перевыставлении статусы всегда одинаковые
	Если ЭтоОбновлениеТоваров И ЭтоПеревыставление Тогда
		
		//СтатусПоставщика = ПредопределенноеЗначение("Перечисление.СтатусыПоставщикаЭСЧФ.Посредник");
		//СтатусПолучателя = ПредопределенноеЗначение("Перечисление.СтатусыПолучателяЭСЧФ.Потребитель");
		
		ЗапросПеревыставление = Новый Запрос;
		ЗапросПеревыставление.УстановитьПараметр("ТипСтавки",   ПредопределенноеЗначение("Перечисление.ТипыСтавокНДСЭСЧФ.Фиксированная"));
		ЗапросПеревыставление.УстановитьПараметр("СтавкаНДС",   ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"));
		ЗапросПеревыставление.УстановитьПараметр("СтавкаНДС20", ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20"));
		
		ЗапросПеревыставление.Текст = "ВЫБРАТЬ
		| Услуги.НомерСтроки КАК НомерСтроки,
		| Услуги.Номенклатура КАК Товар,
		| Услуги.Номенклатура.КодТНВЭДТС КАК КодТНВЭДТС,
		| Услуги.Номенклатура.КодОКЭД КАК КодОКЭД,
		| NULL КАК ЕдиницаИзмерения,
		| Услуги.Количество КАК Количество,
		| Услуги.Цена КАК Цена,
		| Услуги.Сумма - Услуги.Сумма * 20 / 120 КАК Стоимость,
		| &СтавкаНДС20 КАК СтавкаНДС,
		| Услуги.Сумма * 20 / 120 КАК СуммаНДС,
		| Услуги.Сумма КАК СтоимостьСНДС,
		| &ТипСтавки КАК ТипСтавкиНДС,
		| 20 КАК ПроцентНДС
		|ИЗ
		| Документ.ПоступлениеТоваровУслуг.Услуги КАК Услуги
		|ГДЕ
		| Услуги.Ссылка = &Ссылка
		| И Услуги.СтавкаНДС = &СтавкаНДС
		| И Услуги.Субконто1 = &Контрагент
		| И Услуги.Субконто2 = &ДоговорКонтрагента"
		
	КонецЕсли;
	
	// инициализация переменных
	Если ФормироватьДокумент Тогда
		
		ЮрЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		УНП = СокрЛП(Объект.Организация.ИНН);
		Грузоотправители = ЭСЧФобщий.ПолучитьТаблицуГрузоотправителиГрузополучателиЭСЧФ();
		Грузополучатели  = ЭСЧФобщий.ПолучитьТаблицуГрузоотправителиГрузополучателиЭСЧФ(Ложь);
		ДокументыПодтверждающиеПоставку = ЭСЧФобщий.ПолучитьТаблицуДокументовПоставкиЭСЧФ();
		
	КонецЕсли;
	
	Ошибки = Новый Массив;
	Если Не ( ЭтоОтправка И РежимРаботы = 2 Или ЭтоОбновление ) Тогда
		Товары = ЭСЧФобщий.ПолучитьТаблицуТоваровЭСЧФ();
	КонецЕсли;
	ТипДополнительный = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный");
	
	Документ = Новый Структура;
	
	ПолучитьСтроку = ( ТипЗнч(Коллекция) = Тип("Массив") );
	
	// обработка таблицы документов
	Для каждого цЭлемент Из Коллекция Цикл
		
		Если ПолучитьСтроку Тогда
			цДокумент = Элементы.ДокументыДляОтражения.ДанныеСтроки(цЭлемент);
		Иначе
			цДокумент = цЭлемент
		КонецЕсли;
		
		Если ЭтоОбновлениеТоваров И ( цДокумент.Принят И Не ЗначениеЗаполнено(цДокумент.Статус) Или МассивНеРедактироватьСтатусы.НайтиПоЗначению(цДокумент.Статус) <> Неопределено ) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " нельзя обновлять товары по принятому документу";
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		// дополительные ЭСЧФ пока не выгружаем
		Если цДокумент.Тип = ТипДополнительный Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Дополнительные ЭСЧФ выгрузяться на портал позже (стр." + цДокумент.НомерСтроки + ")";
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		Если ЭтоОбновление И РежимРаботы = 2 Тогда
			
			//Если цДокумент.Принят Тогда
			//	Продолжить;
			//КонецЕсли;
			
			МенеджерСтатусов = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
			МенеджерСтатусов.Организация = Объект.Организация;
			МенеджерСтатусов.Номер = цДокумент.НомерЭСЧФ;
			Если цДокумент.ОбменСтатус Тогда
				МенеджерСтатусов.Удалить();
				цДокумент.ОбменСтатус = Ложь;
			Иначе
				МенеджерСтатусов.Прочитать();
				Если Не МенеджерСтатусов.Выбран() Тогда
					МенеджерСтатусов.Организация = Объект.Организация;
					МенеджерСтатусов.Номер = цДокумент.НомерЭСЧФ;
					МенеджерСтатусов.Записать(Истина);
				КонецЕсли;
				цДокумент.ОбменСтатус = Истина;
			КонецЕсли;
			
			Продолжить;
			
		ИначеЕсли ЭтоОбновление Тогда
			
			ТекстОшибки = "";
			Если Не РежимРаботы Тогда
				цДокумент.ЕстьОшибки = ( Не ЭСЧФклиент.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ,, цДокумент.ДатаСтатуса, цДокумент.Статус, цДокумент.ТекстСтатуса, ТекстОшибки) );
			Иначе
				цДокумент.ЕстьОшибки = ( Не ЭСЧФсервер.ОбновитьДанныеОСтатусеДокумента(цДокумент.НомерЭСЧФ,, цДокумент.ДатаСтатуса, цДокумент.Статус, цДокумент.ТекстСтатуса, ТекстОшибки) );
			КонецЕсли;
			
			Если цДокумент.ЕстьОшибки Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " " + ТекстОшибки;
				Сообщение.Сообщить();
			КонецЕсли;
			
			Отказ = ( Отказ Или цДокумент.ЕстьОшибки );
			
			Продолжить;
			
		КонецЕсли;
		
		Если Не ЭтоОбновлениеТоваров И ФормироватьДокумент Тогда
			// заполнение структуры пустыми значениями полей
			ЭСЧФобщий.ЗаполнитьСтруктуруПолейЭСЧФ(Документ, цДокумент.Тип);
			// дополняем данными из таблицы
			Документ.Вставить("НомерЭСЧФ",                  цДокумент.НомерЭСЧФ);
			Документ.Вставить("ДатаСовершенияОперацииЭСЧФ", цДокумент.ДатаСовершенияОперации);
			Документ.Вставить("ТипЭСЧФ",                    цДокумент.Тип);
			Документ.Вставить("КЭСЧФ",                      цДокумент.КЭСЧФ);
			Документ.Вставить("ОтобразитьПолучателю",       цДокумент.ОтобразитьПолучателю);
			Документ.Вставить("ДатаАннулированияЭСЧФ",      цДокумент.ДатаАннулирования);
			Если ЗначениеЗаполнено(цДокумент.СчетФактураПродавца) Тогда
				Документ.Вставить("ПоставщикНомерСчетаПродавца",       цДокумент.СчетФактураПродавца.Номер);
				Документ.Вставить("ПоставщикДатаВыпискиПродавца",      цДокумент.СчетФактураПродавца.ДатаСовершенияОперацииЭСЧФ);
			КонецЕсли;
		КонецЕсли;
		
		// получаем таблицу товаров
		Если ЭтоОбновлениеТоваров И Не ЭтоПеревыставление Тогда
			
			ВвознойНДС = ( СтатусПоставщика = ПредопределенноеЗначение("Перечисление.СтатусыПоставщикаЭСЧФ.ИностраннаяОрганизация") И СтатусПолучателя = ПредопределенноеЗначение("Перечисление.СтатусыПолучателяЭСЧФ.Покупатель") );
			ЭСЧФобщий.ПолучитьДанныеПоТоварам( цДокумент.Документ, Товары, СтавкаНДС,,,,,, ВвознойНДС, цДокумент.ДоговорКонтрагента.НДСРФ Или Не цДокумент.Контрагент.РезидентРБ И Не цДокумент.Исходящий );
			
			Если цДокумент.Тип = ТипДополнительный Тогда
				//TODO сравнить новую таблицу товаров с таблицей исходного документа
			КонецЕсли;
			
		ИначеЕсли ЭтоОбновлениеТоваров И ЭтоПеревыставление Тогда //ЭтоОбновлениеТоваров Тогда
			
			ЗапросПеревыставление.УстановитьПараметр("Ссылка",             цДокумент.Документ);
			ЗапросПеревыставление.УстановитьПараметр("Контрагент",         цДокумент.Контрагент);
			ЗапросПеревыставление.УстановитьПараметр("ДоговорКонтрагента", цДокумент.ДоговорКонтрагента);
			
			ВыборкаСтрок = ЗапросПеревыставление.Выполнить().Выбрать();
			Пока ВыборкаСтрок.Следующий() Цикл
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСтрок);
			КонецЦикла;
			
		ИначеЕсли Не ( ЭтоОтправка И РежимРаботы = 2 ) Тогда
			
			СтрокиКопировать = Объект.Товары.НайтиСтроки(Новый Структура("КлючСтроки", цДокумент.НомерСтроки));
			Для каждого цСтрКопировать Из СтрокиКопировать Цикл
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, цСтрКопировать,, "НомерСтроки");
				НоваяСтрока.НомерСтроки = цСтрКопировать.СтрокаНомер;
			КонецЦикла;
			
		КонецЕсли;
		
		// дополняем значениями полей документа
		Если Не ЭтоОбновлениеТоваров И цДокумент.Тип <> ТипДополнительный И ФормироватьДокумент Тогда
			ЭСЧФобщий.ПолучитьЗначенияПолей(цДокумент.Документ, Документ, цДокумент.Контрагент, цДокумент.ДоговорКонтрагента, цДокумент.Исходящий, ЭСЧФобщий.СделкаСТоварамиПоПеречнюУказа287(Товары), СтатусПоставщика, СтатусПолучателя)
		КонецЕсли;
		
		Если ЭтоСумовыеРазницы Тогда
			
			СуммаРаспределения              = цДокумент.Сумма - цДокумент.СуммаНДС;
			СуммаРаспределенияОстаток       = СуммаРаспределения;
			//СуммаРаспределенияАкциза        = цДокумент.Акциз;
			//СуммаРаспределенияАкцизаОстаток = СуммаРаспределенияАкциза;
			ИтогСтоимость                   = Товары.Итог("Стоимость");
			//ИтогСуммаАкциза                 = Товары.Итог("СуммаАкциза");
			
			ВалютаУчета = Константы.ВалютаРегламентированногоУчета.Получить();
			
			Для каждого цСтр Из Товары Цикл
				
				Если Не СуммаРаспределенияОстаток Тогда
					цСтр.Стоимость = 0;
					Продолжить;
				КонецЕсли;
				
				Если СуммаРаспределенияОстаток Тогда
					Стоимость = Окр(СуммаРаспределения * цСтр.Стоимость / ИтогСтоимость, ВалютаУчета.ЧислоЗнаковДрЧасти);
					Если Стоимость = 0 Тогда
						цСтр.Стоимость = 0;
						Продолжить;
					КонецЕсли;
					цСтр.Стоимость        = Стоимость;
					цСтр.СуммаНДС         = Окр(цСтр.Стоимость * цСтр.ПроцентНДС / 100, ВалютаУчета.ЧислоЗнаковДрЧасти);
					Если Не цСтр.СуммаНДС Тогда
						цСтр.Стоимость = 0;
						Продолжить;
					КонецЕсли;
					СуммаРаспределенияОстаток    = Окр(СуммаРаспределенияОстаток - цСтр.Стоимость, ВалютаУчета.ЧислоЗнаковДрЧасти);
				Иначе
					цСтр.Стоимость = 0;
					цСтр.СуммаНДС  = 0;
				КонецЕсли;
				
				цСтр.СтоимостьСНДС = цСтр.Стоимость + цСтр.СуммаНДС;
				цСтр.Цена          = цСтр.Стоимость / ?(цСтр.Количество, цСтр.Количество, 1);
				
				//Если СуммаРаспределенияАкцизаОстаток Тогда
				//    СуммаАкциза = Окр(СуммаРаспределенияАкциза * цСтр.СуммаАкциза / ИтогСуммаАкциза, ВалютаУчета.ЧислоЗнаковДрЧасти);
				//    цСтр.СуммаАкциза                = СуммаРаспределенияАкциза * цСтр.СуммаАкциза / ИтогСуммаАкциза;
				//    СуммаРаспределенияАкцизаОстаток = Окр(СуммаРаспределенияАкциза - цСтр.СуммаАкциза, ВалютаУчета.ЧислоЗнаковДрЧасти);
				//Иначе
				//    цСтр.СуммаАкциза = 0;
				//КонецЕсли;
				
			КонецЦикла;
			
			// удалим пустые строки
			КолСтрок = Товары.Количество();
			Пока КолСтрок Цикл
				Стр = Товары[КолСтрок-1];
				Если Не Стр.Стоимость Тогда
					Товары.Удалить(Стр);
				КонецЕсли;
				КолСтрок = КолСтрок - 1
			КонецЦикла;
			
			// если есть остатки в связи с округлениями, то отразим их
			СуммаРаспределенияОстаток       = цДокумент.Сумма - цДокумент.СуммаНДС - Товары.Итог("Стоимость");
			СуммаРаспределенияНДСостаток    = цДокумент.СуммаНДС - Товары.Итог("СуммаНДС");
			//СуммаРаспределенияАкцизаОстаток = цДокумент.Акциз - Товары.Итог("СуммаАкциза");
			
			Если СуммаРаспределенияОстаток Или СуммаРаспределенияНДСостаток Тогда
				Стр = Неопределено;
				Для каждого цСтр Из Товары Цикл
					Если ( цСтр.Стоимость + СуммаРаспределенияОстаток ) И ( цСтр.СуммаНДС + СуммаРаспределенияНДСостаток ) Тогда
						Стр = цСтр;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если Стр = Неопределено Тогда
					Стр = Товары[0];
				КонецЕсли;
				Стр.Стоимость = Стр.Стоимость + СуммаРаспределенияОстаток;
				Стр.СуммаНДС = Стр.СуммаНДС + СуммаРаспределенияНДСостаток;
				Стр.СтоимостьСНДС = Стр.Стоимость + Стр.СуммаНДС;
				Стр.Цена          = Стр.Стоимость / ?(Стр.Количество, Стр.Количество, 1);
			КонецЕсли;
			
			//Если СуммаРаспределенияАкцизаОстаток Тогда
			//    Стр = Товары[0];
			//    Стр.СуммаАкциза = Стр.СуммаАкциза + СуммаРаспределенияАкцизаОстаток;
			//КонецЕсли;
			
		КонецЕсли;
		
		// добавим документ поставки
		Если Не ЭтоОбновлениеТоваров И ФормироватьДокумент Тогда
			ЭСЧФобщий.ДобавитьДокументПоставки(цДокумент.Документ, ДокументыПодтверждающиеПоставку, цДокумент.КодБланка, цДокумент.НомерНакладной, цДокумент.СерияБланка, цДокумент.Исходящий И Не ЭтоПеревыставление, цДокумент.ТипБСО, ?(ЭтоПеревыставление, Неопределено, цДокумент.Дата));
			Если цДокумент.ТипБСО = ПредопределенноеЗначение("Справочник.ТипыБСО.ТТН1") Тогда
				ЭСЧФобщий.ДобавитьГрузоотправителяГрузополучателя(цДокумент.Документ, Грузоотправители, Грузополучатели, цДокумент.Исходящий)
			КонецЕсли;
		КонецЕсли;
		
		// основное действие
		цДокумент.ЕстьОшибки  = Ложь;
		Ошибка = "";
		Ответ  = "";
		
		Если ЭтоОтправка И РежимРаботы = 2 Тогда
			
			МенеджерНомеров = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
			МенеджерНомеров.Организация = Объект.Организация;
			МенеджерНомеров.Номер = цДокумент.НомерЭСЧФ;
			
			Если цДокумент.ОбменВыгрузить Тогда
				МенеджерНомеров.Удалить();
				цДокумент.ОбменВыгрузить = Ложь;
			Иначе
				МенеджерНомеров.Прочитать();
				Если Не МенеджерНомеров.Выбран() Тогда
					МенеджерНомеров.Организация = Объект.Организация;
					МенеджерНомеров.Номер = цДокумент.НомерЭСЧФ;
					МенеджерНомеров.КоличествоОбновлений = 1;
				Иначе
					МенеджерНомеров.КоличествоОбновлений = МенеджерНомеров.КоличествоВыгрузок + 1;
				КонецЕсли;
				МенеджерНомеров.Записать(Истина);
				цДокумент.ОбменВыгрузить = Истина;
			КонецЕсли;
			
		ИначеЕсли ЭтоОтправка Тогда
			
			Если Не РежимРаботы Тогда
				ЭСЧФклиент.СформироватьПодписатьОтправитьДокумент(Документ, цДокумент.ЕстьОшибки, Ошибка,, УНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, цДокумент.Исходящий, цДокумент.Принят, цДокумент.ТекстОтвета)
			Иначе
				ЭСЧФсервер.СформироватьПодписатьОтправитьДокумент(Документ, цДокумент.ЕстьОшибки, Ошибка,, УНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, цДокумент.Исходящий, цДокумент.Принят, цДокумент.ТекстОтвета)
			КонецЕсли;
			
			Если цДокумент.ЕстьОшибки Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " " + Ошибка;
				Сообщение.Сообщить();
			КонецЕсли;
			
			Если Не цДокумент.Принят Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " не принят по причине: " + Ответ;
				Сообщение.Сообщить();
			КонецЕсли;
			
			цДокумент.ДатаВыставления = ТекущаяДатаСеанса();
			ЭСЧФобщий.ОтразитьВыставлениеДокумента(цДокумент.Документ, цДокумент.ДатаВыставления, цДокумент.НомерЭСЧФ,,,,,, цДокумент.Принят, цДокумент.ТекстОтвета);
			
		ИначеЕсли ЭтоВыгрузка И лВыгрузкаВКаталог Тогда
			
			ПолноеИмяФайла = ОсновнойКаталогПользователя + "\" + цДокумент.НомерЭСЧФ + ".xml";
			ЭСЧФобщий.ВыгрузитьДокументВФайлДиалог(Документ, ПолноеИмяФайла,, УНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, цДокумент.Исходящий)
			
		ИначеЕсли ЭтоВыгрузка Тогда
			
			ЭСЧФобщий.ВыгрузитьДокументВФайлДиалог(Документ,, цДокумент.ЕстьОшибки, УНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, цДокумент.Исходящий)
			
		ИначеЕсли ЭтоПроверка И ( Не ЭСЧФобщий.ЭСЧФСоответствуетПротоколу(Документ, УНП, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, цДокумент.Исходящий, цДокумент.Контрагент.ЮрФизЛицо = ЮрЛицо Или Не ЗначениеЗаполнено(цДокумент.Контрагент.ЮрФизЛицо), цДокумент.ЕстьОшибки, Ошибки) Или ЭтоПроверкаИПечать ) Тогда
			
			Если Не ЭтоПроверкаИПечать Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Стр." + цДокумент.НомерСтроки + " ОШИБКИ:";
				Сообщение.УстановитьДанные(цДокумент.Документ);
				Сообщение.Сообщить();
				ТипСтруктура = Тип("Структура");
				Для каждого цОшибка Из Ошибки Цикл
					Если ТипЗнч(цОшибка) = ТипСтруктура Тогда
						Сообщение.Текст = цОшибка.Текст;
					Иначе
						Сообщение.Текст = цОшибка;
					КонецЕсли;
					Сообщение.Сообщить();
				КонецЦикла;
				
			Иначе
				
				//Строка = Новый Структура("Документ, Контрагент, ДоговорКонтрагента, ДатаВыставления, ТекстСтатуса");
				//ЗаполнитьЗначенияСвойств(Строка, цДокумент);
				//ТабличныйДокумент = ПолучитьПечатныйДокументЭСЧФ(Документ, Товары, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, Ошибки, Строка);
				//ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.Высотатаблицы, ТабличныйДокумент.ШиринаТаблицы).ВысотаСтроки = 3;
				//ТабличныйДокумент.ТолькоПросмотр = Истина;
				
				// вывод данных в форму
				ЭСЧФклиент.ПоказатьЭСЧФ(цДокумент.НомерЭСЧФ, Объект.Организация, УНП, Документ, Грузоотправители, Грузополучатели, ДокументыПодтверждающиеПоставку, Товары, цДокумент.Документ
										, Объект.Ссылка, цДокумент.Контрагент, цДокумент.ДоговорКонтрагента, Объект.ВидОперации, Ошибки, ЭтаФорма);
				
			КонецЕсли;
			
		ИначеЕсли ЭтоОбновлениеТоваров Тогда
			
			СтрокиУдалить = Объект.Товары.НайтиСтроки(Новый Структура("КлючСтроки", цДокумент.НомерСтроки));
			Для каждого цСтрУдалить Из СтрокиУдалить Цикл
				Объект.Товары.Удалить(цСтрУдалить)
			КонецЦикла;
			
			Для каждого цСтрДобавить Из Товары Цикл
				НоваяСтрока = Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, цСтрДобавить,, "НомерСтроки");
				НоваяСтрока.СтрокаНомер = цСтрДобавить.НомерСтроки;
				НоваяСтрока.КлючСтроки  = цДокумент.НомерСтроки;
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЭтоПроверка Тогда
			ОформитьСтроку(Ошибки, цДокумент.НомерСтроки);
		КонецЕсли;
		
		Если Не ( ЭтоОтправка И РежимРаботы = 2 Или ЭтоОбновление ) Тогда
			Товары.Очистить();
		КонецЕсли;
		Если Не ЭтоОбновлениеТоваров Тогда
			Документ.Очистить();
			Если ФормироватьДокумент Тогда
				Грузоотправители.Очистить();
				Грузополучатели.Очистить();
				ДокументыПодтверждающиеПоставку.Очистить();
			КонецЕсли;
			Ошибки.Очистить();
		КонецЕсли;
		
		Отказ = ( Отказ Или цДокумент.ЕстьОшибки );
		
	КонецЦикла;
	
	~Выход:
	Если ЭтоОтправка И Не РежимРаботы Тогда
		ПриЗавершенииАвторизации(Отказ, Ошибка)
	ИначеЕсли ЭтоОтправка Тогда
		ЭСЧФсервер.ПриЗавершенииАвторизацииНаСервере()
	КонецЕсли;
	
	~ВыходБезЗавершения:
	//{[-](фрагмент удален)Макей Евгений Владимирович 26.10.2016 12:37:30
	//Если ЭтоВыгрузка И лВыгрузкаВКаталог Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Документы выгружены в каталог: " + Диалог.Каталог;
	//	Сообщение.Сообщить();
	////Иначе
	//ИначеЕсли Не ЭтоПроверкаИПечать Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Обработка окончена" + ?(Отказ = Истина, " с ошибками", "");
	//	Сообщение.Сообщить();
	//КонецЕсли;
	//}Макей Евгений Владимирович 26.10.2016 12:37:30
	Если ЭтоВыгрузка И лВыгрузкаВКаталог Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документы выгружены в каталог: " + Диалог.Каталог;
		Сообщение.Сообщить();
	КонецЕсли;
	
	УправлениеФормой();
	УправлениеКонтекстнымМенюДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКвитанцию(Команда)

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекДанные.Статус) Тогда
		Возврат;
	КонецЕсли;
	
	Квитанция = РегистрыСведений.Квитанции.СоздатьМенеджерЗаписи();
	ЭСЧФобщий.РазложитьНомер(ТекДанные.НомерЭСЧФ, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
	
	Квитанция.Прочитать();
	
	Если Квитанция.Выбран() Тогда
		Форма = Квитанция.ПолучитьФорму();//ПолучитьФорму("РегистрСведений.Квитанции.ФормаЗаписи");
		//ЗначениеВДанныеФормы(Квитанция, Форма.Запись);
		Форма.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Квитанция не найдена";
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДанныеВыставления(Команда)

	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекДанные.ДатаВыставления) Тогда
		Возврат;
	КонецЕсли;
	
	Квитанция = РегистрыСведений.ВыставленныеДокументы.СоздатьМенеджерЗаписи();
	ЭСЧФобщий.РазложитьНомер(ТекДанные.НомерЭСЧФ, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
	
	Квитанция.Прочитать();
	
	Если Квитанция.Выбран() Тогда
		Форма = Квитанция.ПолучитьФорму();//ПолучитьФорму("РегистрСведений.ВыставленныеДокументы.ФормаЗаписи");
		//ЗначениеВДанныеФормы(Квитанция, Форма.Запись);
		Форма.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные о выставлении не найдены";
		Сообщение.Поле = "Статус"; //имя реквизита 
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТовары(Команда)
	
	ВыполнитьДействияНадДокументами(Элементы.ДокументыДляОтражения.ВыделенныеСтроки, "ОбновитьТовары");
	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	Отбор = Новый Структура("КлючСтроки", ТекДанные.НомерСтроки);
	Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	Строки = Объект.Товары.НайтиСтроки(Отбор);
	ТоварыСтоимость     = 0;
	ТоварыСтоимостьСНДС = 0;
	ТоварыСуммаАкциза   = 0;
	ТоварыСуммаНДС      = 0;
	Для каждого СтрокаТовара Из Строки Цикл
		ТоварыСтоимость     = ТоварыСтоимость + СтрокаТовара.Стоимость;
		ТоварыСтоимостьСНДС = ТоварыСтоимостьСНДС + СтрокаТовара.СтоимостьСНДС;
		ТоварыСуммаАкциза   = ТоварыСуммаАкциза + СтрокаТовара.СуммаАкциза;
		ТоварыСуммаНДС      = ТоварыСуммаНДС + СтрокаТовара.СуммаНДС;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТоварыДокументов(Команда)
	
	ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "ОбновитьТовары");
	ТекДанные = Элементы.ДокументыДляОтражения.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	Отбор = Новый Структура("КлючСтроки", ТекДанные.НомерСтроки);
	Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	Строки = Объект.Товары.НайтиСтроки(Отбор);
	ТоварыСтоимость     = 0;
	ТоварыСтоимостьСНДС = 0;
	ТоварыСуммаАкциза   = 0;
	ТоварыСуммаНДС      = 0;
	Для каждого СтрокаТовара Из Строки Цикл
		ТоварыСтоимость     = ТоварыСтоимость + СтрокаТовара.Стоимость;
		ТоварыСтоимостьСНДС = ТоварыСтоимостьСНДС + СтрокаТовара.СтоимостьСНДС;
		ТоварыСуммаАкциза   = ТоварыСуммаАкциза + СтрокаТовара.СуммаАкциза;
		ТоварыСуммаНДС      = ТоварыСуммаНДС + СтрокаТовара.СуммаНДС;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОразитьИнформациюДляОбмена(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Отправка");
		ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Статус");
		УправлениеФормой();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ЭтоНовый = ( Не ЗначениеЗаполнено(Объект.Ссылка) );
    Если ЭтоНовый Тогда
        Объект.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
        Объект.Ответственный = глЗначениеПеременной("глТекущийПользователь");
        Объект.Дата = ТекущаяДата();
    КонецЕсли;
    
    РежимРаботы = ЭСЧФсервер.РежимРаботыПоУмолчаниюЭСЧФ();
    
	//{[-](фрагмент удален)Макей Евгений Владимирович 04.11.2016 9:36:18
	//МассивНеРедактироватьСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.Аннулирован"));
	//МассивНеРедактироватьСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.Выставлен"));
	//МассивНеРедактироватьСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.ВыставленАннулированПоставшиком"));
	//МассивНеРедактироватьСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.ВыставленПодписанПолучателем"));
	//МассивНеРедактироватьСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЭСЧФ.НаСогласовании"));
	//}Макей Евгений Владимирович 04.11.2016 9:36:18
	//{[+](фрагмент добавлен), Макей Евгений Владимирович 04.11.2016 9:36:32
	МассивНеРедактироватьСтатусы.ЗагрузитьЗначения( ЭСЧФобщий.НеРедактироватьСтатусы() );
	//}Макей Евгений Владимирович 04.11.2016 9:36:32
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    СписокВыбора = Новый СписокЗначений;
    СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Произвольный"));
    СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Реализация"));
    СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Перевыставление"));
    СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.СуммовыеРазницы"));
    
    Если Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
        
        ВыбЗнч = СписокВыбора.ВыбратьЭлемент("Выберите вид операции");
        Если ВыбЗнч <> Неопределено Тогда
            Объект.ВидОперации = ВыбЗнч.Значение
        Иначе
            Отказ = Истина
        КонецЕсли;
        
        ЭтоПеревыставление = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.Перевыставление") );
        ЭтоСумовыеРазницы  = ( Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСЧФ.СуммовыеРазницы") );
        
        Если Не Отказ И ( ЭтоСумовыеРазницы Или ЭтоПеревыставление ) Тогда
            Объект.ДокументыПоНМА     = Ложь;
            Объект.ДокументыПоОС      = Ложь;
            Объект.ДокументыПоТоварам = Ложь;
            Объект.ДокументыПоУслугам = ЭтоПеревыставление;
        КонецЕсли;
        
    Иначе
        
        Сумма = Объект.ДокументыДляОтражения.Итог("Сумма");
        СуммаНДС = Объект.ДокументыДляОтражения.Итог("СуммаНДС");
        Акциз = Объект.ДокументыДляОтражения.Итог("Акциз");
        ОбновитьСуммыВТаблицеДокументов()
		
    КонецЕсли;
    
    УправлениеФормой()
    
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
    УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если ПараметрыЗаписи.РежимЗаписи <> ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполненКонтрагент = ЗначениеЗаполнено(Объект.Контрагент);
	ЗаполненДоговор = ЗначениеЗаполнено(Объект.ДоговорКонтрагента);
	
	Для каждого цСтр Из Объект.ДокументыДляОтражения Цикл
		
		Если ЗаполненКонтрагент И цСтр.Контрагент <> Объект.Контрагент Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр. " + цСтр.НомерСтроки + " Контрагент не соответствует отбору";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если ЗаполненДоговор И цСтр.ДоговорКонтрагента <> Объект.ДоговорКонтрагента Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр. " + цСтр.НомерСтроки + " Договор контрагента не соответствует отбору";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если цСтр.Документ.Организация <> Объект.Организация Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр. " + цСтр.НомерСтроки + " Организация документа не соответствует текущей";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если цСтр.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный") И Не ЗначениеЗаполнено(цСтр.ДатаАннулирования) Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр. " + цСтр.НомерСтроки + " Для исправленного ЭСЧФ необходимо указать дату аннулирования исходного документа";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если ( цСтр.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный") Или цСтр.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный") ) И Не ЗначениеЗаполнено(цСтр.КЭСЧФ) Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Стр. " + цСтр.НомерСтроки + " Для исправленного/дополнительного ЭСЧФ необходимо указать ссылку на исходный";
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЦикла;
	
	//лОтказ = Ложь;
	//ВыполнитьДействияНадДокументами(Объект.ДокументыДляОтражения, "Проверка", лОтказ);
	//Отказ = ( Отказ Или лОтказ );

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	УправлениеФормой();
	
	Если Объект.Проведен И РежимРаботы = 2 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОразитьИнформациюДляОбмена", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Выгрузить документы на портал и обновить статусы?", РежимДиалогаВопрос.ДаНет,,, "Обмен данными с ИМНС")
	КонецЕсли;
	
	Прочитать();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Для каждого цСтр Из Объект.ДокументыДляОтражения Цикл
		Квитанция = РегистрыСведений.Квитанции.СоздатьМенеджерЗаписи();
		МенеджерЗагрузитьСтатус = РегистрыСведений.СтатусыДляЗагрузки.СоздатьМенеджерЗаписи();
		МенеджерЗагрузитьСтатус.Организация = Объект.Организация;
		МенеджерНомераВыгрузить = РегистрыСведений.НомераДляВыгрузки.СоздатьМенеджерЗаписи();
		МенеджерНомераВыгрузить.Организация = Объект.Организация;
		ЭСЧФобщий.РазложитьНомер(цСтр.НомерЭСЧФ, Квитанция.Год, Квитанция.Объект, Квитанция.Номер);
		Квитанция.Прочитать();
		Если Квитанция.Выбран() Тогда
			цСтр.ДатаСтатуса = Квитанция.ДатаСостояния;
			цСтр.Статус = Квитанция.Статус;
			цСтр.ТекстСтатуса = Квитанция.Комментарий;
		Иначе
			цСтр.ДатаСтатуса = Неопределено;
			цСтр.Статус = Неопределено;
			цСтр.ТекстСтатуса = Неопределено;
		КонецЕсли;
		цСтр.ДатаВыставления = ЭСЧФобщий.ПолучитьДатуВыставленияПоНомеру(цСтр.НомерЭСЧФ,, цСтр.Принят);
		МенеджерЗагрузитьСтатус.Номер = цСтр.НомерЭСЧФ;
		МенеджерЗагрузитьСтатус.Прочитать();
		цСтр.ОбменСтатус = МенеджерЗагрузитьСтатус.Выбран();
		МенеджерНомераВыгрузить.Номер = цСтр.НомерЭСЧФ;
		МенеджерНомераВыгрузить.Прочитать();
		цСтр.ОбменВыгрузить = МенеджерНомераВыгрузить.Выбран();
	КонецЦикла;

КонецПроцедуры
