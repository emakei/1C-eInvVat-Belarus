
////////////////////////////////////////////////////////////////////////////////
//
// Процедура ПакетИсходящихЭСЧФ_ЗаполнитьСумовыеРазницы
//
// Описание:
//  заполнить таблицу документа данными суммовых разниц
//
// Параметры (название, тип, дифференцированное значение)
//  Объект - ДокументОбъект.ПакетИсходящихЭСЧФ
//
Процедура ПакетИсходящихЭСЧФ_ЗаполнитьСумовыеРазницы( Объект ) Экспорт

	ТекстЗапроса = "ВЫБРАТЬ
	|	ХозрасчетныйОбороты.КорСубконто1 КАК Контрагент,
	|	ХозрасчетныйОбороты.КорСубконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.КорСубконто3 КАК Документ,
	|	ХозрасчетныйОбороты.КорСубконто3.НомерНакладной КАК НомерНакладной,
	|	ХозрасчетныйОбороты.КорСубконто3.СерияБланка.Код КАК СерияБланка,
	|	ХозрасчетныйОбороты.КорСубконто3.ТипБСО КАК ТипБСО,
	|	-ХозрасчетныйОбороты.СуммаОборот КАК Сумма,
	|	-ХозрасчетныйОбороты.СуммаОборот * 20 / 120 КАК СуммаНДС,
	|	ИсходныйЭСЧФ.Объект,
	|	ИсходныйЭСЧФ.Год,
	|	ИсходныйЭСЧФ.Номер,
	|	ХозрасчетныйОбороты.Период КАК Дата,
	|	ХозрасчетныйОбороты.КорСубконто3.Дата КАК ДатаСовершенияОперации
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Запись,
	|			Счет В (&СчетДоходов, &СчетРасходов),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 = &СтатьяСуммовыхРазниц"
	+ ?(ЗначениеЗаполнено(Объект.Контрагент), " И КорСубконто1 = &Контрагент", "")
	+ ?(ЗначениеЗаполнено(Объект.ДоговорКонтрагента), " И КорСубконто2 = &ДоговорКонтрагента", "") +
	"
	|				И КорСубконто3 <> НЕОПРЕДЕЛЕНО,
	|			КорСчет = &СчетРасчетовСКонтрагентами,
	|			&ВидыКорСубконто) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераЭСЧФ КАК ИсходныйЭСЧФ
	|		ПО ХозрасчетныйОбороты.КорСубконто3 = ИсходныйЭСЧФ.ДокументОснование
	|			И (ИсходныйЭСЧФ.Тип В (&ТипыИсходныхЭСЧФ))
	|			И (ИсходныйЭСЧФ.Активность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераЭСЧФ КАК ФильтрВыставленных
	|		ПО ХозрасчетныйОбороты.КорСубконто3 = ФильтрВыставленных.ДокументОснование
	|			И (ФильтрВыставленных.Тип = &ТипДополнительныйЭСЧФ)
	|			И (ФильтрВыставленных.Активность)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ФильтрВыставленных.Активность, ЛОЖЬ)"
	+ ?( ЗначениеЗаполнено(Объект.ГруппаПользователей), Символы.ПС +  "	И ХозрасчетныйОбороты.КорСубконто3.Ответственный В (&Пользователи)", "");
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СчетДоходов",          Объект.СчетДоходов);
	Запрос.УстановитьПараметр("СчетРасходов",         Объект.СчетРасходов);
	Запрос.УстановитьПараметр("НачалоПериода",        Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",         КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("ВидыСубконто",         ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы"));
	Запрос.УстановитьПараметр("Организация",          Объект.Организация);
	Запрос.УстановитьПараметр("СтатьяСуммовыхРазниц", Объект.СтатьяСуммовыхРазниц);
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетРасчетовСКонтрагентами", Объект.СчетРасчетовСКонтрагентами);
	ВидыКорСубконто = Новый Массив;
	ВидыКорСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты"));
	ВидыКорСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры"));
	ВидыКорСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами"));
	Запрос.УстановитьПараметр("ВидыКорСубконто", ВидыКорСубконто);
	Если ЗначениеЗаполнено(Объект.ГруппаПользователей) И ТипЗнч(Объект.ГруппаПользователей) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей.ПользователиГруппы.ВыгрузитьКолонку("Пользователь"))
	Иначе
		Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей)
	КонецЕсли;
	
	ТипыИсходныхЭСЧФ = Новый Массив;
	ТипыИсходныхЭСЧФ.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный"));
	ТипыИсходныхЭСЧФ.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный"));
	Запрос.УстановитьПараметр("ТипыИсходныхЭСЧФ", ТипыИсходныхЭСЧФ);
	
	Запрос.УстановитьПараметр("ТипДополнительныйЭСЧФ", ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный"));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ВыборкаДокументов = Результат.Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл
		
		НоваяСтрока = Объект.ДокументыДляОтражения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокументов,, "НомерНакладной");
		НоваяСтрока.Исходящий = Истина;
		Если ЗначениеЗаполнено(ВыборкаДокументов.Номер) Тогда
			НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный");
			НоваяСтрока.КЭСЧФ = НоваяСтрока.КЭСЧФ = ВыборкаДокументов.Объект + "-" + Формат(ВыборкаДокументов.Год, "ЧЦ=4; ЧГ=0") + "-" + Формат(ВыборкаДокументов.Номер, "ЧЦ=10; ЧВН=; ЧГ=0");
		Иначе
			НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.ДополнительныйБезСсылки")
		КонецЕсли;
		НоваяСтрока.ОтобразитьПолучателю = Истина;
		Если ЗначениеЗаполнено(ВыборкаДокументов.ТипБСО) Тогда
			НоваяСтрока.КодБланка = ВыборкаДокументов.ТипБСО.ТипБСО;
			НоваяСтрока.ТипБСО    = НоваяСтрока.КодБланка.ТипБСО;
			БланкНакладная = ( НоваяСтрока.КодБланка <> ПредопределенноеЗначение("Справочник.ТипыБСО.ТТН1") И НоваяСтрока.КодБланка <> ПредопределенноеЗначение("Справочник.ТипыБСО.ТН2") );
			Если ЗначениеЗаполнено(ВыборкаДокументов.НомерНакладной) И БланкНакладная Тогда
				Попытка
					//{[-](фрагмент удален)Макей Евгений Владимирович 18.11.2016 16:03:40
					//НоваяСтрока.НомерНакладной = Формат(Число(СтрЗаменить(СтрЗаменить(ВыборкаДокументов.НомерНакладной, Символ(32), ""), Символ(160), "")), "ЧЦ=7; ЧДЦ=; ЧВН=; ЧГ=0");;
					//}Макей Евгений Владимирович 18.11.2016 16:03:40
					//{[+](фрагмент добавлен), Макей Евгений Владимирович 18.11.2016 16:03:46
					НоваяСтрока.НомерНакладной = ЭСЧФобщий.НомерНакладной( ВыборкаДокументов.НомерНакладной );
					//}Макей Евгений Владимирович 18.11.2016 16:03:46
				Исключение
					НоваяСтрока.НомерНакладной = "";
				КонецПопытки;
			ИначеЕсли ЗначениеЗаполнено(ВыборкаДокументов.НомерНакладной) Тогда
				НоваяСтрока.НомерНакладной = ВыборкаДокументов.НомерНакладной;
			ИначеЕсли Не БланкНакладная Тогда
				НоваяСтрока.НомерНакладной = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДокументов.Документ)
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//
// Процедура ПакетИсходящихЭСЧФ_ЗаполнитьПеревыставления
//
// Описание:
//  заполнить таблицу документа данными перевыставлений
//
// Параметры (название, тип, дифференцированное значение)
//  Объект - ДокументОбъект.ПакетИсходящихЭСЧФ
//
Процедура ПакетИсходящихЭСЧФ_ЗаполнитьПеревыставления( Объект ) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",                Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",              Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",               КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("ВидОперацииПеревыставление", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаСПеревыставлением"));
	Запрос.УстановитьПараметр("БезНДС",                     ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"));
	Если ЗначениеЗаполнено(Объект.ГруппаПользователей) И ТипЗнч(Объект.ГруппаПользователей) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей.ПользователиГруппы.ВыгрузитьКолонку("Пользователь"))
	Иначе
		Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей)
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	СУММА(ПоступлениеТоваровУслуг.Сумма) КАК Сумма,
	|	ПоступлениеТоваровУслуг.Субконто1 КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Субконто2 КАК ДоговорКонтрагента,
	|	СУММА(ПоступлениеТоваровУслуг.Сумма * 20 / 120) КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента КАК НомерНакладной,
	|	"""" КАК СерияБланка,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента КАК Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата КАК ДатаСовершенияОперации,
	|	ЭлектронныйСчетФактураПолученный.Ссылка КАК СчетФактураПродавца
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераЭСЧФ КАК ФильтрВведенных
	|		ПО ПоступлениеТоваровУслуг.Ссылка = ФильтрВведенных.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронныйСчетФактураПолученный КАК ЭлектронныйСчетФактураПолученный
	|		ПО ПоступлениеТоваровУслуг.Ссылка.Организация = ЭлектронныйСчетФактураПолученный.Организация
	|			И ЭлектронныйСчетФактураПолученный.Проведен
	|			И (ЭлектронныйСчетФактураПолученный.ПоставщикУНП ПОДОБНО ПоступлениеТоваровУслуг.Ссылка.Контрагент.ИНН + ""%"")
	|			И ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента = ЭлектронныйСчетФактураПолученный.НакладнаяДата
	|			И (ЭлектронныйСчетФактураПолученный.НакладнаяНомер ПОДОБНО ""%"" + ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента + ""%"")
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеТоваровУслуг.Ссылка.Организация = &Организация
	|	И ПоступлениеТоваровУслуг.Ссылка.Проведен
	|	И ПоступлениеТоваровУслуг.Ссылка.ВидОперации = &ВидОперацииПеревыставление
	|	И ПоступлениеТоваровУслуг.СтавкаНДС = &БезНДС
	|	 И ПоступлениеТоваровУслуг.Субконто1 ССЫЛКА Справочник.Контрагенты"
	+ ?(ЗначениеЗаполнено(Объект.Контрагент), " И ПоступлениеТоваровУслуг.Ссылка.Контрагент = &Контрагент", "")
	+ ?(ЗначениеЗаполнено(Объект.ДоговорКонтрагента), " И ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента = &ДоговорКонтрагента", "")
	+ ?( ЗначениеЗаполнено(Объект.ГруппаПользователей), Символы.ПС +  "	И ПоступлениеТоваровУслуг.Ссылка.Ответственный В (&Пользователи)", "") +
	"
	|	И НЕ ЕСТЬNULL(ФильтрВведенных.Активность, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Субконто1,
	|	ПоступлениеТоваровУслуг.Субконто2,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ЭлектронныйСчетФактураПолученный.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ВыборкаДокументов = РезультатЗапроса.Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл
		
		НоваяСтрока = Объект.ДокументыДляОтражения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокументов,, "НомерНакладной");
		НоваяСтрока.Исходящий = Истина;
		НоваяСтрока.ОтобразитьПолучателю = Истина;
		НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный");
		// в перевыставлении контрагенту уходит другой номер документа (из другого док.), так что не заполняем
		//НоваяСтрока.НомерНакладной = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДокументов.Документ);
		НоваяСтрока.ТипБСО = Справочники.ТипыБСО.Другое;
		
	КонецЦикла;

КонецПроцедуры //ПакетИсходящихЭСЧФ_ЗаполнитьПеревыставления

////////////////////////////////////////////////////////////////////////////////
//
// Процедура ПакетИсходящихЭСЧФ_ЗаполитьРеализации
//
// Описание:
//
//
// Параметры (название, тип, дифференцированное значение)
//  Объект - ДокументОбъект.ПакетИсходящихЭСЧФ
//
Процедура ПакетИсходящихЭСЧФ_ЗаполитьРеализации( Объект ) Экспорт

    ДокументыПоТоварам = Объект.ДокументыПоТоварам;
    ДокументыПоУслугам = Объект.ДокументыПоУслугам;
    ДокументыПоНМА     = Объект.ДокументыПоНМА;
    ДокументыПоОС      = Объект.ДокументыПоОС;
    Запрос = Новый Запрос;
    СчетаНДС = Новый Массив;
    СчетаНДС.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Продажи_НДС"));//ПланыСчетов.Хозрасчетный.Продажи_НДС);
    СчетаНДС.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Операционные_НДС"));//ПланыСчетов.Хозрасчетный.Операционные_НДС);
    Счета90 = Новый Массив;
    Счета90.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Продажи"));//ПланыСчетов.Хозрасчетный.Продажи);
    Счета90.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ОперационныеДоходыИРасходы"));//ПланыСчетов.Хозрасчетный.ОперационныеДоходыИРасходы);
    Счета90.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрибылиИУбытки_"));//ПланыСчетов.Хозрасчетный.ПрибылиИУбытки_);
    СчетаВыручки = Новый Массив;
    СчетаВыручки.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Продажи"));//ПланыСчетов.Хозрасчетный.Продажи);
    СчетаВыручки.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ОперационныеДоходыИРасходы"));//ПланыСчетов.Хозрасчетный.ОперационныеДоходыИРасходы);
    СчетаПоступленияНаличныхСредств = Новый Массив;
    СчетаПоступленияНаличныхСредств.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Касса"));//ПланыСчетов.Хозрасчетный.Касса);
    СчетаПоступленияНаличныхСредств.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ИнкассированныеДС"));//ПланыСчетов.Хозрасчетный.ИнкассированныеДС);
    ВидыСукбонтоДт = Новый Массив;
    ВидыСукбонтоДт.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты"));//ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
    ВидыСукбонтоДт.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры"));//ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
    Типы = Новый Массив;
    Типы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный"));//Перечисления.ТипыЭСЧФ.Исходный);
    Типы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный"));//Перечисления.ТипыЭСЧФ.Исправленный);
    МенеджерВТ = Новый МенеджерВременныхТаблиц;
    Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
    Запрос.УстановитьПараметр("НачалоПериода",   Объект.НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода",    Новый Граница(КонецДня(Объект.КонецПериода), ВидГраницы.Включая));
    Запрос.УстановитьПараметр("СчетаНДС",        СчетаНДС);
    Запрос.УстановитьПараметр("Счета90",         Счета90);
    Запрос.УстановитьПараметр("СчетаПоступленияНаличныхСредств", СчетаПоступленияНаличныхСредств);
    Запрос.УстановитьПараметр("СчетаВыручки",    СчетаВыручки);
    Запрос.УстановитьПараметр("Организация",     Объект.Организация);
    Запрос.УстановитьПараметр("ВидыСукбонтоДт",  ВидыСукбонтоДт);
    Запрос.УстановитьПараметр("Типы",            Типы);
    Запрос.УстановитьПараметр("Субъект",         СокрЛП(Объект.Организация.ИНН));
    Запрос.УстановитьПараметр("ПустаяДата",      Дата(1, 1, 1));
    Запрос.УстановитьПараметр("НеОбрабатывать",  ЭСЧФобщий.ТипыДокументовРеализацииНеОбрабатывать());//ЭСЧФсерверПовтИсп.ТипыДокументовРеализацииНеОбрабатывать());
    Если ЗначениеЗаполнено(Объект.ГруппаПользователей) И ТипЗнч(Объект.ГруппаПользователей) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
        Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей.ПользователиГруппы.ВыгрузитьКолонку("Пользователь"))
    Иначе
        Запрос.УстановитьПараметр("Пользователи", Объект.ГруппаПользователей)
    КонецЕсли;
    Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
        Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
    КонецЕсли;
    Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
        Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
    КонецЕсли;
    // Выбираем документы реализации
    Запрос.Текст = "ВЫБРАТЬ
    |    ОборотыРеализация.Регистратор.НомерНакладной КАК НомерНакладной,
    |    ОборотыРеализация.Регистратор.СерияБланка.Код КАК СерияБланка,
    |    ОборотыРеализация.Период КАК Дата,
    |    ОборотыРеализация.Регистратор КАК Документ,
    |    ОборотыРеализация.Период КАК ДатаСовершенияОперации,
    |    ОборотыРеализация.СубконтоДт1 КАК Контрагент,
    |    ОборотыРеализация.СубконтоДт2 КАК ДоговорКонтрагента,
    |    ОборотыРеализация.СуммаОборот КАК Сумма,
    |    ОборотыНДС.СуммаОборот КАК СуммаНДС,
    |    ОборотыРеализация.Регистратор.ТипБСО КАК ТипБСО,
    |    0 КАК Акциз
    |ПОМЕСТИТЬ Документы
    |ИЗ
    |    РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, НЕ СчетДт В ИЕРАРХИИ (&СчетаВыручки, &СчетаПоступленияНаличныхСредств), &ВидыСукбонтоДт, СчетКт В ИЕРАРХИИ (&СчетаВыручки), , Организация = &Организация"
    + ?(ЗначениеЗаполнено(Объект.Контрагент), " И СубконтоДт1 = &Контрагент", "")
    + ?(ЗначениеЗаполнено(Объект.ДоговорКонтрагента), " И СубконтоДт2 = &ДоговорКонтрагента", "") +
    ") КАК ОборотыРеализация
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, СчетДт В ИЕРАРХИИ (&СчетаНДС), , НЕ СчетКт В ИЕРАРХИИ (&Счета90), , Организация = &Организация) КАК ОборотыНДС
    |        ПО (ОборотыНДС.Регистратор = ОборотыРеализация.Регистратор)
    |ГДЕ
    |    НЕ ТИПЗНАЧЕНИЯ(ОборотыРеализация.Регистратор) В (&НеОбрабатывать)"
    + ?( ЗначениеЗаполнено(Объект.ГруппаПользователей), Символы.ПС +  "    И ОборотыРеализация.Регистратор.Ответственный В (&Пользователи)", "");
    Запрос.Выполнить();
    // Выбираем предыдущие электронные счета-фактуры по НДС
    Запрос.Текст = "ВЫБРАТЬ
    |    НомераЭСЧФ.Год,
    |    НомераЭСЧФ.Номер,
    |    НомераЭСЧФ.Исходящий,
    |    НомераЭСЧФ.ДатаСовершенияОперации,
    |    НомераЭСЧФ.ДатаАннулирования,
    |    НомераЭСЧФ.НомерНакладной,
    |    НомераЭСЧФ.СерияБланка,
    |    НомераЭСЧФ.ДокументОснование,
    |    НомераЭСЧФ.Дата,
    |    НомераЭСЧФ.Сумма,
    |    НомераЭСЧФ.СуммаНДС,
    |    НомераЭСЧФ.Акциз,
    |    НомераЭСЧФ.КЭСЧФ,
    |    НомераЭСЧФ.Тип,
    |    Документы.Документ,
    |    НомераЭСЧФ.Контрагент,
    |    НомераЭСЧФ.ДоговорКонтрагента,
    |    НомераЭСЧФ.Объект,
    |    НомераЭСЧФ.ТипБСО,
    |    НомераЭСЧФ.КодБланка
    |ПОМЕСТИТЬ ВсеСтрокиПредыдущихДокументов
    |ИЗ
    |    Документы КАК Документы
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НомераЭСЧФ КАК НомераЭСЧФ
    |        ПО Документы.Документ = НомераЭСЧФ.ДокументОснование
    |ГДЕ
    |    НомераЭСЧФ.Объект = &Субъект
    |    И НомераЭСЧФ.Активность
    |    И НомераЭСЧФ.Тип В(&Типы)
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |    ВсеСтрокиПредыдущихДокументов.Год,
    |    ВсеСтрокиПредыдущихДокументов.Номер,
    |    ВсеСтрокиПредыдущихДокументов.Исходящий,
    |    ВсеСтрокиПредыдущихДокументов.ДатаСовершенияОперации,
    |    ВсеСтрокиПредыдущихДокументов.ДатаАннулирования,
    |    ВсеСтрокиПредыдущихДокументов.НомерНакладной КАК НомерНакладной,
    |    ВсеСтрокиПредыдущихДокументов.СерияБланка КАК СерияБланка,
    |    ВсеСтрокиПредыдущихДокументов.ДокументОснование,
    |    ВсеСтрокиПредыдущихДокументов.Дата КАК Дата,
    |    ВсеСтрокиПредыдущихДокументов.Сумма,
    |    ВсеСтрокиПредыдущихДокументов.СуммаНДС,
    |    ВсеСтрокиПредыдущихДокументов.Акциз,
    |    ВсеСтрокиПредыдущихДокументов.КЭСЧФ,
    |    ВсеСтрокиПредыдущихДокументов.Тип,
    |    ВсеСтрокиПредыдущихДокументов.Документ,
    |    ВсеСтрокиПредыдущихДокументов.Контрагент,
    |    ВсеСтрокиПредыдущихДокументов.ДоговорКонтрагента,
    |    ВсеСтрокиПредыдущихДокументов.Объект,
    |    ВсеСтрокиПредыдущихДокументов.ТипБСО,
    |    ВсеСтрокиПредыдущихДокументов.КодБланка
    |ПОМЕСТИТЬ ПредыдущиеЭСЧФ
    |ИЗ
    |    ВсеСтрокиПредыдущихДокументов КАК ВсеСтрокиПредыдущихДокументов
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |УНИЧТОЖИТЬ ВсеСтрокиПредыдущихДокументов";
    Запрос.Выполнить();
    // Заполняем данные
    Запрос.Текст = "ВЫБРАТЬ
    |    ЕСТЬNULL(Документы.НомерНакладной, """") КАК НомерНакладной,
    |    ЕСТЬNULL(Документы.СерияБланка, """") КАК СерияБланка,
    |    Документы.Дата КАК Дата,
    |    Документы.Документ КАК Документ,
    |    Документы.ДатаСовершенияОперации КАК ДатаСовершенияОперации,
    |    Документы.Контрагент КАК Контрагент,
    |    Документы.ДоговорКонтрагента КАК ДоговорКонтрагента,
    |    Документы.Сумма КАК Сумма,
    |    Документы.СуммаНДС КАК СуммаНДС,
    |    Документы.ТипБСО КАК ТипБСО,
    |    Документы.Акциз КАК Акциз
    |ИЗ
    |    Документы КАК Документы";
    РезультатДокументы = Запрос.Выполнить();
    ВыборкаДокументов = РезультатДокументы.Выбрать();
    Запрос.Текст = "ВЫБРАТЬ
    |    ПредыдущиеЭСЧФ.Год КАК Год,
    |    ПредыдущиеЭСЧФ.Номер КАК Номер,
    |    ПредыдущиеЭСЧФ.Объект КАК Объект,
    |    ПредыдущиеЭСЧФ.Исходящий,
    |    ПредыдущиеЭСЧФ.ДатаСовершенияОперации,
    |    ПредыдущиеЭСЧФ.ДатаАннулирования,
    |    ПредыдущиеЭСЧФ.НомерНакладной КАК НомерНакладной,
    |    ПредыдущиеЭСЧФ.СерияБланка КАК СерияБланка,
    |    ПредыдущиеЭСЧФ.ДокументОснование,
    |    ПредыдущиеЭСЧФ.Дата КАК Дата,
    |    ПредыдущиеЭСЧФ.Сумма,
    |    ПредыдущиеЭСЧФ.СуммаНДС,
    |    ПредыдущиеЭСЧФ.Акциз,
    |    ПредыдущиеЭСЧФ.КЭСЧФ,
    |    ПредыдущиеЭСЧФ.Тип,
    |    ПредыдущиеЭСЧФ.Документ КАК Документ,
    |    ПредыдущиеЭСЧФ.Контрагент,
    |    ПредыдущиеЭСЧФ.ДоговорКонтрагента,
    |    ПредыдущиеЭСЧФ.ТипБСО,
    |    ПредыдущиеЭСЧФ.КодБланка
    |ИЗ
    |    ПредыдущиеЭСЧФ КАК ПредыдущиеЭСЧФ
    |
    |УПОРЯДОЧИТЬ ПО
    |    Документ";
    РезультатПредыдущие = Запрос.Выполнить();
    ВыборкаПредыдущих = РезультатПредыдущие.Выбрать();
    ВыборкаИсправленных = РезультатПредыдущие.Выбрать();
    ОтборИсправленного = Новый Структура("Документ, Тип, КЭСЧФ",, ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный"));
    ОтборИсходного = Новый Структура("Документ, Тип",, ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный"));
    ПредыдущийДокумент = Новый Структура("Год, Номер, Объект, Исходящий, ДатаСовершенияОперации, ДатаАннулирования, НомерНакладной, СерияБланка, ДокументОснование
                                         |, Дата, Сумма, СуммаНДС, Акциз, КЭСЧФ, Тип, Документ, Контрагент, ДоговорКонтрагента, ТипБСО, КодБланка");
    Пока ВыборкаДокументов.Следующий() Цикл
        
        // отбор по таблицам документа
        МД = ВыборкаДокументов.Документ.Метаданные();
        ЕстьТовары = ( МД.ТабличныеЧасти.Найти("Товары") <> Неопределено И ВыборкаДокументов.Документ.Товары.Количество() );
        ЕстьУслуги = ( МД.ТабличныеЧасти.Найти("Услуги") <> Неопределено И ВыборкаДокументов.Документ.Услуги.Количество() );
        ЕстьОС     = ( МД.ТабличныеЧасти.Найти("ОС") <> Неопределено И ВыборкаДокументов.Документ.ОС.Количество() );
        ЕстьНМА    = ( МД.Реквизиты.Найти("НематериальныйАктив") <> Неопределено );
        
        Если ДокументыПоТоварам И ЕстьТовары Тогда
            // отбор по товарам
        ИначеЕсли ДокументыПоУслугам И ЕстьУслуги Тогда
            // отбор по услугам
        ИначеЕсли ДокументыПоОС И ЕстьОС Тогда
            // отбор по ОС
        ИначеЕсли ДокументыПоНМА И ЕстьНМА Тогда
            // отбор по НМА
        Иначе
            Продолжить;
        КонецЕсли;
        
        //ВыборкаКвитанций.Сбросить();
        ВыборкаПредыдущих.Сбросить();
        ВыборкаИсправленных.Сбросить();
        
        БланкНакладная = ( ВыборкаДокументов.ТипБСО.ТипБСО.ТипБСО = ПредопределенноеЗначение("Справочник.ТипыБСО.ТТН1") Или ВыборкаДокументов.ТипБСО.ТипБСО.ТипБСО = ПредопределенноеЗначение("Справочник.ТипыБСО.ТН2") );
        
        Если ЗначениеЗаполнено(ВыборкаДокументов.ТипБСО) Тогда
            Если ЗначениеЗаполнено(ВыборкаДокументов.НомерНакладной) И БланкНакладная Тогда
                Попытка
				//{[-](фрагмент удален)Макей Евгений Владимирович 18.11.2016 16:03:40
				//НомерНакладной = Формат(Число(СтрЗаменить(СтрЗаменить(ВыборкаДокументов.НомерНакладной, Символ(32), ""), Символ(160), "")), "ЧЦ=7; ЧДЦ=; ЧВН=; ЧГ=0");// ВыборкаДокументов.НомерНакладной;
				//}Макей Евгений Владимирович 18.11.2016 16:03:40
				//{[+](фрагмент добавлен), Макей Евгений Владимирович 18.11.2016 16:03:46
				НомерНакладной = ЭСЧФобщий.НомерНакладной( ВыборкаДокументов.НомерНакладной );
				//}Макей Евгений Владимирович 18.11.2016 16:03:46
				Исключение
                НомерНакладной = "";
                КонецПопытки;
            ИначеЕсли ЗначениеЗаполнено(ВыборкаДокументов.НомерНакладной) Тогда
                НомерНакладной = ВыборкаДокументов.НомерНакладной
            ИначеЕсли Не БланкНакладная Тогда
                НомерНакладной = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДокументов.Документ)
            Иначе
                НомерНакладной = "";
            КонецЕсли;
        Иначе
            НомерНакладной = "";
        КонецЕсли;
        
        ОтборИсходного.Вставить("Документ", ВыборкаДокументов.Документ);
        ОтборИсправленного.Вставить("Документ", ВыборкаДокументов.Документ);
        //ЕстьЭСЧФ = ( ВыборкаПредыдущих.НайтиСледующий(ВыборкаДокументов.Документ, "Документ") );
        ЕстьЭСЧФ = ( ВыборкаПредыдущих.НайтиСледующий(ОтборИсходного) );
		ЕстьИсправленный = Ложь;
		Если ЕстьЭСЧФ Тогда
			КЭСЧФ = ЭСЧФобщий.СформироватьНомерЭСЧФ(ВыборкаПредыдущих.Объект, ВыборкаПредыдущих.Год, ВыборкаПредыдущих.Номер);
			ОтборИсправленного.Вставить("КЭСЧФ", КЭСЧФ);
			Пока ВыборкаИсправленных.НайтиСледующий(ОтборИсправленного) Цикл
				ЕстьИсправленный = Истина;
				КЭСЧФ = ОтборИсправленного.КЭСЧФ;
				ОтборИсправленного.Вставить("КЭСЧФ", ЭСЧФобщий.СформироватьНомерЭСЧФ(ВыборкаИсправленных.Объект, ВыборкаИсправленных.Год, ВыборкаИсправленных.Номер));
				ВыборкаИсправленных.Сбросить();
			КонецЦикла;
		КонецЕсли;
        Если ЕстьИсправленный Тогда
            ОтборИсправленного.Вставить("КЭСЧФ", КЭСЧФ);
            ВыборкаИсправленных.Сбросить();
            ВыборкаИсправленных.НайтиСледующий(ОтборИсправленного);
            ЗаполнитьЗначенияСвойств(ПредыдущийДокумент, ВыборкаИсправленных);
        Иначе
            ЗаполнитьЗначенияСвойств(ПредыдущийДокумент, ВыборкаПредыдущих);
        КонецЕсли;
        
        //ИзменилисьРеквизиты = ЕстьЭСЧФ И Не ( НомерНакладной = ВыборкаПредыдущих.НомерНакладной
        //                                      И ВыборкаДокументов.СерияБланка = ВыборкаПредыдущих.СерияБланка
        //                                      И ВыборкаДокументов.ТипБСО.ТипБСО = ВыборкаПредыдущих.КодБланка
        //                                      И ВыборкаДокументов.ТипБСО.ТипБСО.ТипБСО = ВыборкаПредыдущих.ТипБСО
        //                                      И НачалоДня(ВыборкаДокументов.Дата) = ВыборкаПредыдущих.Дата
        //                                      И НачалоДня(ВыборкаДокументов.ДатаСовершенияОперации) = ВыборкаПредыдущих.ДатаСовершенияОперации
        //                                      И ВыборкаДокументов.Контрагент = ВыборкаПредыдущих.Контрагент
        //                                      И ВыборкаДокументов.ДоговорКонтрагента = ВыборкаПредыдущих.ДоговорКонтрагента );
        ИзменилисьРеквизиты = ЕстьЭСЧФ И Не ( НомерНакладной = ПредыдущийДокумент.НомерНакладной
                                              И ВыборкаДокументов.СерияБланка = ПредыдущийДокумент.СерияБланка
                                              И ВыборкаДокументов.ТипБСО.ТипБСО = ПредыдущийДокумент.КодБланка
                                              И ВыборкаДокументов.ТипБСО.ТипБСО.ТипБСО = ПредыдущийДокумент.ТипБСО
                                              И НачалоДня(ВыборкаДокументов.Дата) = ПредыдущийДокумент.Дата
                                              И НачалоДня(ВыборкаДокументов.ДатаСовершенияОперации) = ПредыдущийДокумент.ДатаСовершенияОперации
                                              И ВыборкаДокументов.Контрагент = ПредыдущийДокумент.Контрагент
                                              И ВыборкаДокументов.ДоговорКонтрагента = ПредыдущийДокумент.ДоговорКонтрагента );
        ИзменилисьСуммы = ЕстьЭСЧФ И Не ( ВыборкаДокументов.Сумма = ПредыдущийДокумент.Сумма
                                          И ВыборкаДокументов.СуммаНДС = ПредыдущийДокумент.СуммаНДС
                                          И ВыборкаДокументов.Акциз = ПредыдущийДокумент.Акциз );
        //ЕстьКвитанция = ( ВыборкаКвитанций.НайтиСледующий(ВыборкаДокументов.Документ, "Документ") );
        
        Если ЕстьЭСЧФ И Не ИзменилисьРеквизиты И Не ИзменилисьСуммы Тогда
            
            // если ничего не изменилось, то пропускаем документ
            Продолжить;
            
        ИначеЕсли Не ЕстьЭСЧФ Тогда
            
            цТип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исходный");
            
            //ИначеЕсли ЗначениеЗаполнено(ВыборкаПредыдущих.ДатаАннулирования) Тогда
            //    
            //    // Документ аннулирован
            //    Продолжить;
            
        ИначеЕсли ИзменилисьРеквизиты Тогда
            
            // Проверяем мы ли выставлями исходный документ
            //ОтборИсходного.Вставить("Документ", ВыборкаДокументов.Документ);
            //ВыборкаПредыдущих.Сбросить();
            Если ЕстьЭСЧФ Тогда//ВыборкаПредыдущих.НайтиСледующий(ОтборИсходного) Тогда
                цТип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный");
			Иначе
				#Если Клиент Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "У документа <" + ВыборкаДокументов.Документ + "> изменены реквизиты, но исходный электронный счет-фактура
										| не найден в исходящих документах. Нельзя установить статус документа <Исправленный>";
					Сообщение.Сообщить();
				 #КонецЕсли
                Продолжить;
                
            КонецЕсли;
            
        Иначе
            
            // изменились суммы документа
            цТип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный");
            
        КонецЕсли;
        
        НоваяСтрока = Объект.ДокументыДляОтражения.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокументов,, "ТипБСО");
        НоваяСтрока.Исходящий = Истина;
        НоваяСтрока.ОтобразитьПолучателю = Истина;
        НоваяСтрока.Тип = цТип;
        Если цТип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Исправленный") Тогда
            // Дата аннулирования у исправленного может быть либо равна дате совершения Исходного (родителя), либо дате совершения исправленного
            НоваяСтрока.ДатаАннулирования = НоваяСтрока.Дата;//Объект.Дата;
            НоваяСтрока.КЭСЧФ = ПредыдущийДокумент.Объект + "-" + Формат(ПредыдущийДокумент.Год, "ЧЦ=4; ЧГ=0") + "-" + Формат(ПредыдущийДокумент.Номер, "ЧЦ=10; ЧВН=; ЧГ=0");
        ИначеЕсли цТип = ПредопределенноеЗначение("Перечисление.ТипыЭСЧФ.Дополнительный") Тогда
            НоваяСтрока.КЭСЧФ = ПредыдущийДокумент.Объект + "-" + Формат(ПредыдущийДокумент.Год, "ЧЦ=4; ЧГ=0") + "-" + Формат(ПредыдущийДокумент.Номер, "ЧЦ=10; ЧВН=; ЧГ=0");
        КонецЕсли;
        Если ЗначениеЗаполнено(ВыборкаДокументов.ТипБСО) Тогда
            НоваяСтрока.КодБланка = ВыборкаДокументов.ТипБСО.ТипБСО;
            НоваяСтрока.ТипБСО    = НоваяСтрока.КодБланка.ТипБСО;
            //Если ЗначениеЗаполнено(НоваяСтрока.НомерНакладной) Тогда
            //    НоваяСтрока.НомерНакладной = ВыборкаДокументов.НомерНакладной;
            //ИначеЕсли НоваяСтрока.КодБланка <> ПредопределенноеЗначение("Справочник.ТипыБСО.ТТН1") И НоваяСтрока.КодБланка <> ПредопределенноеЗначение("Справочник.ТипыБСО.ТН2") Тогда
            //    НоваяСтрока.НомерНакладной = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДокументов.Документ)
            //КонецЕсли;
		//    НоваяСтрока.НомерНакладной = НомерНакладной;
		//Иначе
            НоваяСтрока.НомерНакладной = НомерНакладной;
        КонецЕсли;
        
    КонецЦикла;

КонецПроцедуры //ПакетИсходящихЭСЧФ_ЗаполитьРеализации

////////////////////////////////////////////////////////////////////////////////
//
// Процедура ЗаполнитьРеализациейФизЛицам
//
// Описание:
//  заполняет таблицу товаров инфомрацией о реализации без получателей за период
//
// Параметры (название, тип, дифференцированное значение)
//  Товары - ТаблицаЗначений, ДокументОбъектЭлектронныйСчетФактура(Выданный|Полученный)ТабличнаяЧасть.Товары - таблица товаров для заполнения
//  Организация - СправочникСсылка.Организации - организация для выборки данных
//  НачалоПериода - Дата - начало периода выборки данных
//  КонецПериода - Дата - конец периода выборки данных
//
Процедура ЭлектронныйСчетФактураВыданный_ЗаполнитьРеализациейФизЛицам( Товары, Организация, НачалоПериода, КонецПериода ) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("РасчетнаяСтавка", ПредопределенноеЗначение("Перечисление.СтавкиНДС.РасчетнаяСтавка"));
	Запрос.УстановитьПараметр("БезНДС", ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"));
	Запрос.УстановитьПараметр("СчетаРеализации", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Продажи"));
	СчетаПоступленияНаличныхСредств = Новый Массив;
	СчетаПоступленияНаличныхСредств.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Касса"));
	СчетаПоступленияНаличныхСредств.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ИнкассированныеДС"));
	Запрос.УстановитьПараметр("СчетаПоступленияНаличныхСредств", СчетаПоступленияНаличныхСредств);
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС"));
	ВидыСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"));
	Запрос.УстановитьПараметр("Субконто", ВидыСубконто);
	Запрос.УстановитьПараметр("СубконтоПрочих", ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы"));
	Запрос.УстановитьПараметр("СчетаПрочихДоходов", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ОперационныеДоходыИРасходы"));
	Запрос.УстановитьПараметр("НДС20", ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20"));
	Запрос.УстановитьПараметр("СчетаПрочихДоходовПоТекДеятельности", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности"));
	Запрос.УстановитьПараметр("СчетНДС", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДС"));
	Налоги = Новый Массив;
	Налоги.Добавить(Неопределено);
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"));
	Запрос.УстановитьПараметр("Налоги", Налоги);//ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборот КАК Реализация,
	|	ХозрасчетныйОбороты.Субконто1 КАК СтавкаНДС,
	|	ХозрасчетныйОбороты.Субконто2 КАК ВидДеятельности,
	|	ЕСТЬNULL(ПроцентНДС.СреднийПроцентНДС, 0) КАК ПроцентНДС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Счет В ИЕРАРХИИ (&СчетаРеализации)
	|				И НЕ Счет.ЗапретитьИспользоватьВПроводках,
	|			&Субконто,
	|			Организация = &Организация
	|				И Субконто1 = &РасчетнаяСтавка,
	|			КорСчет В ИЕРАРХИИ (&СчетаПоступленияНаличныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ю_02_ЗакрытиеМесяцаВРозницеНДС.СреднийПроцентНДС КАК СреднийПроцентНДС
	|		ИЗ
	|			Документ.ю_02_ЗакрытиеМесяцаВРознице.НДС КАК ю_02_ЗакрытиеМесяцаВРозницеНДС
	|		ГДЕ
	|			ю_02_ЗакрытиеМесяцаВРозницеНДС.Ссылка.Организация = &Организация
	|			И ю_02_ЗакрытиеМесяцаВРозницеНДС.Ссылка.Дата < &НачалоПериода
	|			И ю_02_ЗакрытиеМесяцаВРозницеНДС.Ссылка.Проведен
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			ю_02_ЗакрытиеМесяцаВРозницеНДС.Ссылка.Дата УБЫВ) КАК ПроцентНДС
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборот,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Счет В ИЕРАРХИИ (&СчетаРеализации)
	|				И НЕ Счет.ЗапретитьИспользоватьВПроводках,
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1 В (&РасчетнаяСтавка, &БезНДС),
	|			КорСчет В ИЕРАРХИИ (&СчетаПоступленияНаличныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборот,
	|	&НДС20,
	|	ХозрасчетныйОбороты.Субконто1,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Счет В ИЕРАРХИИ (&СчетаПрочихДоходов)
	|				И НЕ Счет.ЗапретитьИспользоватьВПроводках,
	|			&СубконтоПрочих,
	|			Организация = &Организация,
	|			КорСчет В ИЕРАРХИИ (&СчетаПоступленияНаличныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборот,
	|	&НДС20,
	|	ХозрасчетныйОбороты.Субконто2,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Период, Счет = &СчетаПрочихДоходовПоТекДеятельности, , , КорСчет = &СчетНДС, ) КАК ХозрасчетныйОбороты";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.Товар         = СокрЛП(Выборка.ВидДеятельности);//"Реализация товаров физ. лицам";
		НоваяСтрока.Стоимость     = Выборка.Реализация;
		НоваяСтрока.СтавкаНДС     = Выборка.СтавкаНДС;//ПредопределенноеЗначение("Перечисление.СтавкиНДС.РасчетнаяСтавка");
		Если ЗначениеЗаполнено(Выборка.ПроцентНДС) Тогда
			НоваяСтрока.ТипСтавкиНДС  = ПредопределенноеЗначение("Перечисление.ТипыСтавокНДСЭСЧФ.Расчетная");
			НоваяСтрока.ПроцентНДС = Выборка.ПроцентНДС
		Иначе
			НоваяСтрока.ТипСтавкиНДС  = ПредопределенноеЗначение("Перечисление.ТипыСтавокНДСЭСЧФ.Фиксированная");
			НоваяСтрока.ПроцентНДС = УчетНДС.ПолучитьСтавкуНДС(Выборка.СтавкаНДС)
		КонецЕсли;
		НоваяСтрока.СуммаНДС      = Выборка.Реализация * НоваяСтрока.ПроцентНДС / 100;
		НоваяСтрока.СтоимостьСНДС = НоваяСтрока.Стоимость + НоваяСтрока.СуммаНДС;
	КонецЦикла;

КонецПроцедуры //ЭлектронныйСчетФактураВыданный_ЗаполнитьРеализациейФизЛицам
